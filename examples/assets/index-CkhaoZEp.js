var L=Object.defineProperty;var T=(l,o,e)=>o in l?L(l,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[o]=e;var n=(l,o,e)=>(T(l,typeof o!="symbol"?o+"":o,e),e);import{U as f,i as x}from"./import-wrapper-prod-BtIvq9o4.js";import{R as F,f as I,V as k,c as N,e as _,x as z,y as G}from"./web-ifc-api-BFxa4VQ4.js";import{a as y,L as H,b as O}from"./Line2-COOhHMVl.js";import{M as S}from"./mark-Fi_tU5tP.js";const g=class g{constructor(o,e){n(this,"scene");n(this,"onSelect",new f);n(this,"type");n(this,"selectCurve");n(this,"selectPoints");n(this,"hoverCurve");n(this,"hoverPoints");n(this,"caster",new F);this.scene=o,this.type=e,this.hoverCurve=this.newCurve(.003,4473924,!1),this.hoverPoints=this.newPoints(5,4473924),this.selectCurve=this.newCurve(.005,16777215,!0),this.selectPoints=this.newPoints(7,16777215)}dispose(){this.selectCurve&&this.scene.remove(this.selectCurve),this.selectCurve.material.dispose(),this.selectCurve.geometry.dispose(),this.selectCurve=null,this.hoverCurve.material.dispose(),this.hoverCurve.geometry.dispose(),this.hoverCurve=null,this.hoverPoints.material.dispose(),this.hoverPoints.geometry.dispose(),this.selectPoints.material.dispose(),this.selectPoints.geometry.dispose(),this.scene=null}castRay(o,e,s,i){const r=new I,t=s.getBoundingClientRect();r.x=(o.clientX-t.left)/t.width*2-1,r.y=-((o.clientY-t.top)/t.height)*2+1,this.caster.setFromCamera(r,e);const h=this.caster.intersectObjects(i);return h.length?h[0]:null}select(o){this.highlight(o,this.selectCurve,this.selectPoints,!0),this.onSelect.trigger(o)}unSelect(){this.selectCurve.removeFromParent(),this.selectPoints.removeFromParent()}hover(o){this.highlight(o,this.hoverCurve,this.hoverPoints,!1)}unHover(){this.hoverCurve.removeFromParent(),this.hoverPoints.removeFromParent()}highlight(o,e,s,i){const{alignment:r}=o.curve;this.scene.add(e),this.scene.add(s);const t=[],h=[],a=[];for(const d of r[this.type]){const w=d.mesh.geometry.attributes.position;for(const c of w.array)t.push(c);if(i){let c;if(this.type==="absolute"){const{horizontal:m}=d.alignment;c=m[d.index].data.TYPE}else c=d.data.TYPE;const R=g.settings.colors[c]||[1,1,1];for(let m=0;m<w.count;m++)h.push(...R)}const[P,E,A]=w.array;a.push(new k(P,E,A))}const u=t[t.length-3],M=t[t.length-2],b=t[t.length-1];a.push(new k(u,M,b)),t.length/3>e.geometry.attributes.position.count&&(e.geometry.dispose(),e.geometry=new y),e.geometry.setPositions(t),i&&e.geometry.setColors(h),s.geometry.setFromPoints(a)}newCurve(o,e,s){const i=new y,r=new H({color:e,linewidth:o,vertexColors:s,worldUnits:!1,depthTest:!1}),t=new O(i,r);return this.scene.add(t),t}newPoints(o,e){const s=new N,i=new _(new Float32Array,3);s.setAttribute("position",i);const r=new z({size:o,color:e,sizeAttenuation:!1,depthTest:!1}),t=new G(s,r);return t.frustumCulled=!1,this.scene.add(t),t}};n(g,"settings",{colors:{LINE:[213/255,0/255,255/255],CIRCULARARC:[0/255,46,255/255],CLOTHOID:[0/255,255/255,0/255],PARABOLICARC:[0/255,255/255,72/255],CONSTANTGRADIENT:[213/255,0/255,255/255]}});let p=g;const v=class v extends x{constructor(e){super(e);n(this,"onHighlight",new f);n(this,"enabled",!0);n(this,"highlighter");n(this,"mouseMarkers");n(this,"onMarkerChange",new f);n(this,"onMarkerHidden",new f);n(this,"_curves",[]);n(this,"_world",null);n(this,"onClick",e=>{if(!this.enabled||!this.highlighter)return;if(!this.world)throw new Error("No world found!");if(!this.world.renderer)return;const s=this.world.renderer.three.domElement,i=this.world.camera.three,r=this.highlighter.castRay(e,i,s,this._curves);if(r){const t=r.object;this.highlighter.select(t),this.updateMarker(r,"select");const{point:h,index:a}=r;a!==void 0&&this.onHighlight.trigger({curve:t,point:h,index:a});return}this.highlighter.unSelect(),this.mouseMarkers&&(this.mouseMarkers.hover.visible=!1),this.onMarkerHidden.trigger({type:"hover"})});n(this,"onMouseMove",async e=>{if(!this.enabled||!this.highlighter)return;if(!this.world)throw new Error("No world found!");if(!this.world.renderer)return;const s=this.world.renderer.three.domElement,i=this.world.camera.three,r=this.highlighter.castRay(e,i,s,this._curves);if(r){this.highlighter.hover(r.object),this.updateMarker(r,"hover");return}this.highlighter.unHover()});this.components.add(v.uuid,this)}get world(){return this._world}set world(e){var i,r,t;if(e===this._world||(this._world&&this.setupEvents(!1),this._world=e,(i=this.highlighter)==null||i.dispose(),(r=this.mouseMarkers)==null||r.hover.dispose(),(t=this.mouseMarkers)==null||t.select.dispose(),!e))return;const s=e.scene.three;this.highlighter=new p(s,"absolute"),this.mouseMarkers={select:this.newMouseMarker("#ffffff",e),hover:this.newMouseMarker("#575757",e)},this.setupEvents(!0)}draw(e){if(!e.civilData)throw new Error("Model must have civil data!");if(!this.world)throw new Error("A world must be given before drawing an alignment!");const s=this.world.scene.three;for(const[i,r]of e.civilData.alignments)for(const{mesh:t}of r.absolute)s.add(t),this._curves.push(t)}newMouseMarker(e,s){const i=s.scene.three,r=document.createElement("div");r.style.backgroundColor=e,r.style.width="1rem",r.style.height="1rem",r.style.borderRadius="1rem";const t=new S(s,r,i);return t.visible=!1,t}setMarker(e,s,i){if(!this.mouseMarkers)throw new Error("No mouse markers found! Initialize the world before using this.");const r=e.getPointAt(s,"absolute");this.mouseMarkers[i].visible=!0,this.mouseMarkers[i].three.position.copy(r)}hideMarker(e){if(!this.mouseMarkers)throw new Error("No mouse markers found! Initialize the world before using this.");const s=this.mouseMarkers[e].three;s.visible=!1}setupEvents(e){if(!this.world)throw new Error("No world found!");if(!this.world.renderer)return;const s=this.world.renderer.three.domElement;e?(s.addEventListener("click",this.onClick),s.addEventListener("mousemove",this.onMouseMove)):(s.removeEventListener("click",this.onClick),s.removeEventListener("mousemove",this.onMouseMove))}updateMarker(e,s){if(!this.mouseMarkers)return;const{point:i,object:r}=e,t=r,h=t.curve,a=t.curve.alignment,u=a.getPercentageAt(i,"absolute");this.mouseMarkers[s].visible=!0,this.mouseMarkers[s].three.position.copy(i),u!==null&&this.onMarkerChange.trigger({alignment:a,percentage:u,type:s,curve:h})}};n(v,"uuid","0a59c09e-2b49-474a-9320-99f51f40f182");let C=v;export{C,p as a};
