var A=Object.defineProperty;var B=(M,m,t)=>m in M?A(M,m,{enumerable:!0,configurable:!0,writable:!0,value:t}):M[m]=t;var l=(M,m,t)=>(B(M,typeof m!="symbol"?m+"":m,t),t);import{V as b,k as g,o as S,B as D,M as E,a as U,Q as V,I}from"./web-ifc-api-Glg4rFxW.js";import{g as N}from"./lil-gui.module.min-Bc0DeA9g.js";import{S as T}from"./stats.min-GTpOrGrX.js";import{a as F,E as L,C as X}from"./index-BjtWM7Op.js";import{W as C,S as G}from"./index-BXYZy8Yd.js";import{G as W}from"./index-BOy52J82.js";import{D as P,S as k,a as v}from"./simple-camera-FtEnIFQL.js";import{F as J}from"./index-BHbmf4IB.js";import"./_commonjsHelpers-Cpj98o6Y.js";const u=class u extends F{constructor(t){super(t);l(this,"enabled",!0);l(this,"onDisposed",new L);l(this,"_absoluteMin");l(this,"_absoluteMax");l(this,"_meshes",[]);this.components.add(u.uuid,this),this._absoluteMin=u.newBound(!0),this._absoluteMax=u.newBound(!1)}static getDimensions(t){const{min:e,max:a}=t,r=Math.abs(a.x-e.x),o=Math.abs(a.y-e.y),s=Math.abs(a.z-e.z),c=new b;return c.subVectors(a,e).divideScalar(2).add(e),{width:r,height:o,depth:s,center:c}}static newBound(t){const e=t?1:-1;return new b(e*Number.MAX_VALUE,e*Number.MAX_VALUE,e*Number.MAX_VALUE)}static getBounds(t,e,a){const r=a||this.newBound(!1),o=e||this.newBound(!0);for(const s of t)s.x<o.x&&(o.x=s.x),s.y<o.y&&(o.y=s.y),s.z<o.z&&(o.z=s.z),s.x>r.x&&(r.x=s.x),s.y>r.y&&(r.y=s.y),s.z>r.z&&(r.z=s.z);return new g(e,a)}dispose(){const t=this.components.get(P);for(const e of this._meshes)t.destroy(e);this._meshes=[],this.onDisposed.trigger(u.uuid),this.onDisposed.reset()}get(){const t=this._absoluteMin.clone(),e=this._absoluteMax.clone();return new g(t,e)}getSphere(){const t=this._absoluteMin.clone(),e=this._absoluteMax.clone(),a=Math.abs((e.x-t.x)/2),r=Math.abs((e.y-t.y)/2),o=Math.abs((e.z-t.z)/2),s=new b(t.x+a,t.y+r,t.z+o),c=s.distanceTo(t);return new S(s,c)}getMesh(){const t=new g(this._absoluteMin,this._absoluteMax),e=u.getDimensions(t),{width:a,height:r,depth:o,center:s}=e,c=new D(a,r,o),d=new E(c);return this._meshes.push(d),d.position.copy(s),d}reset(){this._absoluteMin=u.newBound(!0),this._absoluteMax=u.newBound(!1)}add(t){for(const e of t.items)this.addMesh(e.mesh)}addMesh(t,e){if(!t.geometry.index)return;const a=u.getFragmentBounds(t);t.updateMatrixWorld();const r=t.matrixWorld,o=new U,s=t instanceof I,c=new Set;if(e&&t instanceof V)for(const d of e){const n=t.fragment.getInstancesIDs(d);if(n)for(const i of n)c.add(i)}else c.add(0);for(const d of c){const n=a.min.clone(),i=a.max.clone();s&&(t.getMatrixAt(d,o),n.applyMatrix4(o),i.applyMatrix4(o)),n.applyMatrix4(r),i.applyMatrix4(r),n.x<this._absoluteMin.x&&(this._absoluteMin.x=n.x),n.y<this._absoluteMin.y&&(this._absoluteMin.y=n.y),n.z<this._absoluteMin.z&&(this._absoluteMin.z=n.z),n.x>this._absoluteMax.x&&(this._absoluteMax.x=n.x),n.y>this._absoluteMax.y&&(this._absoluteMax.y=n.y),n.z>this._absoluteMax.z&&(this._absoluteMax.z=n.z),i.x>this._absoluteMax.x&&(this._absoluteMax.x=i.x),i.y>this._absoluteMax.y&&(this._absoluteMax.y=i.y),i.z>this._absoluteMax.z&&(this._absoluteMax.z=i.z),i.x<this._absoluteMin.x&&(this._absoluteMin.x=i.x),i.y<this._absoluteMin.y&&(this._absoluteMin.y=i.y),i.z<this._absoluteMin.z&&(this._absoluteMin.z=i.z)}}static getFragmentBounds(t){const e=t.geometry.attributes.position,a=Number.MAX_VALUE,r=-a,o=new b(a,a,a),s=new b(r,r,r);if(!t.geometry.index)throw new Error("Geometry must be indexed!");const c=Array.from(t.geometry.index.array);for(let d=0;d<c.length;d++){if(d%3===0&&c[d]===0&&c[d+1]===0&&c[d+2]===0){d+=2;continue}const n=c[d],i=e.getX(n),y=e.getY(n),p=e.getZ(n);i<o.x&&(o.x=i),y<o.y&&(o.y=y),p<o.z&&(o.z=p),i>s.x&&(s.x=i),y>s.y&&(s.y=y),p>s.z&&(s.z=p)}return new g(o,s)}};l(u,"uuid","d1444724-dba6-4cdd-a0c7-68ee1450d166");let w=u;const Q=document.getElementById("container"),f=new X,R=f.get(C),x=R.create();x.scene=new k(f);x.renderer=new G(f,Q);x.camera=new v(f);f.init();x.camera.controls.setLookAt(12,6,8,0,0,-10);x.scene.setup();const Y=f.get(W);Y.create(x);const Z=new J(f),j=await fetch("../../../../../resources/small.frag"),q=await j.arrayBuffer(),H=new Uint8Array(q),_=Z.load(H);x.scene.three.add(_);const z=f.get(w);z.add(_);const K=z.getMesh();z.reset();const O={fitToModel:()=>x.camera.controls.fitToSphere(K,!0)},$=new N;$.add(O,"fitToModel").name("Fit to model");const h=new T;h.showPanel(2);document.body.append(h.dom);h.dom.style.left="0px";h.dom.style.right="auto";x.renderer.onBeforeUpdate.add(()=>h.begin());x.renderer.onAfterUpdate.add(()=>h.end());
