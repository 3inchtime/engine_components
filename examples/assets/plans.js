import{d as w,L as S,C as F}from"./web-ifc-api-D3oDn2HF.js";import{a as P,W as L,S as A,O as B,G as M,F as x,d as D,e as G}from"./index-DPB0U-mi.js";import{P as O,a as W,H as U,C as R}from"./index-B7gYOE6O.js";import{p as T,J as p,m}from"./index-K5IA6oiZ.js";import{S as v}from"./stats.min-DDrWCSVO.js";const H=document.getElementById("container"),n=new P,_=n.get(L),e=_.create();e.scene=new A(n);e.renderer=new O(n,H);e.camera=new B(n);e.camera._aaaaa="heyyyy";e.renderer.postproduction.enabled=!0;e.renderer.postproduction.customEffects.outlineEnabled=!0;n.init();e.camera.controls.setLookAt(12,6,8,0,0,-10);e.scene.setup();const y=n.get(M);y.config.color.setHex(6710886);const k=y.create(e);k.three.position.y-=1;e.renderer.postproduction.customEffects.excludedMeshes.push(k.three);e.scene.three.background=null;const u=n.get(x),$=await fetch("https://thatopen.github.io/engine_components/resources/small.frag"),j=await $.arrayBuffer(),J=new Uint8Array(j),s=u.load(J);e.scene.three.add(s);const N=await fetch("https://thatopen.github.io/engine_components/resources/small.json"),q=await N.json();s.setLocalProperties(q);const c=new v;c.showPanel(2);document.body.append(c.dom);c.dom.style.left="0px";c.dom.style.zIndex="unset";e.renderer.onBeforeUpdate.add(()=>c.begin());e.renderer.onAfterUpdate.add(()=>c.end());const i=n.get(W);i.world=e;await i.generate(s);const f=n.get(U);f.setup({world:e});const z=n.get(D),g=z.create(e);for(const t of s.items)g.add(t.mesh);g.needsUpdate=!0;e.camera.controls.addEventListener("sleep",()=>{g.needsUpdate=!0});const a=n.get(G),r=n.get(R);a.byModel(s.uuid,s);a.byEntity(s);const C=a.find({models:[s.uuid]}),h=a.find({entities:["IFCWALLSTANDARDCASE","IFCWALL"]}),b=a.find({entities:["IFCDOOR","IFCWINDOW","IFCPLATE","IFCMEMBER"]}),V=new w({color:"gray",side:2}),K=new S({color:"black"}),Q=new w({color:"black",opacity:.5,side:2,transparent:!0});r.styles.create("thick",new Set,e,K,V,Q);for(const t in h){const o=u.list.get(t);if(!o)continue;const{mesh:l}=o;r.styles.list.thick.fragments[t]=new Set(h[t]),r.styles.list.thick.meshes.add(l)}r.styles.create("thin",new Set,e);for(const t in b){const o=u.list.get(t);if(!o)continue;const{mesh:l}=o;r.styles.list.thin.fragments[t]=new Set(b[t]),r.styles.list.thin.meshes.add(l)}await r.update(!0);T.init();const E=p.create(()=>m`
  <bim-panel active label="Plans Tutorial" class="options-menu">
      <bim-panel-section collapsed name="floorPlans" label="Plan list">
      </bim-panel-section>
    </bim-panel>
    `);document.body.append(E);const X=e.renderer.postproduction.customEffects.minGloss,d=new F("white"),I=E.querySelector("bim-panel-section[name='floorPlans']");for(const t of i.list){const o=p.create(()=>m`
      <bim-button checked label="${t.name}"
        @click="${()=>{e.renderer.postproduction.customEffects.minGloss=.1,f.backupColor=d,a.setColor(C,d),e.scene.three.background=d,i.goTo(t.id)}}">
      </bim-button>
    `);I.append(o)}const Y=e.scene.three.background,Z=p.create(()=>m`
      <bim-button checked label="Exit"
        @click="${()=>{f.backupColor=null,e.renderer.postproduction.customEffects.minGloss=X,a.resetColor(C),e.scene.three.background=Y,i.exitPlanView()}}">
      </bim-button>
    `);I.append(Z);
