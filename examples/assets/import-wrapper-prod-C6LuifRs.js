var $i=Object.defineProperty;var eo=(c,a,o)=>a in c?$i(c,a,{enumerable:!0,configurable:!0,writable:!0,value:o}):c[a]=o;var Z=(c,a,o)=>(eo(c,typeof a!="symbol"?a+"":a,o),o);import{E as to,c as no,D as ro}from"./index-DPB0U-mi.js";import{O as io,f as Se,V as Ve,a as fe,s as dn,t as ii,M as oi,c as ai,F as Zr,n as we,m as oo,u as ft,H as sr,N as ao,v as so,C as Mt,e as si,l as uo,w as Et,x as ze,D as lo,y as co,z as fo,A as ho,E as po,R as Gr,J as mo,K as vo,Q as go,X as ui,d as yo,I as Wr,p as bo,Y as xo}from"./web-ifc-api-D3oDn2HF.js";import{c as Yr,g as wo}from"./stats.min-DDrWCSVO.js";class Do extends io{constructor(a=document.createElement("div")){super(),this.isCSS2DObject=!0,this.element=a,this.element.style.position="absolute",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.center=new Se(.5,.5),this.addEventListener("removed",function(){this.traverse(function(o){o.element instanceof Element&&o.element.parentNode!==null&&o.element.parentNode.removeChild(o.element)})})}copy(a,o){return super.copy(a,o),this.element=a.element.cloneNode(!0),this.center=a.center,this}}const lt=new Ve,Xr=new fe,Jr=new fe,_r=new Ve,$r=new Ve;class So{constructor(a={}){const o=this;let l,v,b,S;const k={objects:new WeakMap},M=a.element!==void 0?a.element:document.createElement("div");M.style.overflow="hidden",this.domElement=M,this.getSize=function(){return{width:l,height:v}},this.render=function(q,N){q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),N.parent===null&&N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),Xr.copy(N.matrixWorldInverse),Jr.multiplyMatrices(N.projectionMatrix,Xr),K(q,q,N),A(q)},this.setSize=function(q,N){l=q,v=N,b=l/2,S=v/2,M.style.width=q+"px",M.style.height=N+"px"};function K(q,N,ie){if(q.isCSS2DObject){lt.setFromMatrixPosition(q.matrixWorld),lt.applyMatrix4(Jr);const oe=q.visible===!0&&lt.z>=-1&&lt.z<=1&&q.layers.test(ie.layers)===!0;if(q.element.style.display=oe===!0?"":"none",oe===!0){q.onBeforeRender(o,N,ie);const ge=q.element;ge.style.transform="translate("+-100*q.center.x+"%,"+-100*q.center.y+"%)translate("+(lt.x*b+b)+"px,"+(-lt.y*S+S)+"px)",ge.parentNode!==M&&M.appendChild(ge),q.onAfterRender(o,N,ie)}const ve={distanceToCameraSquared:X(ie,q)};k.objects.set(q,ve)}for(let oe=0,ve=q.children.length;oe<ve;oe++)K(q.children[oe],N,ie)}function X(q,N){return _r.setFromMatrixPosition(q.matrixWorld),$r.setFromMatrixPosition(N.matrixWorld),_r.distanceToSquared($r)}function U(q){const N=[];return q.traverse(function(ie){ie.isCSS2DObject&&N.push(ie)}),N}function A(q){const N=U(q).sort(function(oe,ve){if(oe.renderOrder!==ve.renderOrder)return ve.renderOrder-oe.renderOrder;const ge=k.objects.get(oe).distanceToCameraSquared,_=k.objects.get(ve).distanceToCameraSquared;return ge-_}),ie=N.length;for(let oe=0,ve=N.length;oe<ve;oe++)N[oe].element.style.zIndex=ie-oe}}}class ca{constructor(a,o,l){Z(this,"three");Z(this,"world");Z(this,"onDisposed",new to);this.world=a;let v;o?v=o:(v=document.createElement("div"),v.style.width="15px",v.style.height="15px",v.style.border="5px solid red"),this.three=new Do(v),(l||a.scene.three).add(this.three),this.visible=!0}set visible(a){this.three.visible=a}get visible(){return this.three.visible}toggleVisibility(){this.visible=!this.visible}dispose(){this.three.removeFromParent(),this.three.element.remove(),this.onDisposed.trigger(),this.onDisposed.reset()}}class Po extends no{constructor(o,l,v){super(o,l,v);Z(this,"three2D",new So);this.onAfterUpdate.add(()=>{if(this.onBeforeUpdate.trigger(this),!this.enabled||!this.currentWorld)return;const b=this.currentWorld.scene.three,S=this.currentWorld.camera.three;b instanceof dn&&this.three2D.render(b,S)}),this.onDisposed.add(()=>{this.three2D.domElement.remove()}),this.onResize.add(({x:b,y:S})=>{this.three2D.setSize(b,S)}),this.setupHtmlRenderer(),this.resize()}setupHtmlRenderer(){this.three2D.domElement.style.position="absolute",this.three2D.domElement.style.top="0px",this.three2D.domElement.style.pointerEvents="none",this.container&&this.container.appendChild(this.three2D.domElement)}}var li={exports:{}};li.exports=pn;li.exports.default=pn;function pn(c,a,o){o=o||2;var l=a&&a.length,v=l?a[0]*o:c.length,b=ci(c,0,v,o,!0),S=[];if(!b||b.next===b.prev)return S;var k,M,K,X,U,A,q;if(l&&(b=Eo(c,a,b,o)),c.length>80*o){k=K=c[0],M=X=c[1];for(var N=o;N<v;N+=o)U=c[N],A=c[N+1],U<k&&(k=U),A<M&&(M=A),U>K&&(K=U),A>X&&(X=A);q=Math.max(K-k,X-M),q=q!==0?32767/q:0}return Rt(b,S,o,k,M,q,0),S}function ci(c,a,o,l,v){var b,S;if(v===or(c,a,o,l)>0)for(b=a;b<o;b+=l)S=ei(b,c[b],c[b+1],S);else for(b=o-l;b>=a;b-=l)S=ei(b,c[b],c[b+1],S);return S&&mn(S,S.next)&&(Ft(S),S=S.next),S}function _e(c,a){if(!c)return c;a||(a=c);var o=c,l;do if(l=!1,!o.steiner&&(mn(o,o.next)||ae(o.prev,o,o.next)===0)){if(Ft(o),o=a=o.prev,o===o.next)break;l=!0}else o=o.next;while(l||o!==a);return a}function Rt(c,a,o,l,v,b,S){if(c){!S&&b&&Oo(c,l,v,b);for(var k=c,M,K;c.prev!==c.next;){if(M=c.prev,K=c.next,b?Bo(c,l,v,b):Co(c)){a.push(M.i/o|0),a.push(c.i/o|0),a.push(K.i/o|0),Ft(c),c=K.next,k=K.next;continue}if(c=K,c===k){S?S===1?(c=ko(_e(c),a,o),Rt(c,a,o,l,v,b,2)):S===2&&To(c,a,o,l,v,b):Rt(_e(c),a,o,l,v,b,1);break}}}}function Co(c){var a=c.prev,o=c,l=c.next;if(ae(a,o,l)>=0)return!1;for(var v=a.x,b=o.x,S=l.x,k=a.y,M=o.y,K=l.y,X=v<b?v<S?v:S:b<S?b:S,U=k<M?k<K?k:K:M<K?M:K,A=v>b?v>S?v:S:b>S?b:S,q=k>M?k>K?k:K:M>K?M:K,N=l.next;N!==a;){if(N.x>=X&&N.x<=A&&N.y>=U&&N.y<=q&&ct(v,k,b,M,S,K,N.x,N.y)&&ae(N.prev,N,N.next)>=0)return!1;N=N.next}return!0}function Bo(c,a,o,l){var v=c.prev,b=c,S=c.next;if(ae(v,b,S)>=0)return!1;for(var k=v.x,M=b.x,K=S.x,X=v.y,U=b.y,A=S.y,q=k<M?k<K?k:K:M<K?M:K,N=X<U?X<A?X:A:U<A?U:A,ie=k>M?k>K?k:K:M>K?M:K,oe=X>U?X>A?X:A:U>A?U:A,ve=rr(q,N,a,o,l),ge=rr(ie,oe,a,o,l),_=c.prevZ,J=c.nextZ;_&&_.z>=ve&&J&&J.z<=ge;){if(_.x>=q&&_.x<=ie&&_.y>=N&&_.y<=oe&&_!==v&&_!==S&&ct(k,X,M,U,K,A,_.x,_.y)&&ae(_.prev,_,_.next)>=0||(_=_.prevZ,J.x>=q&&J.x<=ie&&J.y>=N&&J.y<=oe&&J!==v&&J!==S&&ct(k,X,M,U,K,A,J.x,J.y)&&ae(J.prev,J,J.next)>=0))return!1;J=J.nextZ}for(;_&&_.z>=ve;){if(_.x>=q&&_.x<=ie&&_.y>=N&&_.y<=oe&&_!==v&&_!==S&&ct(k,X,M,U,K,A,_.x,_.y)&&ae(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;J&&J.z<=ge;){if(J.x>=q&&J.x<=ie&&J.y>=N&&J.y<=oe&&J!==v&&J!==S&&ct(k,X,M,U,K,A,J.x,J.y)&&ae(J.prev,J,J.next)>=0)return!1;J=J.nextZ}return!0}function ko(c,a,o){var l=c;do{var v=l.prev,b=l.next.next;!mn(v,b)&&fi(v,l,l.next,b)&&zt(v,b)&&zt(b,v)&&(a.push(v.i/o|0),a.push(l.i/o|0),a.push(b.i/o|0),Ft(l),Ft(l.next),l=c=b),l=l.next}while(l!==c);return _e(l)}function To(c,a,o,l,v,b){var S=c;do{for(var k=S.next.next;k!==S.prev;){if(S.i!==k.i&&Ko(S,k)){var M=hi(S,k);S=_e(S,S.next),M=_e(M,M.next),Rt(S,a,o,l,v,b,0),Rt(M,a,o,l,v,b,0);return}k=k.next}S=S.next}while(S!==c)}function Eo(c,a,o,l){var v=[],b,S,k,M,K;for(b=0,S=a.length;b<S;b++)k=a[b]*l,M=b<S-1?a[b+1]*l:c.length,K=ci(c,k,M,l,!1),K===K.next&&(K.steiner=!0),v.push(Lo(K));for(v.sort(Mo),b=0;b<v.length;b++)o=Ro(v[b],o);return o}function Mo(c,a){return c.x-a.x}function Ro(c,a){var o=zo(c,a);if(!o)return a;var l=hi(o,c);return _e(l,l.next),_e(o,o.next)}function zo(c,a){var o=a,l=c.x,v=c.y,b=-1/0,S;do{if(v<=o.y&&v>=o.next.y&&o.next.y!==o.y){var k=o.x+(v-o.y)*(o.next.x-o.x)/(o.next.y-o.y);if(k<=l&&k>b&&(b=k,S=o.x<o.next.x?o:o.next,k===l))return S}o=o.next}while(o!==a);if(!S)return null;var M=S,K=S.x,X=S.y,U=1/0,A;o=S;do l>=o.x&&o.x>=K&&l!==o.x&&ct(v<X?l:b,v,K,X,v<X?b:l,v,o.x,o.y)&&(A=Math.abs(v-o.y)/(l-o.x),zt(o,c)&&(A<U||A===U&&(o.x>S.x||o.x===S.x&&Fo(S,o)))&&(S=o,U=A)),o=o.next;while(o!==M);return S}function Fo(c,a){return ae(c.prev,c,a.prev)<0&&ae(a.next,c,c.next)<0}function Oo(c,a,o,l){var v=c;do v.z===0&&(v.z=rr(v.x,v.y,a,o,l)),v.prevZ=v.prev,v.nextZ=v.next,v=v.next;while(v!==c);v.prevZ.nextZ=null,v.prevZ=null,Io(v)}function Io(c){var a,o,l,v,b,S,k,M,K=1;do{for(o=c,c=null,b=null,S=0;o;){for(S++,l=o,k=0,a=0;a<K&&(k++,l=l.nextZ,!!l);a++);for(M=K;k>0||M>0&&l;)k!==0&&(M===0||!l||o.z<=l.z)?(v=o,o=o.nextZ,k--):(v=l,l=l.nextZ,M--),b?b.nextZ=v:c=v,v.prevZ=b,b=v;o=l}b.nextZ=null,K*=2}while(S>1);return c}function rr(c,a,o,l,v){return c=(c-o)*v|0,a=(a-l)*v|0,c=(c|c<<8)&16711935,c=(c|c<<4)&252645135,c=(c|c<<2)&858993459,c=(c|c<<1)&1431655765,a=(a|a<<8)&16711935,a=(a|a<<4)&252645135,a=(a|a<<2)&858993459,a=(a|a<<1)&1431655765,c|a<<1}function Lo(c){var a=c,o=c;do(a.x<o.x||a.x===o.x&&a.y<o.y)&&(o=a),a=a.next;while(a!==c);return o}function ct(c,a,o,l,v,b,S,k){return(v-S)*(a-k)>=(c-S)*(b-k)&&(c-S)*(l-k)>=(o-S)*(a-k)&&(o-S)*(b-k)>=(v-S)*(l-k)}function Ko(c,a){return c.next.i!==a.i&&c.prev.i!==a.i&&!Ao(c,a)&&(zt(c,a)&&zt(a,c)&&No(c,a)&&(ae(c.prev,c,a.prev)||ae(c,a.prev,a))||mn(c,a)&&ae(c.prev,c,c.next)>0&&ae(a.prev,a,a.next)>0)}function ae(c,a,o){return(a.y-c.y)*(o.x-a.x)-(a.x-c.x)*(o.y-a.y)}function mn(c,a){return c.x===a.x&&c.y===a.y}function fi(c,a,o,l){var v=fn(ae(c,a,o)),b=fn(ae(c,a,l)),S=fn(ae(o,l,c)),k=fn(ae(o,l,a));return!!(v!==b&&S!==k||v===0&&cn(c,o,a)||b===0&&cn(c,l,a)||S===0&&cn(o,c,l)||k===0&&cn(o,a,l))}function cn(c,a,o){return a.x<=Math.max(c.x,o.x)&&a.x>=Math.min(c.x,o.x)&&a.y<=Math.max(c.y,o.y)&&a.y>=Math.min(c.y,o.y)}function fn(c){return c>0?1:c<0?-1:0}function Ao(c,a){var o=c;do{if(o.i!==c.i&&o.next.i!==c.i&&o.i!==a.i&&o.next.i!==a.i&&fi(o,o.next,c,a))return!0;o=o.next}while(o!==c);return!1}function zt(c,a){return ae(c.prev,c,c.next)<0?ae(c,a,c.next)>=0&&ae(c,c.prev,a)>=0:ae(c,a,c.prev)<0||ae(c,c.next,a)<0}function No(c,a){var o=c,l=!1,v=(c.x+a.x)/2,b=(c.y+a.y)/2;do o.y>b!=o.next.y>b&&o.next.y!==o.y&&v<(o.next.x-o.x)*(b-o.y)/(o.next.y-o.y)+o.x&&(l=!l),o=o.next;while(o!==c);return l}function hi(c,a){var o=new ir(c.i,c.x,c.y),l=new ir(a.i,a.x,a.y),v=c.next,b=a.prev;return c.next=a,a.prev=c,o.next=v,v.prev=o,l.next=o,o.prev=l,b.next=l,l.prev=b,l}function ei(c,a,o,l){var v=new ir(c,a,o);return l?(v.next=l.next,v.prev=l,l.next.prev=v,l.next=v):(v.prev=v,v.next=v),v}function Ft(c){c.next.prev=c.prev,c.prev.next=c.next,c.prevZ&&(c.prevZ.nextZ=c.nextZ),c.nextZ&&(c.nextZ.prevZ=c.prevZ)}function ir(c,a,o){this.i=c,this.x=a,this.y=o,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}pn.deviation=function(c,a,o,l){var v=a&&a.length,b=v?a[0]*o:c.length,S=Math.abs(or(c,0,b,o));if(v)for(var k=0,M=a.length;k<M;k++){var K=a[k]*o,X=k<M-1?a[k+1]*o:c.length;S-=Math.abs(or(c,K,X,o))}var U=0;for(k=0;k<l.length;k+=3){var A=l[k]*o,q=l[k+1]*o,N=l[k+2]*o;U+=Math.abs((c[A]-c[N])*(c[q+1]-c[A+1])-(c[A]-c[q])*(c[N+1]-c[A+1]))}return S===0&&U===0?0:Math.abs((U-S)/S)};function or(c,a,o,l){for(var v=0,b=a,S=o-l;b<o;b+=l)v+=(c[S]-c[b])*(c[b+1]+c[S+1]),S=b;return v}pn.flatten=function(c){for(var a=c[0][0].length,o={vertices:[],holes:[],dimensions:a},l=0,v=0;v<c.length;v++){for(var b=0;b<c[v].length;b++)for(var S=0;S<a;S++)o.vertices.push(c[v][b][S]);v>0&&(l+=c[v-1].length,o.holes.push(l))}return o};const jo={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class ht{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const Vo=new ii(-1,1,1,-1,0,1);class Uo extends ai{constructor(){super(),this.setAttribute("position",new Zr([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Zr([0,2,0,0,2,0],2))}}const qo=new Uo;class di{constructor(a){this._mesh=new oi(qo,a)}dispose(){this._mesh.geometry.dispose()}render(a){a.render(this._mesh,Vo)}get material(){return this._mesh.material}set material(a){this._mesh.material=a}}class pi extends ht{constructor(a,o){super(),this.textureID=o!==void 0?o:"tDiffuse",a instanceof we?(this.uniforms=a.uniforms,this.material=a):a&&(this.uniforms=oo.clone(a.uniforms),this.material=new we({name:a.name!==void 0?a.name:"unspecified",defines:Object.assign({},a.defines),uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader})),this.fsQuad=new di(this.material)}render(a,o,l){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=l.texture),this.fsQuad.material=this.material,this.renderToScreen?(a.setRenderTarget(null),this.fsQuad.render(a)):(a.setRenderTarget(o),this.clear&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),this.fsQuad.render(a))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class ti extends ht{constructor(a,o){super(),this.scene=a,this.camera=o,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(a,o,l){const v=a.getContext(),b=a.state;b.buffers.color.setMask(!1),b.buffers.depth.setMask(!1),b.buffers.color.setLocked(!0),b.buffers.depth.setLocked(!0);let S,k;this.inverse?(S=0,k=1):(S=1,k=0),b.buffers.stencil.setTest(!0),b.buffers.stencil.setOp(v.REPLACE,v.REPLACE,v.REPLACE),b.buffers.stencil.setFunc(v.ALWAYS,S,4294967295),b.buffers.stencil.setClear(k),b.buffers.stencil.setLocked(!0),a.setRenderTarget(l),this.clear&&a.clear(),a.render(this.scene,this.camera),a.setRenderTarget(o),this.clear&&a.clear(),a.render(this.scene,this.camera),b.buffers.color.setLocked(!1),b.buffers.depth.setLocked(!1),b.buffers.color.setMask(!0),b.buffers.depth.setMask(!0),b.buffers.stencil.setLocked(!1),b.buffers.stencil.setFunc(v.EQUAL,1,4294967295),b.buffers.stencil.setOp(v.KEEP,v.KEEP,v.KEEP),b.buffers.stencil.setLocked(!0)}}class Qo extends ht{constructor(){super(),this.needsSwap=!1}render(a){a.state.buffers.stencil.setLocked(!1),a.state.buffers.stencil.setTest(!1)}}class Ho{constructor(a,o){if(this.renderer=a,this._pixelRatio=a.getPixelRatio(),o===void 0){const l=a.getSize(new Se);this._width=l.width,this._height=l.height,o=new ft(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:sr}),o.texture.name="EffectComposer.rt1"}else this._width=o.width,this._height=o.height;this.renderTarget1=o,this.renderTarget2=o.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new pi(jo),this.copyPass.material.blending=ao,this.clock=new so}swapBuffers(){const a=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=a}addPass(a){this.passes.push(a),a.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(a,o){this.passes.splice(o,0,a),a.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(a){const o=this.passes.indexOf(a);o!==-1&&this.passes.splice(o,1)}isLastEnabledPass(a){for(let o=a+1;o<this.passes.length;o++)if(this.passes[o].enabled)return!1;return!0}render(a){a===void 0&&(a=this.clock.getDelta());const o=this.renderer.getRenderTarget();let l=!1;for(let v=0,b=this.passes.length;v<b;v++){const S=this.passes[v];if(S.enabled!==!1){if(S.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(v),S.render(this.renderer,this.writeBuffer,this.readBuffer,a,l),S.needsSwap){if(l){const k=this.renderer.getContext(),M=this.renderer.state.buffers.stencil;M.setFunc(k.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,a),M.setFunc(k.EQUAL,1,4294967295)}this.swapBuffers()}ti!==void 0&&(S instanceof ti?l=!0:S instanceof Qo&&(l=!1))}}this.renderer.setRenderTarget(o)}reset(a){if(a===void 0){const o=this.renderer.getSize(new Se);this._pixelRatio=this.renderer.getPixelRatio(),this._width=o.width,this._height=o.height,a=this.renderTarget1.clone(),a.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=a,this.renderTarget2=a.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(a,o){this._width=a,this._height=o;const l=this._width*this._pixelRatio,v=this._height*this._pixelRatio;this.renderTarget1.setSize(l,v),this.renderTarget2.setSize(l,v);for(let b=0;b<this.passes.length;b++)this.passes[b].setSize(l,v)}setPixelRatio(a){this._pixelRatio=a,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class Zo extends ht{constructor(a,o,l=null,v=null,b=null){super(),this.scene=a,this.camera=o,this.overrideMaterial=l,this.clearColor=v,this.clearAlpha=b,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Mt}render(a,o,l){const v=a.autoClear;a.autoClear=!1;let b,S;this.overrideMaterial!==null&&(S=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(a.getClearColor(this._oldClearColor),a.setClearColor(this.clearColor)),this.clearAlpha!==null&&(b=a.getClearAlpha(),a.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&a.clearDepth(),a.setRenderTarget(this.renderToScreen?null:l),this.clear===!0&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),a.render(this.scene,this.camera),this.clearColor!==null&&a.setClearColor(this._oldClearColor),this.clearAlpha!==null&&a.setClearAlpha(b),this.overrideMaterial!==null&&(this.scene.overrideMaterial=S),a.autoClear=v}}const Ot=new ai;Ot.setAttribute("position",new si(new Float32Array([-1,-1,3,-1,-1,3]),2));Ot.setAttribute("uv",new si(new Float32Array([0,0,2,0,0,2]),2));Ot.boundingSphere=new uo;Ot.computeBoundingSphere=function(){};const Go=new ii;class hn{constructor(a){this._mesh=new oi(Ot,a),this._mesh.frustumCulled=!1}render(a){a.render(this._mesh,Go)}get material(){return this._mesh.material}set material(a){this._mesh.material=a}dispose(){this._mesh.material.dispose(),this._mesh.geometry.dispose()}}const Wo={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},sceneNormal:{value:null},projMat:{value:new fe},viewMat:{value:new fe},projViewMat:{value:new fe},projectionMatrixInv:{value:new fe},viewMatrixInv:{value:new fe},cameraPos:{value:new Ve},resolution:{value:new Se},time:{value:0},samples:{value:[]},samplesR:{value:[]},bluenoise:{value:null},distanceFalloff:{value:1},radius:{value:5},near:{value:.1},far:{value:1e3},logDepth:{value:!1},ortho:{value:!1},screenSpaceRadius:{value:!1}},vertexShader:`
varying vec2 vUv;
void main() {
  vUv = uv;
  gl_Position = vec4(position, 1);
}`,fragmentShader:`
    #define SAMPLES 16
    #define FSAMPLES 16.0
uniform sampler2D sceneDiffuse;
uniform sampler2D sceneNormal;
uniform highp sampler2D sceneDepth;
uniform mat4 projectionMatrixInv;
uniform mat4 viewMatrixInv;
uniform mat4 projMat;
uniform mat4 viewMat;
uniform mat4 projViewMat;
uniform vec3 cameraPos;
uniform vec2 resolution;
uniform float time;
uniform vec3[SAMPLES] samples;
uniform float[SAMPLES] samplesR;
uniform float radius;
uniform float distanceFalloff;
uniform float near;
uniform float far;
uniform bool logDepth;
uniform bool ortho;
uniform bool screenSpaceRadius;
uniform sampler2D bluenoise;
    varying vec2 vUv;
    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        return (zFar * zNear) / (zFar - d * (zFar - zNear));
    }
    highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
      return nearZ + (farZ - nearZ) * d;
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
      float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      return ortho ? linearize_depth_ortho(
        linDepth,
        nearZ,
        farZ
      ) :linearize_depth(linDepth, nearZ, farZ);
    }

    vec3 getWorldPosLog(vec3 posS) {
      vec2 uv = posS.xy;
      float z = posS.z;
      float nearZ =near;
      float farZ = far;
      float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
      vec4 wpos = viewMatrixInv * projectionMatrixInv * clipVec;
      return wpos.xyz / wpos.w;
    }
    vec3 getWorldPos(float depth, vec2 coord) {
      #ifdef LOGDEPTH
        return getWorldPosLog(vec3(coord, depth));
      #endif
      float z = depth * 2.0 - 1.0;
      vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
      vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
      // Perspective division
     vec4 worldSpacePosition = viewMatrixInv * viewSpacePosition;
     worldSpacePosition.xyz /= worldSpacePosition.w;
      return worldSpacePosition.xyz;
  }

  vec3 computeNormal(vec3 worldPos, vec2 vUv) {
    ivec2 p = ivec2(vUv * resolution);
    float c0 = texelFetch(sceneDepth, p, 0).x;
    float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
    float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
    float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
    float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
    float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
    float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
    float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
    float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;

    float dl = abs((2.0 * l1 - l2) - c0);
    float dr = abs((2.0 * r1 - r2) - c0);
    float db = abs((2.0 * b1 - b2) - c0);
    float dt = abs((2.0 * t1 - t2) - c0);

    vec3 ce = getWorldPos(c0, vUv).xyz;

    vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                          : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
    vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                          : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;

    return normalize(cross(dpdx, dpdy));
}

void main() {
      vec4 diffuse = texture2D(sceneDiffuse, vUv);
      float depth = texture2D(sceneDepth, vUv).x;
      if (depth == 1.0) {
        gl_FragColor = vec4(vec3(1.0), 1.0);
        return;
      }
      vec3 worldPos = getWorldPos(depth, vUv);
    //  vec3 normal = texture2D(sceneNormal, vUv).rgb;//computeNormal(worldPos, vUv);
      #ifdef HALFRES
        vec3 normal = texture2D(sceneNormal, vUv).rgb;
      #else
        vec3 normal = computeNormal(worldPos, vUv);
      #endif
      vec4 noise = texture2D(bluenoise, gl_FragCoord.xy / 128.0);
      vec3 randomVec = normalize(noise.rgb * 2.0 - 1.0);
      vec3 tangent = normalize(randomVec - normal * dot(randomVec, normal));
      vec3 bitangent = cross(normal, tangent);
      mat3 tbn = mat3(tangent, bitangent, normal);
      float occluded = 0.0;
      float totalWeight = 0.0;
     /* float radiusScreen = distance(
        worldPos,
        getWorldPos(depth, vUv + 
          vec2(48.0, 0.0) / resolution)
      );/*vUv.x < 0.5 ? radius : min(distance(
        worldPos,
        getWorldPos(depth, vUv + 
          vec2(100.0, 0.0) / resolution)
      ), radius);
      float distanceFalloffScreen = radiusScreen * 0.2;*/
      float radiusToUse = screenSpaceRadius ? distance(
        worldPos,
        getWorldPos(depth, vUv +
          vec2(radius, 0.0) / resolution)
      ) : radius;
      float distanceFalloffToUse =screenSpaceRadius ?
          radiusToUse * distanceFalloff
      : distanceFalloff;
      float bias = (0.1 / near) * fwidth(distance(worldPos, cameraPos)) / radiusToUse;
      for(float i = 0.0; i < FSAMPLES; i++) {
        vec3 sampleDirection = 
        tbn * 
        samples[int(i)];
        ;
        float moveAmt = samplesR[int(mod(i + noise.a * FSAMPLES, FSAMPLES))];
        vec3 samplePos = worldPos + radiusToUse * moveAmt * sampleDirection;
        vec4 offset = projViewMat * vec4(samplePos, 1.0);
        offset.xyz /= offset.w;
        offset.xyz = offset.xyz * 0.5 + 0.5;
        float sampleDepth = textureLod(sceneDepth, offset.xy, 0.0).x;
        /*float distSample = logDepth ? linearize_depth_log(sampleDepth, near, far) 
         (ortho ?  linearize_depth_ortho(sampleDepth, near, far) : linearize_depth(sampleDepth, near, far));*/
        #ifdef LOGDEPTH
        float distSample = linearize_depth_log(sampleDepth, near, far);
        #else
        float distSample = ortho ? linearize_depth_ortho(sampleDepth, near, far) : linearize_depth(sampleDepth, near, far);
        #endif
        float distWorld = ortho ? linearize_depth_ortho(offset.z, near, far) : linearize_depth(offset.z, near, far);
        float rangeCheck = smoothstep(0.0, 1.0, distanceFalloffToUse / (abs(distSample - distWorld)));
        vec2 diff = gl_FragCoord.xy - ( offset.xy * resolution);
        float weight = dot(sampleDirection, normal);
          occluded += rangeCheck * weight * 
            (distSample + bias
               < distWorld ? 1.0 : 0.0) * (
          (dot(
            diff,
            diff
             
            ) < 1.0 || (sampleDepth == depth) || (
              offset.x < 0.0 || offset.x > 1.0 || offset.y < 0.0 || offset.y > 1.0
            ) ? 0.0 : 1.0)
          );
          totalWeight += weight;
      }
      float occ = clamp(1.0 - occluded / totalWeight, 0.0, 1.0);
      gl_FragColor = vec4(0.5 + 0.5 * normal, occ);
}`},Yo={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},tDiffuse:{value:null},projMat:{value:new fe},viewMat:{value:new fe},projectionMatrixInv:{value:new fe},viewMatrixInv:{value:new fe},cameraPos:{value:new Ve},resolution:{value:new Se},color:{value:new Ve(0,0,0)},blueNoise:{value:null},downsampledDepth:{value:null},time:{value:0},intensity:{value:10},renderMode:{value:0},gammaCorrection:{value:!1},logDepth:{value:!1},ortho:{value:!1},near:{value:.1},far:{value:1e3},screenSpaceRadius:{value:!1},radius:{value:0},distanceFalloff:{value:1}},vertexShader:`
		varying vec2 vUv;
		void main() {
			vUv = uv;
			gl_Position = vec4(position, 1);
		}`,fragmentShader:`
		uniform sampler2D sceneDiffuse;
    uniform sampler2D sceneDepth;
    uniform sampler2D downsampledDepth;
    uniform sampler2D tDiffuse;
    uniform sampler2D blueNoise;
    uniform vec2 resolution;
    uniform vec3 color;
    uniform mat4 projectionMatrixInv;
    uniform mat4 viewMatrixInv;
    uniform float intensity;
    uniform float renderMode;
    uniform float near;
    uniform float far;
    uniform bool gammaCorrection;
    uniform bool logDepth;
    uniform bool ortho;
    uniform bool screenSpaceRadius;
    uniform float radius;
    uniform float distanceFalloff;
    varying vec2 vUv;
    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        return (zFar * zNear) / (zFar - d * (zFar - zNear));
    }
    highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
      return nearZ + (farZ - nearZ) * d;
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
      float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      return ortho ? linearize_depth_ortho(
        linDepth,
        nearZ,
        farZ
      ) :linearize_depth(linDepth, nearZ, farZ);
    }
    vec3 getWorldPosLog(vec3 posS) {
        vec2 uv = posS.xy;
        float z = posS.z;
        float nearZ =near;
        float farZ = far;
        float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
        float a = farZ / (farZ - nearZ);
        float b = farZ * nearZ / (nearZ - farZ);
        float linDepth = a + b / depth;
        vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
        vec4 wpos = viewMatrixInv * projectionMatrixInv * clipVec;
        return wpos.xyz / wpos.w;
      }
      vec3 getWorldPos(float depth, vec2 coord) {
       // if (logDepth) {
        #ifdef LOGDEPTH
          return getWorldPosLog(vec3(coord, depth));
        #endif
      //  }
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewMatrixInv * viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
  
    vec3 computeNormal(vec3 worldPos, vec2 vUv) {
      ivec2 p = ivec2(vUv * resolution);
      float c0 = texelFetch(sceneDepth, p, 0).x;
      float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
      float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
      float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
      float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
      float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
      float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
      float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
      float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;
  
      float dl = abs((2.0 * l1 - l2) - c0);
      float dr = abs((2.0 * r1 - r2) - c0);
      float db = abs((2.0 * b1 - b2) - c0);
      float dt = abs((2.0 * t1 - t2) - c0);
  
      vec3 ce = getWorldPos(c0, vUv).xyz;
  
      vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                            : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
      vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                            : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;
  
      return normalize(cross(dpdx, dpdy));
  }

    #include <common>
    #include <dithering_pars_fragment>
    void main() {
        //vec4 texel = texture2D(tDiffuse, vUv);//vec3(0.0);
        vec4 sceneTexel = texture2D(sceneDiffuse, vUv);

        #ifdef HALFRES 
        float depth = texture2D(
            sceneDepth,
            vUv
        ).x;
        vec4 texel;
        if (depth == 1.0) {
            texel = vec4(0.0, 0.0, 0.0, 1.0);
        } else {
        vec3 worldPos = getWorldPos(depth, vUv);
        vec3 normal = computeNormal(getWorldPos(depth, vUv), vUv);
       // vec4 texel = texture2D(tDiffuse, vUv);
       // Find closest depth;
       float totalWeight = 0.0;
       float radiusToUse = screenSpaceRadius ? distance(
        worldPos,
        getWorldPos(depth, vUv +
          vec2(radius, 0.0) / resolution)
      ) : radius;
      float distanceFalloffToUse =screenSpaceRadius ?
          radiusToUse * distanceFalloff
      : distanceFalloff;
        for(float x = -1.0; x <= 1.0; x++) {
            for(float y = -1.0; y <= 1.0; y++) {
                vec2 offset = vec2(x, y);
                ivec2 p = ivec2(
                    (vUv * resolution * 0.5) + offset
                );
                vec2 pUv = vec2(p) / (resolution * 0.5);
                float sampleDepth = texelFetch(downsampledDepth,p, 0).x;
                vec4 sampleInfo = texelFetch(tDiffuse, p, 0);
                vec3 normalSample = sampleInfo.xyz * 2.0 - 1.0;
                vec3 worldPosSample = getWorldPos(sampleDepth, pUv);
                float tangentPlaneDist = abs(dot(worldPos - worldPosSample, normal));
                float rangeCheck = exp(-1.0 * tangentPlaneDist * (1.0 / distanceFalloffToUse)) * max(dot(normal, normalSample), 0.0);
                float weight = rangeCheck;
                totalWeight += weight;
                texel += sampleInfo * weight;
            }
        }
        if (totalWeight == 0.0) {
            texel = texture2D(tDiffuse, vUv);
        } else {
            texel /= totalWeight;
        }
    }
        #else
        vec4 texel = texture2D(tDiffuse, vUv);
        #endif

     
        float finalAo = pow(texel.a, intensity);
        if (renderMode == 0.0) {
            gl_FragColor = vec4( mix(sceneTexel.rgb, color * sceneTexel.rgb, 1.0 - finalAo), sceneTexel.a);
        } else if (renderMode == 1.0) {
            gl_FragColor = vec4( mix(vec3(1.0), color * sceneTexel.rgb, 1.0 - finalAo), sceneTexel.a);
        } else if (renderMode == 2.0) {
            gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
        } else if (renderMode == 3.0) {
            if (vUv.x < 0.5) {
                gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
            } else if (abs(vUv.x - 0.5) < 1.0 / resolution.x) {
                gl_FragColor = vec4(1.0);
            } else {
                gl_FragColor = vec4( mix(sceneTexel.rgb, color * sceneTexel.rgb, 1.0 - finalAo), sceneTexel.a);
            }
        } else if (renderMode == 4.0) {
            if (vUv.x < 0.5) {
                gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
            } else if (abs(vUv.x - 0.5) < 1.0 / resolution.x) {
                gl_FragColor = vec4(1.0);
            } else {
                gl_FragColor = vec4( mix(vec3(1.0), color * sceneTexel.rgb, 1.0 - finalAo), sceneTexel.a);
            }
        }
        #include <dithering_fragment>
        if (gammaCorrection) {
            gl_FragColor = LinearTosRGB(gl_FragColor);
        }
    }
    `},Xo={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},tDiffuse:{value:null},projMat:{value:new fe},viewMat:{value:new fe},projectionMatrixInv:{value:new fe},viewMatrixInv:{value:new fe},cameraPos:{value:new Ve},resolution:{value:new Se},time:{value:0},r:{value:5},blueNoise:{value:null},radius:{value:12},worldRadius:{value:5},index:{value:0},poissonDisk:{value:[]},distanceFalloff:{value:1},near:{value:.1},far:{value:1e3},logDepth:{value:!1},screenSpaceRadius:{value:!1}},vertexShader:`
		varying vec2 vUv;
		void main() {
			vUv = uv;
			gl_Position = vec4(position, 1.0);
		}`,fragmentShader:`
		uniform sampler2D sceneDiffuse;
    uniform highp sampler2D sceneDepth;
    uniform sampler2D tDiffuse;
    uniform sampler2D blueNoise;
    uniform mat4 projectionMatrixInv;
    uniform mat4 viewMatrixInv;
    uniform vec2 resolution;
    uniform float r;
    uniform float radius;
     uniform float worldRadius;
    uniform float index;
     uniform float near;
     uniform float far;
     uniform float distanceFalloff;
     uniform bool logDepth;
     uniform bool screenSpaceRadius;
    varying vec2 vUv;

    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        highp float z_n = 2.0 * d - 1.0;
        return 2.0 * zNear * zFar / (zFar + zNear - z_n * (zFar - zNear));
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
     float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
     float a = farZ / (farZ - nearZ);
     float b = farZ * nearZ / (nearZ - farZ);
     float linDepth = a + b / depth;
     return linearize_depth(linDepth, nearZ, farZ);
   }
   highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
     return nearZ + (farZ - nearZ) * d;
   }
   vec3 getWorldPosLog(vec3 posS) {
     vec2 uv = posS.xy;
     float z = posS.z;
     float nearZ =near;
     float farZ = far;
     float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
     float a = farZ / (farZ - nearZ);
     float b = farZ * nearZ / (nearZ - farZ);
     float linDepth = a + b / depth;
     vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
     vec4 wpos = viewMatrixInv * projectionMatrixInv * clipVec;
     return wpos.xyz / wpos.w;
   }
    vec3 getWorldPos(float depth, vec2 coord) {
     #ifdef LOGDEPTH
          return getWorldPosLog(vec3(coord, depth));
     #endif
        
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewMatrixInv * viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
    #include <common>
    #define NUM_SAMPLES 16
    uniform vec2 poissonDisk[NUM_SAMPLES];
    void main() {
        const float pi = 3.14159;
        vec2 texelSize = vec2(1.0 / resolution.x, 1.0 / resolution.y);
        vec2 uv = vUv;
        vec4 data = texture2D(tDiffuse, vUv);
        float occlusion = data.a;
        float baseOcc = data.a;
        vec3 normal = data.rgb * 2.0 - 1.0;
        float count = 1.0;
        float d = texture2D(sceneDepth, vUv).x;
        vec3 worldPos = getWorldPos(d, vUv);
        float size = radius;
        float angle;
        if (index == 0.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).x * PI2;
        } else if (index == 1.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).y * PI2;
        } else if (index == 2.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).z * PI2;
        } else {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).w * PI2;
        }

        mat2 rotationMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));
        float radiusToUse = screenSpaceRadius ? distance(
          worldPos,
          getWorldPos(d, vUv +
            vec2(worldRadius, 0.0) / resolution)
        ) : worldRadius;
        float distanceFalloffToUse =screenSpaceRadius ?
            radiusToUse * distanceFalloff
        : distanceFalloff;


        for(int i = 0; i < NUM_SAMPLES; i++) {
            vec2 offset = (rotationMatrix * poissonDisk[i]) * texelSize * size;
            vec4 dataSample = texture2D(tDiffuse, uv + offset);
            float occSample = dataSample.a;
            vec3 normalSample = dataSample.rgb * 2.0 - 1.0;
            float dSample = texture2D(sceneDepth, uv + offset).x;
            vec3 worldPosSample = getWorldPos(dSample, uv + offset);
            float tangentPlaneDist = abs(dot(worldPos - worldPosSample, normal));
            float rangeCheck = exp(-1.0 * tangentPlaneDist * (1.0 / distanceFalloffToUse)) * max(dot(normal, normalSample), 0.0) * (1.0 - abs(occSample - baseOcc));
            occlusion += occSample * rangeCheck;
            count += rangeCheck;
        }
        occlusion /= count;
        gl_FragColor = vec4(0.5 + 0.5 * normal, occlusion);
    }
    `},Jo={uniforms:{sceneDepth:{value:null},resolution:{value:new Se},near:{value:.1},far:{value:1e3},viewMatrixInv:{value:new fe},projectionMatrixInv:{value:new fe},logDepth:{value:!1}},vertexShader:`
    varying vec2 vUv;
    void main() {
        vUv = uv;
        gl_Position = vec4(position, 1);
    }`,fragmentShader:`
    uniform sampler2D sceneDepth;
    uniform vec2 resolution;
    uniform float near;
    uniform float far;
    uniform bool logDepth;
    uniform mat4 viewMatrixInv;
    uniform mat4 projectionMatrixInv;
    varying vec2 vUv;
    layout(location = 1) out vec4 gNormal;
    vec3 getWorldPosLog(vec3 posS) {
        vec2 uv = posS.xy;
        float z = posS.z;
        float nearZ =near;
        float farZ = far;
        float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
        float a = farZ / (farZ - nearZ);
        float b = farZ * nearZ / (nearZ - farZ);
        float linDepth = a + b / depth;
        vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
        vec4 wpos = viewMatrixInv * projectionMatrixInv * clipVec;
        return wpos.xyz / wpos.w;
      }
      vec3 getWorldPos(float depth, vec2 coord) {
        if (logDepth) {
          return getWorldPosLog(vec3(coord, depth));
        }
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewMatrixInv * viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
  
    vec3 computeNormal(vec3 worldPos, vec2 vUv) {
      ivec2 p = ivec2(vUv * resolution);
      float c0 = texelFetch(sceneDepth, p, 0).x;
      float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
      float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
      float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
      float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
      float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
      float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
      float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
      float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;
  
      float dl = abs((2.0 * l1 - l2) - c0);
      float dr = abs((2.0 * r1 - r2) - c0);
      float db = abs((2.0 * b1 - b2) - c0);
      float dt = abs((2.0 * t1 - t2) - c0);
  
      vec3 ce = getWorldPos(c0, vUv).xyz;
  
      vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                            : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
      vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                            : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;
  
      return normalize(cross(dpdx, dpdy));
  }
    void main() {
        vec2 uv = vUv - vec2(0.5) / resolution;
        vec2 pixelSize = vec2(1.0) / resolution;
        vec2[] uvSamples = vec2[4](
            uv,
            uv + vec2(pixelSize.x, 0.0),
            uv + vec2(0.0, pixelSize.y),
            uv + pixelSize
        );
        float depth00 = texture2D(sceneDepth, uvSamples[0]).r;
        float depth10 = texture2D(sceneDepth, uvSamples[1]).r;
        float depth01 = texture2D(sceneDepth, uvSamples[2]).r;
        float depth11 = texture2D(sceneDepth, uvSamples[3]).r;
        float minDepth = min(min(depth00, depth10), min(depth01, depth11));
        float maxDepth = max(max(depth00, depth10), max(depth01, depth11));
        float targetDepth = minDepth;
        // Checkerboard pattern to avoid artifacts
        if (mod(gl_FragCoord.x + gl_FragCoord.y, 2.0) > 0.5) { 
            targetDepth = maxDepth;
        }
        int chosenIndex = 0;
        float[] samples = float[4](depth00, depth10, depth01, depth11);
        for(int i = 0; i < 4; ++i) {
            if (samples[i] == targetDepth) {
                chosenIndex = i;
                break;
            }
        }
        gl_FragColor = vec4(samples[chosenIndex], 0.0, 0.0, 1.0);
        gNormal = vec4(computeNormal(
            getWorldPos(samples[chosenIndex], uvSamples[chosenIndex]), uvSamples[chosenIndex]
        ), 0.0);
       /* float[] samples = float[4](depth00, depth10, depth01, depth11);
        float c = 0.25 * (depth00 + depth10 + depth01 + depth11);
        float[] distances = float[4](depth00, depth10, depth01, depth11);
        float maxDistance = max(max(distances[0], distances[1]), max(distances[2], distances[3]));

        int remaining[3];
        int rejected[3];
        int i, j, k;

        for(i = 0, j = 0, k = 0; i < 4; ++i) {
            if (distances[i] < maxDistance) {
                remaining[j++] = i;
            } else {
                rejected[k++] = i;
            }
        }
        for(;j < 3;++j) {
            remaining[j] = rejected[--k];
        }
        vec3 s = vec3(
            samples[remaining[0]],
            samples[remaining[1]],
            samples[remaining[2]]
        );
        c = (s.x + s.y + s.z) / 3.0;

        distances[0] = abs(c - s.x);
        distances[1] = abs(c - s.y);
        distances[2] = abs(c - s.z);

        float minDistance = min(min(distances[0], distances[1]), distances[2]);

        for(i = 0; i < 3; ++i) {
            if (distances[i] == minDistance) {
                break;
            }
        }*/
      /*  gl_FragColor = vec4(samples[remaining[i]], 0.0, 0.0, 0.0);
        gNormal = vec4(computeNormal(
            getWorldPos(samples[remaining[i]], uvSamples[remaining[i]]), uvSamples[remaining[i]]
        ), 0.0);*/
    }`};var mi="";Uint8Array.from(atob(mi),c=>c.charCodeAt(0));const _o=Uint8Array.from(atob(mi),c=>c.charCodeAt(0));function vi(c,a,o){if(a.getQueryParameter(c,a.QUERY_RESULT_AVAILABLE)){const b=a.getQueryParameter(c,a.QUERY_RESULT)/1e6;o.lastTime=b}else setTimeout(()=>{vi(c,a,o)},1)}class $o extends ht{constructor(a,o,l=512,v=512){super(),this.width=l,this.height=v,this.clear=!0,this.camera=o,this.scene=a,this.configuration=new Proxy({aoSamples:16,aoRadius:5,denoiseSamples:8,denoiseRadius:12,distanceFalloff:1,intensity:5,denoiseIterations:2,renderMode:0,color:new Mt(0,0,0),gammaCorrection:!0,logarithmicDepthBuffer:!1,screenSpaceRadius:!1,halfRes:!1,depthAwareUpsampling:!0},{set:(b,S,k)=>{const M=b[S];return b[S]=k,S==="aoSamples"&&M!==k&&this.configureAOPass(this.configuration.logarithmicDepthBuffer),S==="denoiseSamples"&&M!==k&&this.configureDenoisePass(this.configuration.logarithmicDepthBuffer),S==="halfRes"&&M!==k&&(this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureHalfResTargets(),this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),this.setSize(this.width,this.height)),S==="depthAwareUpsampling"&&M!==k&&this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),!0}}),this.samples=[],this.samplesR=[],this.samplesDenoise=[],this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),this.configureSampleDependentPasses(),this.configureHalfResTargets(),this.beautyRenderTarget=new ft(this.width,this.height,{minFilter:Et,magFilter:ze}),this.beautyRenderTarget.depthTexture=new lo(this.width,this.height,co),this.beautyRenderTarget.depthTexture.format=fo,this.writeTargetInternal=new ft(this.width,this.height,{minFilter:Et,magFilter:Et,depthBuffer:!1}),this.readTargetInternal=new ft(this.width,this.height,{minFilter:Et,magFilter:Et,depthBuffer:!1}),this.bluenoise=new ho(_o,128,128),this.bluenoise.colorSpace=po,this.bluenoise.wrapS=Gr,this.bluenoise.wrapT=Gr,this.bluenoise.minFilter=ze,this.bluenoise.magFilter=ze,this.bluenoise.needsUpdate=!0,this.lastTime=0,this._r=new Se,this._c=new Mt}configureHalfResTargets(){this.configuration.halfRes?(this.depthDownsampleTarget=new mo(this.width/2,this.height/2,2),this.depthDownsampleTarget.texture[0].format=vo,this.depthDownsampleTarget.texture[0].type=go,this.depthDownsampleTarget.texture[0].minFilter=ze,this.depthDownsampleTarget.texture[0].magFilter=ze,this.depthDownsampleTarget.texture[0].depthBuffer=!1,this.depthDownsampleTarget.texture[1].format=ui,this.depthDownsampleTarget.texture[1].type=sr,this.depthDownsampleTarget.texture[1].minFilter=ze,this.depthDownsampleTarget.texture[1].magFilter=ze,this.depthDownsampleTarget.texture[1].depthBuffer=!1,this.depthDownsampleQuad=new hn(new we(Jo))):(this.depthDownsampleTarget&&(this.depthDownsampleTarget.dispose(),this.depthDownsampleTarget=null),this.depthDownsampleQuad&&(this.depthDownsampleQuad.dispose(),this.depthDownsampleQuad=null))}configureSampleDependentPasses(){this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureDenoisePass(this.configuration.logarithmicDepthBuffer)}configureAOPass(a=!1){this.samples=this.generateHemisphereSamples(this.configuration.aoSamples),this.samplesR=this.generateHemisphereSamplesR(this.configuration.aoSamples);const o={...Wo};o.fragmentShader=o.fragmentShader.replace("16",this.configuration.aoSamples).replace("16.0",this.configuration.aoSamples+".0"),a&&(o.fragmentShader=`#define LOGDEPTH
`+o.fragmentShader),this.configuration.halfRes&&(o.fragmentShader=`#define HALFRES
`+o.fragmentShader),this.effectShaderQuad?(this.effectShaderQuad.material.dispose(),this.effectShaderQuad.material=new we(o)):this.effectShaderQuad=new hn(new we(o))}configureDenoisePass(a=!1){this.samplesDenoise=this.generateDenoiseSamples(this.configuration.denoiseSamples,11);const o={...Xo};o.fragmentShader=o.fragmentShader.replace("16",this.configuration.denoiseSamples),a&&(o.fragmentShader=`#define LOGDEPTH
`+o.fragmentShader),this.poissonBlurQuad?(this.poissonBlurQuad.material.dispose(),this.poissonBlurQuad.material=new we(o)):this.poissonBlurQuad=new hn(new we(o))}configureEffectCompositer(a=!1){const o={...Yo};a&&(o.fragmentShader=`#define LOGDEPTH
`+o.fragmentShader),this.configuration.halfRes&&this.configuration.depthAwareUpsampling&&(o.fragmentShader=`#define HALFRES
`+o.fragmentShader),this.effectCompositerQuad?(this.effectCompositerQuad.material.dispose(),this.effectCompositerQuad.material=new we(o)):this.effectCompositerQuad=new hn(new we(o))}generateHemisphereSamples(a){const o=[];for(let l=0;l<a;l++){const v=2.399963*l,b=Math.sqrt(l+.5)/Math.sqrt(a),S=b*Math.cos(v),k=b*Math.sin(v),M=Math.sqrt(1-(S*S+k*k));o.push(new Ve(S,k,M))}return o}generateHemisphereSamplesR(a){let o=[];for(let l=0;l<a;l++)o.push((l+1)/a);return o}generateDenoiseSamples(a,o){const l=2*Math.PI*o/a,v=1/a,b=v,S=[];let k=v,M=0;for(let K=0;K<a;K++)S.push(new Se(Math.cos(M),Math.sin(M)).multiplyScalar(Math.pow(k,.75))),k+=b,M+=l;return S}setSize(a,o){this.width=a,this.height=o;const l=this.configuration.halfRes?.5:1;this.beautyRenderTarget.setSize(a,o),this.writeTargetInternal.setSize(a*l,o*l),this.readTargetInternal.setSize(a*l,o*l),this.configuration.halfRes&&this.depthDownsampleTarget.setSize(a*l,o*l)}render(a,o,l,v,b){a.capabilities.logarithmicDepthBuffer!==this.configuration.logarithmicDepthBuffer&&(this.configuration.logarithmicDepthBuffer=a.capabilities.logarithmicDepthBuffer,this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureDenoisePass(this.configuration.logarithmicDepthBuffer),this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer));let S,k,M;this.debugMode&&(S=a.getContext(),k=S.getExtension("EXT_disjoint_timer_query_webgl2"),k===null&&(console.error("EXT_disjoint_timer_query_webgl2 not available, disabling debug mode."),this.debugMode=!1)),a.setRenderTarget(this.beautyRenderTarget),a.render(this.scene,this.camera),this.debugMode&&(M=S.createQuery(),S.beginQuery(k.TIME_ELAPSED_EXT,M));const K=a.xr.enabled;a.xr.enabled=!1,this.camera.updateMatrixWorld(),this._r.set(this.width,this.height);let X=this.configuration.aoRadius;this.configuration.halfRes&&this.configuration.screenSpaceRadius&&(X*=.5),this.configuration.halfRes&&(a.setRenderTarget(this.depthDownsampleTarget),this.depthDownsampleQuad.material.uniforms.sceneDepth.value=this.beautyRenderTarget.depthTexture,this.depthDownsampleQuad.material.uniforms.resolution.value=this._r,this.depthDownsampleQuad.material.uniforms.near.value=this.camera.near,this.depthDownsampleQuad.material.uniforms.far.value=this.camera.far,this.depthDownsampleQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.depthDownsampleQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.depthDownsampleQuad.material.uniforms.logDepth.value=this.configuration.logarithmicDepthBuffer,this.depthDownsampleQuad.render(a)),this.effectShaderQuad.material.uniforms.sceneDiffuse.value=this.beautyRenderTarget.texture,this.effectShaderQuad.material.uniforms.sceneDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.beautyRenderTarget.depthTexture,this.effectShaderQuad.material.uniforms.sceneNormal.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[1]:null,this.effectShaderQuad.material.uniforms.projMat.value=this.camera.projectionMatrix,this.effectShaderQuad.material.uniforms.viewMat.value=this.camera.matrixWorldInverse,this.effectShaderQuad.material.uniforms.projViewMat.value=this.camera.projectionMatrix.clone().multiply(this.camera.matrixWorldInverse.clone()),this.effectShaderQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.effectShaderQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.effectShaderQuad.material.uniforms.cameraPos.value=this.camera.position,this.effectShaderQuad.material.uniforms.resolution.value=this.configuration.halfRes?this._r.clone().multiplyScalar(.5).floor():this._r,this.effectShaderQuad.material.uniforms.time.value=performance.now()/1e3,this.effectShaderQuad.material.uniforms.samples.value=this.samples,this.effectShaderQuad.material.uniforms.samplesR.value=this.samplesR,this.effectShaderQuad.material.uniforms.bluenoise.value=this.bluenoise,this.effectShaderQuad.material.uniforms.radius.value=X,this.effectShaderQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.effectShaderQuad.material.uniforms.near.value=this.camera.near,this.effectShaderQuad.material.uniforms.far.value=this.camera.far,this.effectShaderQuad.material.uniforms.logDepth.value=a.capabilities.logarithmicDepthBuffer,this.effectShaderQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.effectShaderQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,a.setRenderTarget(this.writeTargetInternal),this.effectShaderQuad.render(a);for(let U=0;U<this.configuration.denoiseIterations;U++)[this.writeTargetInternal,this.readTargetInternal]=[this.readTargetInternal,this.writeTargetInternal],this.poissonBlurQuad.material.uniforms.tDiffuse.value=this.readTargetInternal.texture,this.poissonBlurQuad.material.uniforms.sceneDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.beautyRenderTarget.depthTexture,this.poissonBlurQuad.material.uniforms.projMat.value=this.camera.projectionMatrix,this.poissonBlurQuad.material.uniforms.viewMat.value=this.camera.matrixWorldInverse,this.poissonBlurQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.poissonBlurQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.poissonBlurQuad.material.uniforms.cameraPos.value=this.camera.position,this.poissonBlurQuad.material.uniforms.resolution.value=this.configuration.halfRes?this._r.clone().multiplyScalar(.5).floor():this._r,this.poissonBlurQuad.material.uniforms.time.value=performance.now()/1e3,this.poissonBlurQuad.material.uniforms.blueNoise.value=this.bluenoise,this.poissonBlurQuad.material.uniforms.radius.value=this.configuration.denoiseRadius*(this.configuration.halfRes?.5:1),this.poissonBlurQuad.material.uniforms.worldRadius.value=X,this.poissonBlurQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.poissonBlurQuad.material.uniforms.index.value=U,this.poissonBlurQuad.material.uniforms.poissonDisk.value=this.samplesDenoise,this.poissonBlurQuad.material.uniforms.near.value=this.camera.near,this.poissonBlurQuad.material.uniforms.far.value=this.camera.far,this.poissonBlurQuad.material.uniforms.logDepth.value=a.capabilities.logarithmicDepthBuffer,this.poissonBlurQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,a.setRenderTarget(this.writeTargetInternal),this.poissonBlurQuad.render(a);this.effectCompositerQuad.material.uniforms.sceneDiffuse.value=this.beautyRenderTarget.texture,this.effectCompositerQuad.material.uniforms.sceneDepth.value=this.beautyRenderTarget.depthTexture,this.effectCompositerQuad.material.uniforms.near.value=this.camera.near,this.effectCompositerQuad.material.uniforms.far.value=this.camera.far,this.effectCompositerQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.effectCompositerQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.effectCompositerQuad.material.uniforms.logDepth.value=a.capabilities.logarithmicDepthBuffer,this.effectCompositerQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.effectCompositerQuad.material.uniforms.downsampledDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.beautyRenderTarget.depthTexture,this.effectCompositerQuad.material.uniforms.resolution.value=this._r,this.effectCompositerQuad.material.uniforms.blueNoise.value=this.bluenoise,this.effectCompositerQuad.material.uniforms.intensity.value=this.configuration.intensity,this.effectCompositerQuad.material.uniforms.renderMode.value=this.configuration.renderMode,this.effectCompositerQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,this.effectCompositerQuad.material.uniforms.radius.value=X,this.effectCompositerQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.effectCompositerQuad.material.uniforms.gammaCorrection.value=this.configuration.gammaCorrection,this.effectCompositerQuad.material.uniforms.tDiffuse.value=this.writeTargetInternal.texture,this.effectCompositerQuad.material.uniforms.color.value=this._c.copy(this.configuration.color).convertSRGBToLinear(),a.setRenderTarget(this.renderToScreen?null:o),this.effectCompositerQuad.render(a),this.debugMode&&(S.endQuery(k.TIME_ELAPSED_EXT),vi(M,S,this)),a.xr.enabled=K}enableDebugMode(){this.debugMode=!0}disableDebugMode(){this.debugMode=!1}setDisplayMode(a){this.configuration.renderMode=["Combined","AO","No AO","Split","Split AO"].indexOf(a)}setQualityMode(a){a==="Performance"?(this.configuration.aoSamples=8,this.configuration.denoiseSamples=4,this.configuration.denoiseRadius=12):a==="Low"?(this.configuration.aoSamples=16,this.configuration.denoiseSamples=4,this.configuration.denoiseRadius=12):a==="Medium"?(this.configuration.aoSamples=16,this.configuration.denoiseSamples=8,this.configuration.denoiseRadius=12):a==="High"?(this.configuration.aoSamples=64,this.configuration.denoiseSamples=8,this.configuration.denoiseRadius=6):a==="Ultra"&&(this.configuration.aoSamples=64,this.configuration.denoiseSamples=16,this.configuration.denoiseRadius=6)}}const ea={name:"GammaCorrectionShader",uniforms:{tDiffuse:{value:null}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 tex = texture2D( tDiffuse, vUv );

			gl_FragColor = sRGBTransferOETF( tex );

		}`};function ta(){return new we({side:2,clipping:!0,uniforms:{},vertexShader:`
    varying vec4 vColor;
    
    #include <clipping_planes_pars_vertex>
  
    void main() {
       #include <begin_vertex>
    
       vec4 absPosition = vec4(position, 1.0);
       vec3 trueNormal = normal;
       
       #ifdef USE_INSTANCING
          absPosition = instanceMatrix * absPosition;
          trueNormal = (instanceMatrix * vec4(normal, 0.)).xyz;
       #endif
       
       absPosition = modelMatrix * absPosition;
       trueNormal = (normalize(modelMatrix * vec4(trueNormal, 0.))).xyz;
       
       vec3 planePosition = absPosition.xyz / 40.;
       float d = abs(dot(trueNormal, planePosition));
       vColor = vec4(abs(trueNormal), d);
       gl_Position = projectionMatrix * viewMatrix * absPosition;
       
       #include <project_vertex>
       #include <clipping_planes_vertex>
    }
    `,fragmentShader:`
    varying vec4 vColor;
    
    #include <clipping_planes_pars_fragment>
  
    void main() {
      #include <clipping_planes_fragment>
      gl_FragColor = vColor;
    }
    `})}function na(){return new we({side:2,clipping:!0,uniforms:{},vertexShader:`
    varying vec3 vCameraPosition;
    varying vec3 vPosition;
    varying vec3 vNormal;
    
    #include <clipping_planes_pars_vertex>
  
    void main() {
       #include <begin_vertex>
       
       vec4 absPosition = vec4(position, 1.0);
       vNormal = normal;
       
       #ifdef USE_INSTANCING
          absPosition = instanceMatrix * absPosition;
          vNormal = (instanceMatrix * vec4(normal, 0.)).xyz;
       #endif
       
       absPosition = modelMatrix * absPosition;
       vNormal = (normalize(modelMatrix * vec4(vNormal, 0.))).xyz;
       
       gl_Position = projectionMatrix * viewMatrix * absPosition;
       
       vCameraPosition = cameraPosition;
       vPosition = absPosition.xyz;
       
       #include <project_vertex>
       #include <clipping_planes_vertex>
    }
    `,fragmentShader:`
    varying vec3 vCameraPosition;
    varying vec3 vPosition;
    varying vec3 vNormal;
    
    #include <clipping_planes_pars_fragment>
  
    void main() {
      #include <clipping_planes_fragment>
      vec3 cameraPixelVec = normalize(vCameraPosition - vPosition);
      float difference = abs(dot(vNormal, cameraPixelVec));
      
      // This achieves a double gloss effect: when the surface is perpendicular and when it's parallel
      difference = abs((difference * 2.) - 1.);
      
      gl_FragColor = vec4(difference, difference, difference, 1.);
    }
    `})}class ra extends ht{constructor(o,l,v,b,S){super();Z(this,"components");Z(this,"resolution");Z(this,"renderScene");Z(this,"renderCamera");Z(this,"fsQuad");Z(this,"normalOverrideMaterial");Z(this,"glossOverrideMaterial");Z(this,"planeBuffer");Z(this,"glossBuffer");Z(this,"outlineBuffer");Z(this,"excludedMeshes",[]);Z(this,"outlinedMeshes",{});Z(this,"_outlineScene",new dn);Z(this,"_outlineEnabled",!1);Z(this,"_lineColor",10066329);Z(this,"_opacity",.4);Z(this,"_tolerance",3);Z(this,"_glossEnabled",!0);Z(this,"_glossExponent",1.9);Z(this,"_minGloss",-.1);Z(this,"_maxGloss",.1);Z(this,"_outlinesNeedsUpdate",!1);if(!v.renderer)throw new Error("The given world must have a renderer!");this.components=l,this.renderScene=b,this.renderCamera=S,this.resolution=new Se(o.x,o.y),this.fsQuad=new di,this.fsQuad.material=this.createOutlinePostProcessMaterial(),this.planeBuffer=this.newRenderTarget(),this.glossBuffer=this.newRenderTarget(),this.outlineBuffer=this.newRenderTarget();const k=ta();k.clippingPlanes=v.renderer.clippingPlanes,this.normalOverrideMaterial=k;const M=na();M.clippingPlanes=v.renderer.clippingPlanes,this.glossOverrideMaterial=M}get lineColor(){return this._lineColor}set lineColor(o){this._lineColor=o,this.fsQuad.material.uniforms.lineColor.value.set(o)}get tolerance(){return this._tolerance}set tolerance(o){this._tolerance=o;const l=this.fsQuad.material;l.uniforms.tolerance.value=o}get opacity(){return this._opacity}set opacity(o){this._opacity=o;const l=this.fsQuad.material;l.uniforms.opacity.value=o}get glossEnabled(){return this._glossEnabled}set glossEnabled(o){if(o===this._glossEnabled)return;this._glossEnabled=o;const l=this.fsQuad.material;l.uniforms.glossEnabled.value=o?1:0}get glossExponent(){return this._glossExponent}set glossExponent(o){this._glossExponent=o;const l=this.fsQuad.material;l.uniforms.glossExponent.value=o}get minGloss(){return this._minGloss}set minGloss(o){this._minGloss=o;const l=this.fsQuad.material;l.uniforms.minGloss.value=o}get maxGloss(){return new yo().color.convertLinearToSRGB(),this._maxGloss}set maxGloss(o){this._maxGloss=o;const l=this.fsQuad.material;l.uniforms.maxGloss.value=o}get outlineEnabled(){return this._outlineEnabled}set outlineEnabled(o){if(o===this._outlineEnabled)return;this._outlineEnabled=o;const l=this.fsQuad.material;l.uniforms.outlineEnabled.value=o?1:0}async dispose(){this.planeBuffer.dispose(),this.glossBuffer.dispose(),this.outlineBuffer.dispose(),this.normalOverrideMaterial.dispose(),this.glossOverrideMaterial.dispose(),this.fsQuad.dispose(),this.excludedMeshes=[],this._outlineScene.children=[];const o=this.components.get(ro);for(const l in this.outlinedMeshes){const v=this.outlinedMeshes[l];for(const b of v.meshes)o.destroy(b,!0,!0);v.material.dispose()}}setSize(o,l){this.planeBuffer.setSize(o,l),this.glossBuffer.setSize(o,l),this.outlineBuffer.setSize(o,l),this.resolution.set(o,l),this.fsQuad.material.uniforms.screenSize.value.set(this.resolution.x,this.resolution.y,1/this.resolution.x,1/this.resolution.y)}render(o,l,v){const b=l.depthBuffer;l.depthBuffer=!1;const S=this.renderScene.overrideMaterial,k=this.renderScene.background;this.renderScene.background=null;for(const K of this.excludedMeshes)K.visible=!1;if(o.setRenderTarget(this.planeBuffer),this.renderScene.overrideMaterial=this.normalOverrideMaterial,o.render(this.renderScene,this.renderCamera),this._glossEnabled&&(o.setRenderTarget(this.glossBuffer),this.renderScene.overrideMaterial=this.glossOverrideMaterial,o.render(this.renderScene,this.renderCamera)),this.renderScene.overrideMaterial=S,this._outlineEnabled){let K=!1;for(const X in this.outlinedMeshes){const U=this.outlinedMeshes[X];for(const A of U.meshes)K=!0,A.userData.materialPreOutline=A.material,A.material=U.material,A.userData.groupsPreOutline=A.geometry.groups,A.geometry.groups=[],A instanceof Wr&&(A.userData.colorPreOutline=A.instanceColor,A.instanceColor=null),A.userData.parentPreOutline=A.parent,this._outlineScene.add(A)}(K||this._outlinesNeedsUpdate)&&(o.setRenderTarget(this.outlineBuffer),o.render(this._outlineScene,this.renderCamera),this._outlinesNeedsUpdate=K);for(const X in this.outlinedMeshes){const U=this.outlinedMeshes[X];for(const A of U.meshes)A.material=A.userData.materialPreOutline,A.geometry.groups=A.userData.groupsPreOutline,A instanceof Wr&&(A.instanceColor=A.userData.colorPreOutline),A.userData.parentPreOutline&&A.userData.parentPreOutline.add(A),A.userData.materialPreOutline=void 0,A.userData.groupsPreOutline=void 0,A.userData.colorPreOutline=void 0,A.userData.parentPreOutline=void 0}}for(const K of this.excludedMeshes)K.visible=!0;this.renderScene.background=k;const M=this.fsQuad.material;M.uniforms.planeBuffer.value=this.planeBuffer.texture,M.uniforms.glossBuffer.value=this.glossBuffer.texture,M.uniforms.outlineBuffer.value=this.outlineBuffer.texture,M.uniforms.sceneColorBuffer.value=v.texture,this.renderToScreen?(o.setRenderTarget(null),this.fsQuad.render(o)):(o.setRenderTarget(l),this.fsQuad.render(o)),l.depthBuffer=b}get vertexShader(){return`
	  varying vec2 vUv;
	  void main() {
	  	vUv = uv;
	  	gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
	  }
	`}get fragmentShader(){return`
	  uniform sampler2D sceneColorBuffer;
	  uniform sampler2D planeBuffer;
	  uniform sampler2D glossBuffer;
	  uniform sampler2D outlineBuffer;
	  uniform vec4 screenSize;
	  uniform vec3 lineColor;
	  
	  uniform float outlineEnabled;
	  
      uniform int width;
	  uniform float opacity;
      uniform float tolerance;
      uniform float glossExponent;
      uniform float minGloss;
      uniform float maxGloss;
      uniform float glossEnabled;

	  varying vec2 vUv;

	  vec4 getValue(sampler2D buffer, int x, int y) {
	  	return texture2D(buffer, vUv + screenSize.zw * vec2(x, y));
	  }

      float normalDiff(vec3 normal1, vec3 normal2) {
        return ((dot(normal1, normal2) - 1.) * -1.) / 2.;
      }

      // Returns 0 if it's background, 1 if it's not
      float getIsBackground(vec3 normal) {
        float background = 1.0;
        background *= step(normal.x, 0.);
        background *= step(normal.y, 0.);
        background *= step(normal.z, 0.);
        background = (background - 1.) * -1.;
        return background;
      }

	  void main() {
	  
	    vec4 sceneColor = getValue(sceneColorBuffer, 0, 0);
	    vec3 normSceneColor = normalize(sceneColor.rgb);
  
        vec4 plane = getValue(planeBuffer, 0, 0);
	    vec3 normal = plane.xyz;
        float distance = plane.w;
  
        vec3 normalTop = getValue(planeBuffer, 0, width).rgb;
        vec3 normalBottom = getValue(planeBuffer, 0, -width).rgb;
        vec3 normalRight = getValue(planeBuffer, width, 0).rgb;
        vec3 normalLeft = getValue(planeBuffer, -width, 0).rgb;
        vec3 normalTopRight = getValue(planeBuffer, width, width).rgb;
        vec3 normalTopLeft = getValue(planeBuffer, -width, width).rgb;
        vec3 normalBottomRight = getValue(planeBuffer, width, -width).rgb;
        vec3 normalBottomLeft = getValue(planeBuffer, -width, -width).rgb;
  
        float distanceTop = getValue(planeBuffer, 0, width).a;
        float distanceBottom = getValue(planeBuffer, 0, -width).a;
        float distanceRight = getValue(planeBuffer, width, 0).a;
        float distanceLeft = getValue(planeBuffer, -width, 0).a;
        float distanceTopRight = getValue(planeBuffer, width, width).a;
        float distanceTopLeft = getValue(planeBuffer, -width, width).a;
        float distanceBottomRight = getValue(planeBuffer, width, -width).a;
        float distanceBottomLeft = getValue(planeBuffer, -width, -width).a;
        
        vec3 sceneColorTop = normalize(getValue(sceneColorBuffer, 1, 0).rgb);
        vec3 sceneColorBottom = normalize(getValue(sceneColorBuffer, -1, 0).rgb);
        vec3 sceneColorLeft = normalize(getValue(sceneColorBuffer, 0, -1).rgb);
        vec3 sceneColorRight = normalize(getValue(sceneColorBuffer, 0, 1).rgb);
        vec3 sceneColorTopRight = normalize(getValue(sceneColorBuffer, 1, 1).rgb);
        vec3 sceneColorBottomRight = normalize(getValue(sceneColorBuffer, -1, 1).rgb);
        vec3 sceneColorTopLeft = normalize(getValue(sceneColorBuffer, 1, 1).rgb);
        vec3 sceneColorBottomLeft = normalize(getValue(sceneColorBuffer, -1, 1).rgb);

        // Checks if the planes of this texel and the neighbour texels are different

        float planeDiff = 0.0;

        planeDiff += step(0.001, normalDiff(normal, normalTop));
        planeDiff += step(0.001, normalDiff(normal, normalBottom));
        planeDiff += step(0.001, normalDiff(normal, normalLeft));
        planeDiff += step(0.001, normalDiff(normal, normalRight));
        planeDiff += step(0.001, normalDiff(normal, normalTopRight));
        planeDiff += step(0.001, normalDiff(normal, normalTopLeft));
        planeDiff += step(0.001, normalDiff(normal, normalBottomRight));
        planeDiff += step(0.001, normalDiff(normal, normalBottomLeft));
        
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorTop));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorBottom));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorLeft));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorRight));
       	planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorTopRight));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorTopLeft));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorBottomRight));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorBottomLeft));

        planeDiff += step(0.001, abs(distance - distanceTop));
        planeDiff += step(0.001, abs(distance - distanceBottom));
        planeDiff += step(0.001, abs(distance - distanceLeft));
        planeDiff += step(0.001, abs(distance - distanceRight));
        planeDiff += step(0.001, abs(distance - distanceTopRight));
        planeDiff += step(0.001, abs(distance - distanceTopLeft));
        planeDiff += step(0.001, abs(distance - distanceBottomRight));
        planeDiff += step(0.001, abs(distance - distanceBottomLeft));

        // Add extra background outline

        int width2 = width + 1;
        vec3 normalTop2 = getValue(planeBuffer, 0, width2).rgb;
        vec3 normalBottom2 = getValue(planeBuffer, 0, -width2).rgb;
        vec3 normalRight2 = getValue(planeBuffer, width2, 0).rgb;
        vec3 normalLeft2 = getValue(planeBuffer, -width2, 0).rgb;
        vec3 normalTopRight2 = getValue(planeBuffer, width2, width2).rgb;
        vec3 normalTopLeft2 = getValue(planeBuffer, -width2, width2).rgb;
        vec3 normalBottomRight2 = getValue(planeBuffer, width2, -width2).rgb;
        vec3 normalBottomLeft2 = getValue(planeBuffer, -width2, -width2).rgb;

        planeDiff += -(getIsBackground(normalTop2) - 1.);
        planeDiff += -(getIsBackground(normalBottom2) - 1.);
        planeDiff += -(getIsBackground(normalRight2) - 1.);
        planeDiff += -(getIsBackground(normalLeft2) - 1.);
        planeDiff += -(getIsBackground(normalTopRight2) - 1.);
        planeDiff += -(getIsBackground(normalBottomRight2) - 1.);
        planeDiff += -(getIsBackground(normalBottomRight2) - 1.);
        planeDiff += -(getIsBackground(normalBottomLeft2) - 1.);

        // Tolerance sets the minimum amount of differences to consider
        // this texel an edge

        float line = step(tolerance, planeDiff);

        // Exclude background and apply opacity

        float background = getIsBackground(normal);
        line *= background;
        line *= opacity;
        
        // Add gloss
        
        vec3 gloss = getValue(glossBuffer, 0, 0).xyz;
        float diffGloss = abs(maxGloss - minGloss);
        vec3 glossExpVector = vec3(glossExponent,glossExponent,glossExponent);
        gloss = min(pow(gloss, glossExpVector), vec3(1.,1.,1.));
        gloss *= diffGloss;
        gloss += minGloss;
        vec4 glossedColor = sceneColor + vec4(gloss, 1.) * glossEnabled;
        
        vec4 corrected = mix(sceneColor, glossedColor, background);
        
        // Draw lines
        
        corrected = mix(corrected, vec4(lineColor, 1.), line);
        
        // Add outline
        
        vec4 outlinePreview =getValue(outlineBuffer, 0, 0);
        float outlineColorCorrection = 1. / max(0.2, outlinePreview.a);
        vec3 outlineColor = outlinePreview.rgb * outlineColorCorrection;
        
        // thickness between 10 and 2, opacity between 1 and 0.2
	    int outlineThickness = int(outlinePreview.a * 10.);
	    
	    float outlineDiff = 0.;
        
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 1, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -1, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, -1).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, 1).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, outlineThickness, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -outlineThickness, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, -outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, outlineThickness, outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -outlineThickness, outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -outlineThickness, -outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, outlineThickness, -outlineThickness).a);
        
        float outLine = step(4., outlineDiff) * step(outlineDiff, 12.) * outlineEnabled;
        corrected = mix(corrected, vec4(outlineColor, 1.), outLine);
        
        gl_FragColor = corrected;
	}
			`}createOutlinePostProcessMaterial(){return new we({uniforms:{opacity:{value:this._opacity},debugVisualize:{value:0},sceneColorBuffer:{value:null},tolerance:{value:this._tolerance},planeBuffer:{value:null},glossBuffer:{value:null},outlineBuffer:{value:null},glossEnabled:{value:1},minGloss:{value:this._minGloss},maxGloss:{value:this._maxGloss},outlineEnabled:{value:0},glossExponent:{value:this._glossExponent},width:{value:1},lineColor:{value:new Mt(this._lineColor)},screenSize:{value:new bo(this.resolution.x,this.resolution.y,1/this.resolution.x,1/this.resolution.y)}},vertexShader:this.vertexShader,fragmentShader:this.fragmentShader})}newRenderTarget(){const o=new ft(this.resolution.x,this.resolution.y);return o.texture.colorSpace="srgb-linear",o.texture.format=ui,o.texture.type=sr,o.texture.minFilter=ze,o.texture.magFilter=ze,o.texture.generateMipmaps=!1,o.stencilBuffer=!1,o}}class ia{constructor(a,o,l){Z(this,"overrideClippingPlanes",!1);Z(this,"composer");Z(this,"_enabled",!1);Z(this,"_initialized",!1);Z(this,"_n8ao");Z(this,"_customEffects");Z(this,"_basePass");Z(this,"_gammaPass");Z(this,"_depthTexture");Z(this,"_settings",{gamma:!0,custom:!0,ao:!1});Z(this,"_renderer");Z(this,"_components");Z(this,"_world");Z(this,"_renderTarget");if(!l.renderer)throw new Error("The given world must have a renderer!");this._components=a,this._renderer=o,this._world=l,this._renderTarget=new ft(window.innerWidth,window.innerHeight),this._renderTarget.texture.colorSpace="srgb-linear",this.composer=new Ho(o,this._renderTarget),this.composer.setSize(window.innerWidth,window.innerHeight)}get basePass(){if(!this._basePass)throw new Error("Custom effects not initialized!");return this._basePass}get gammaPass(){if(!this._gammaPass)throw new Error("Custom effects not initialized!");return this._gammaPass}get customEffects(){if(!this._customEffects)throw new Error("Custom effects not initialized!");return this._customEffects}get n8ao(){if(!this._n8ao)throw new Error("Custom effects not initialized!");return this._n8ao}get enabled(){return this._enabled}set enabled(a){this._initialized||this.initialize(),this._enabled=a}get settings(){return{...this._settings}}dispose(){var a,o,l,v;this._renderTarget.dispose(),(a=this._depthTexture)==null||a.dispose(),(o=this._customEffects)==null||o.dispose(),(l=this._gammaPass)==null||l.dispose(),(v=this._n8ao)==null||v.dispose()}setPasses(a){let o=!1;for(const l in a){const v=l;if(this.settings[v]!==a[v]){o=!0;break}}if(o){for(const l in a){const v=l;this._settings[v]!==void 0&&(this._settings[v]=a[v])}this.updatePasses()}}setSize(a,o){this._initialized&&(this.composer.setSize(a,o),this.basePass.setSize(a,o),this.n8ao.setSize(a,o),this.customEffects.setSize(a,o),this.gammaPass.setSize(a,o))}update(){this._enabled&&this.composer.render()}updateCamera(){const a=this._world.camera.three;this._n8ao&&(this._n8ao.camera=a),this._customEffects&&(this._customEffects.renderCamera=a),this._basePass&&(this._basePass.camera=a)}initialize(){if(!this._world.renderer)throw new Error("The given world must have a renderer!");const a=this._world.scene.three,o=this._world.camera.three;if(!(a instanceof dn))throw new Error("The given scene must have a THREE.Scene as core!");const l=this._world.camera;l.projection&&l.projection.onChanged.add(()=>{this.updateCamera()});const v=this._world.renderer;this.overrideClippingPlanes||(this._renderer.clippingPlanes=v.clippingPlanes),this._renderer.outputColorSpace="srgb",this._renderer.toneMapping=xo,this.newBasePass(a,o),this.newSaoPass(a,o),this.newGammaPass(),this.newCustomPass(a,o),this._initialized=!0,this.updatePasses()}updateProjection(a){this.composer.passes.forEach(o=>{o.camera=a}),this.update()}updatePasses(){for(const a of this.composer.passes)this.composer.removePass(a);this._basePass&&this.composer.addPass(this.basePass),this._settings.gamma&&this.composer.addPass(this.gammaPass),this._settings.ao&&this.composer.addPass(this.n8ao),this._settings.custom&&this.composer.addPass(this.customEffects)}newCustomPass(a,o){this._customEffects=new ra(new Se(window.innerWidth,window.innerHeight),this._components,this._world,a,o)}newGammaPass(){this._gammaPass=new pi(ea)}newSaoPass(a,o){if(!this._world.renderer)throw new Error("The given world must have a renderer!");const{width:l,height:v}=this._world.renderer.getSize();this._n8ao=new $o(a,o,l,v);const{configuration:b}=this._n8ao;b.aoSamples=16,b.denoiseSamples=1,b.denoiseRadius=13,b.aoRadius=1,b.distanceFalloff=4,b.aoRadius=1,b.intensity=4,b.halfRes=!0,b.color=new Mt().setHex(13421772,"srgb-linear")}newBasePass(a,o){this._basePass=new Zo(a,o)}}class fa extends Po{constructor(o,l,v){super(o,l,v);Z(this,"_postproduction");this.onResize.add(b=>this.resizePostproduction(b)),this.onWorldChanged.add(()=>{this.currentWorld&&(this._postproduction&&this._postproduction.dispose(),this._postproduction=new ia(o,this.three,this.currentWorld),this.setPostproductionSize())})}get postproduction(){if(!this._postproduction)throw new Error("Renderer not initialized yet with a world!");return this._postproduction}update(){if(!this.enabled||!this.currentWorld)return;this.onBeforeUpdate.trigger();const o=this.currentWorld.scene.three,l=this.currentWorld.camera.three;this.postproduction.enabled?this.postproduction.composer.render():this.three.render(o,l),o instanceof dn&&this.three2D.render(o,l),this.onAfterUpdate.trigger()}dispose(){super.dispose(),this.postproduction.dispose()}resizePostproduction(o){this.postproduction&&this.setPostproductionSize(o)}setPostproductionSize(o){if(!this.container)return;const l=o?o.x:this.container.clientWidth,v=o?o.y:this.container.clientHeight;this.postproduction.setSize(l,v)}}function ha(){const c=document.createElement("div");return c.style.backgroundColor="black",c.style.color="white",c.style.padding="8px",c.style.borderRadius="8px",c.style.fontFamily="sans-serif",c}var gi={exports:{}};(function(c,a){(function(o,l){c.exports=l()})(Yr,function(){var o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i])})(e,t)},l=function(){return(l=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};function v(e,t,n){for(var r,i=0,s=t.length;i<s;i++)!r&&i in t||((r=r||Array.prototype.slice.call(t,0,i))[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))}var b=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:Yr,S=Object.keys,k=Array.isArray;function M(e,t){return typeof t!="object"||S(t).forEach(function(n){e[n]=t[n]}),e}typeof Promise>"u"||b.Promise||(b.Promise=Promise);var K=Object.getPrototypeOf,X={}.hasOwnProperty;function U(e,t){return X.call(e,t)}function A(e,t){typeof t=="function"&&(t=t(K(e))),(typeof Reflect>"u"?S:Reflect.ownKeys)(t).forEach(function(n){N(e,n,t[n])})}var q=Object.defineProperty;function N(e,t,n,r){q(e,t,M(n&&U(n,"get")&&typeof n.get=="function"?{get:n.get,set:n.set,configurable:!0}:{value:n,configurable:!0,writable:!0},r))}function ie(e){return{from:function(t){return e.prototype=Object.create(t.prototype),N(e.prototype,"constructor",e),{extend:A.bind(null,e.prototype)}}}}var oe=Object.getOwnPropertyDescriptor,ve=[].slice;function ge(e,t,n){return ve.call(e,t,n)}function _(e,t){return t(e)}function J(e){if(!e)throw new Error("Assertion Failed")}function ur(e){b.setImmediate?setImmediate(e):setTimeout(e,0)}function ke(e,t){if(typeof t=="string"&&U(e,t))return e[t];if(!t)return e;if(typeof t!="string"){for(var n=[],r=0,i=t.length;r<i;++r){var s=ke(e,t[r]);n.push(s)}return n}var u=t.indexOf(".");if(u!==-1){var f=e[t.substr(0,u)];return f==null?void 0:ke(f,t.substr(u+1))}}function ye(e,t,n){if(e&&t!==void 0&&!("isFrozen"in Object&&Object.isFrozen(e)))if(typeof t!="string"&&"length"in t){J(typeof n!="string"&&"length"in n);for(var r=0,i=t.length;r<i;++r)ye(e,t[r],n[r])}else{var s,u,f=t.indexOf(".");f!==-1?(s=t.substr(0,f),(u=t.substr(f+1))===""?n===void 0?k(e)&&!isNaN(parseInt(s))?e.splice(s,1):delete e[s]:e[s]=n:ye(f=!(f=e[s])||!U(e,s)?e[s]={}:f,u,n)):n===void 0?k(e)&&!isNaN(parseInt(t))?e.splice(t,1):delete e[t]:e[t]=n}}function lr(e){var t,n={};for(t in e)U(e,t)&&(n[t]=e[t]);return n}var yi=[].concat;function cr(e){return yi.apply([],e)}var Me="BigUint64Array,BigInt64Array,Array,Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,FileSystemDirectoryHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey".split(",").concat(cr([8,16,32,64].map(function(e){return["Int","Uint","Float"].map(function(t){return t+e+"Array"})}))).filter(function(e){return b[e]}),fr=new Set(Me.map(function(e){return b[e]})),dt=null;function Fe(e){return dt=new WeakMap,e=function t(n){if(!n||typeof n!="object")return n;var r=dt.get(n);if(r)return r;if(k(n)){r=[],dt.set(n,r);for(var i=0,s=n.length;i<s;++i)r.push(t(n[i]))}else if(fr.has(n.constructor))r=n;else{var u,f=K(n);for(u in r=f===Object.prototype?{}:Object.create(f),dt.set(n,r),n)U(n,u)&&(r[u]=t(n[u]))}return r}(e),dt=null,e}var bi={}.toString;function vn(e){return bi.call(e).slice(8,-1)}var gn=typeof Symbol<"u"?Symbol.iterator:"@@iterator",xi=typeof gn=="symbol"?function(e){var t;return e!=null&&(t=e[gn])&&t.apply(e)}:function(){return null};function Ue(e,t){return t=e.indexOf(t),0<=t&&e.splice(t,1),0<=t}var $e={};function Te(e){var t,n,r,i;if(arguments.length===1){if(k(e))return e.slice();if(this===$e&&typeof e=="string")return[e];if(i=xi(e)){for(n=[];!(r=i.next()).done;)n.push(r.value);return n}if(e==null)return[e];if(typeof(t=e.length)!="number")return[e];for(n=new Array(t);t--;)n[t]=e[t];return n}for(t=arguments.length,n=new Array(t);t--;)n[t]=arguments[t];return n}var yn=typeof Symbol<"u"?function(e){return e[Symbol.toStringTag]==="AsyncFunction"}:function(){return!1},vt=["Unknown","Constraint","Data","TransactionInactive","ReadOnly","Version","NotFound","InvalidState","InvalidAccess","Abort","Timeout","QuotaExceeded","Syntax","DataClone"],xe=["Modify","Bulk","OpenFailed","VersionChange","Schema","Upgrade","InvalidTable","MissingAPI","NoSuchDatabase","InvalidArgument","SubTransaction","Unsupported","Internal","DatabaseClosed","PrematureCommit","ForeignAwait"].concat(vt),wi={VersionChanged:"Database version changed by other database connection",DatabaseClosed:"Database has been closed",Abort:"Transaction aborted",TransactionInactive:"Transaction has already completed or failed",MissingAPI:"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb"};function et(e,t){this.name=e,this.message=t}function hr(e,t){return e+". Errors: "+Object.keys(t).map(function(n){return t[n].toString()}).filter(function(n,r,i){return i.indexOf(n)===r}).join(`
`)}function It(e,t,n,r){this.failures=t,this.failedKeys=r,this.successCount=n,this.message=hr(e,t)}function tt(e,t){this.name="BulkError",this.failures=Object.keys(t).map(function(n){return t[n]}),this.failuresByPos=t,this.message=hr(e,this.failures)}ie(et).from(Error).extend({toString:function(){return this.name+": "+this.message}}),ie(It).from(et),ie(tt).from(et);var bn=xe.reduce(function(e,t){return e[t]=t+"Error",e},{}),Di=et,V=xe.reduce(function(e,t){var n=t+"Error";function r(i,s){this.name=n,i?typeof i=="string"?(this.message="".concat(i).concat(s?`
 `+s:""),this.inner=s||null):typeof i=="object"&&(this.message="".concat(i.name," ").concat(i.message),this.inner=i):(this.message=wi[t]||n,this.inner=null)}return ie(r).from(Di),e[t]=r,e},{});V.Syntax=SyntaxError,V.Type=TypeError,V.Range=RangeError;var dr=vt.reduce(function(e,t){return e[t+"Error"]=V[t],e},{}),Lt=xe.reduce(function(e,t){return["Syntax","Type","Range"].indexOf(t)===-1&&(e[t+"Error"]=V[t]),e},{});function te(){}function pt(e){return e}function Si(e,t){return e==null||e===pt?t:function(n){return t(e(n))}}function qe(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function Pi(e,t){return e===te?t:function(){var n=e.apply(this,arguments);n!==void 0&&(arguments[0]=n);var r=this.onsuccess,i=this.onerror;this.onsuccess=null,this.onerror=null;var s=t.apply(this,arguments);return r&&(this.onsuccess=this.onsuccess?qe(r,this.onsuccess):r),i&&(this.onerror=this.onerror?qe(i,this.onerror):i),s!==void 0?s:n}}function Ci(e,t){return e===te?t:function(){e.apply(this,arguments);var n=this.onsuccess,r=this.onerror;this.onsuccess=this.onerror=null,t.apply(this,arguments),n&&(this.onsuccess=this.onsuccess?qe(n,this.onsuccess):n),r&&(this.onerror=this.onerror?qe(r,this.onerror):r)}}function Bi(e,t){return e===te?t:function(n){var r=e.apply(this,arguments);M(n,r);var i=this.onsuccess,s=this.onerror;return this.onsuccess=null,this.onerror=null,n=t.apply(this,arguments),i&&(this.onsuccess=this.onsuccess?qe(i,this.onsuccess):i),s&&(this.onerror=this.onerror?qe(s,this.onerror):s),r===void 0?n===void 0?void 0:n:M(r,n)}}function ki(e,t){return e===te?t:function(){return t.apply(this,arguments)!==!1&&e.apply(this,arguments)}}function xn(e,t){return e===te?t:function(){var n=e.apply(this,arguments);if(n&&typeof n.then=="function"){for(var r=this,i=arguments.length,s=new Array(i);i--;)s[i]=arguments[i];return n.then(function(){return t.apply(r,s)})}return t.apply(this,arguments)}}Lt.ModifyError=It,Lt.DexieError=et,Lt.BulkError=tt;var Pe=typeof location<"u"&&/^(http|https):\/\/(localhost|127\.0\.0\.1)/.test(location.href);function pr(e){Pe=e}var mt={},mr=100,Me=typeof Promise>"u"?[]:function(){var e=Promise.resolve();if(typeof crypto>"u"||!crypto.subtle)return[e,K(e),e];var t=crypto.subtle.digest("SHA-512",new Uint8Array([0]));return[t,K(t),e]}(),vt=Me[0],xe=Me[1],Me=Me[2],xe=xe&&xe.then,gt=vt&&vt.constructor,wn=!!Me,yt=function(e,t){bt.push([e,t]),Kt&&(queueMicrotask(Ei),Kt=!1)},Dn=!0,Kt=!0,Qe=[],At=[],Sn=pt,Oe={id:"global",global:!0,ref:0,unhandleds:[],onunhandled:te,pgp:!1,env:{},finalize:te},j=Oe,bt=[],He=0,Nt=[];function L(e){if(typeof this!="object")throw new TypeError("Promises must be constructed via new");this._listeners=[],this._lib=!1;var t=this._PSD=j;if(typeof e!="function"){if(e!==mt)throw new TypeError("Not a function");return this._state=arguments[1],this._value=arguments[2],void(this._state===!1&&Cn(this,this._value))}this._state=null,this._value=null,++t.ref,function n(r,i){try{i(function(s){if(r._state===null){if(s===r)throw new TypeError("A promise cannot be resolved with itself.");var u=r._lib&&nt();s&&typeof s.then=="function"?n(r,function(f,m){s instanceof L?s._then(f,m):s.then(f,m)}):(r._state=!0,r._value=s,gr(r)),u&&rt()}},Cn.bind(null,r))}catch(s){Cn(r,s)}}(this,e)}var Pn={get:function(){var e=j,t=qt;function n(r,i){var s=this,u=!e.global&&(e!==j||t!==qt),f=u&&!Le(),m=new L(function(d,x){Bn(s,new vr(br(r,e,u,f),br(i,e,u,f),d,x,e))});return this._consoleTask&&(m._consoleTask=this._consoleTask),m}return n.prototype=mt,n},set:function(e){N(this,"then",e&&e.prototype===mt?Pn:{get:function(){return e},set:Pn.set})}};function vr(e,t,n,r,i){this.onFulfilled=typeof e=="function"?e:null,this.onRejected=typeof t=="function"?t:null,this.resolve=n,this.reject=r,this.psd=i}function Cn(e,t){var n,r;At.push(t),e._state===null&&(n=e._lib&&nt(),t=Sn(t),e._state=!1,e._value=t,r=e,Qe.some(function(i){return i._value===r._value})||Qe.push(r),gr(e),n&&rt())}function gr(e){var t=e._listeners;e._listeners=[];for(var n=0,r=t.length;n<r;++n)Bn(e,t[n]);var i=e._PSD;--i.ref||i.finalize(),He===0&&(++He,yt(function(){--He==0&&kn()},[]))}function Bn(e,t){if(e._state!==null){var n=e._state?t.onFulfilled:t.onRejected;if(n===null)return(e._state?t.resolve:t.reject)(e._value);++t.psd.ref,++He,yt(Ti,[n,e,t])}else e._listeners.push(t)}function Ti(e,t,n){try{var r,i=t._value;!t._state&&At.length&&(At=[]),r=Pe&&t._consoleTask?t._consoleTask.run(function(){return e(i)}):e(i),t._state||At.indexOf(i)!==-1||function(s){for(var u=Qe.length;u;)if(Qe[--u]._value===s._value)return Qe.splice(u,1)}(t),n.resolve(r)}catch(s){n.reject(s)}finally{--He==0&&kn(),--n.psd.ref||n.psd.finalize()}}function Ei(){Ze(Oe,function(){nt()&&rt()})}function nt(){var e=Dn;return Kt=Dn=!1,e}function rt(){var e,t,n;do for(;0<bt.length;)for(e=bt,bt=[],n=e.length,t=0;t<n;++t){var r=e[t];r[0].apply(null,r[1])}while(0<bt.length);Kt=Dn=!0}function kn(){var e=Qe;Qe=[],e.forEach(function(r){r._PSD.onunhandled.call(null,r._value,r)});for(var t=Nt.slice(0),n=t.length;n;)t[--n]()}function jt(e){return new L(mt,!1,e)}function re(e,t){var n=j;return function(){var r=nt(),i=j;try{return Ke(n,!0),e.apply(this,arguments)}catch(s){t&&t(s)}finally{Ke(i,!1),r&&rt()}}}A(L.prototype,{then:Pn,_then:function(e,t){Bn(this,new vr(null,null,e,t,j))},catch:function(e){if(arguments.length===1)return this.then(null,e);var t=e,n=arguments[1];return typeof t=="function"?this.then(null,function(r){return(r instanceof t?n:jt)(r)}):this.then(null,function(r){return(r&&r.name===t?n:jt)(r)})},finally:function(e){return this.then(function(t){return L.resolve(e()).then(function(){return t})},function(t){return L.resolve(e()).then(function(){return jt(t)})})},timeout:function(e,t){var n=this;return e<1/0?new L(function(r,i){var s=setTimeout(function(){return i(new V.Timeout(t))},e);n.then(r,i).finally(clearTimeout.bind(null,s))}):this}}),typeof Symbol<"u"&&Symbol.toStringTag&&N(L.prototype,Symbol.toStringTag,"Dexie.Promise"),Oe.env=yr(),A(L,{all:function(){var e=Te.apply(null,arguments).map(Qt);return new L(function(t,n){e.length===0&&t([]);var r=e.length;e.forEach(function(i,s){return L.resolve(i).then(function(u){e[s]=u,--r||t(e)},n)})})},resolve:function(e){return e instanceof L?e:e&&typeof e.then=="function"?new L(function(t,n){e.then(t,n)}):new L(mt,!0,e)},reject:jt,race:function(){var e=Te.apply(null,arguments).map(Qt);return new L(function(t,n){e.map(function(r){return L.resolve(r).then(t,n)})})},PSD:{get:function(){return j},set:function(e){return j=e}},totalEchoes:{get:function(){return qt}},newPSD:Ie,usePSD:Ze,scheduler:{get:function(){return yt},set:function(e){yt=e}},rejectionMapper:{get:function(){return Sn},set:function(e){Sn=e}},follow:function(e,t){return new L(function(n,r){return Ie(function(i,s){var u=j;u.unhandleds=[],u.onunhandled=s,u.finalize=qe(function(){var f,m=this;f=function(){m.unhandleds.length===0?i():s(m.unhandleds[0])},Nt.push(function d(){f(),Nt.splice(Nt.indexOf(d),1)}),++He,yt(function(){--He==0&&kn()},[])},u.finalize),e()},t,n,r)})}}),gt&&(gt.allSettled&&N(L,"allSettled",function(){var e=Te.apply(null,arguments).map(Qt);return new L(function(t){e.length===0&&t([]);var n=e.length,r=new Array(n);e.forEach(function(i,s){return L.resolve(i).then(function(u){return r[s]={status:"fulfilled",value:u}},function(u){return r[s]={status:"rejected",reason:u}}).then(function(){return--n||t(r)})})})}),gt.any&&typeof AggregateError<"u"&&N(L,"any",function(){var e=Te.apply(null,arguments).map(Qt);return new L(function(t,n){e.length===0&&n(new AggregateError([]));var r=e.length,i=new Array(r);e.forEach(function(s,u){return L.resolve(s).then(function(f){return t(f)},function(f){i[u]=f,--r||n(new AggregateError(i))})})})}));var le={awaits:0,echoes:0,id:0},Mi=0,Vt=[],Ut=0,qt=0,Ri=0;function Ie(e,t,n,r){var i=j,s=Object.create(i);return s.parent=i,s.ref=0,s.global=!1,s.id=++Ri,Oe.env,s.env=wn?{Promise:L,PromiseProp:{value:L,configurable:!0,writable:!0},all:L.all,race:L.race,allSettled:L.allSettled,any:L.any,resolve:L.resolve,reject:L.reject}:{},t&&M(s,t),++i.ref,s.finalize=function(){--this.parent.ref||this.parent.finalize()},r=Ze(s,e,n,r),s.ref===0&&s.finalize(),r}function it(){return le.id||(le.id=++Mi),++le.awaits,le.echoes+=mr,le.id}function Le(){return!!le.awaits&&(--le.awaits==0&&(le.id=0),le.echoes=le.awaits*mr,!0)}function Qt(e){return le.echoes&&e&&e.constructor===gt?(it(),e.then(function(t){return Le(),t},function(t){return Le(),se(t)})):e}function zi(){var e=Vt[Vt.length-1];Vt.pop(),Ke(e,!1)}function Ke(e,t){var n,r=j;(t?!le.echoes||Ut++&&e===j:!Ut||--Ut&&e===j)||queueMicrotask(t?(function(i){++qt,le.echoes&&--le.echoes!=0||(le.echoes=le.awaits=le.id=0),Vt.push(j),Ke(i,!0)}).bind(null,e):zi),e!==j&&(j=e,r===Oe&&(Oe.env=yr()),wn&&(n=Oe.env.Promise,t=e.env,(r.global||e.global)&&(Object.defineProperty(b,"Promise",t.PromiseProp),n.all=t.all,n.race=t.race,n.resolve=t.resolve,n.reject=t.reject,t.allSettled&&(n.allSettled=t.allSettled),t.any&&(n.any=t.any))))}function yr(){var e=b.Promise;return wn?{Promise:e,PromiseProp:Object.getOwnPropertyDescriptor(b,"Promise"),all:e.all,race:e.race,allSettled:e.allSettled,any:e.any,resolve:e.resolve,reject:e.reject}:{}}function Ze(e,t,n,r,i){var s=j;try{return Ke(e,!0),t(n,r,i)}finally{Ke(s,!1)}}function br(e,t,n,r){return typeof e!="function"?e:function(){var i=j;n&&it(),Ke(t,!0);try{return e.apply(this,arguments)}finally{Ke(i,!1),r&&queueMicrotask(Le)}}}function Tn(e){Promise===gt&&le.echoes===0?Ut===0?e():enqueueNativeMicroTask(e):setTimeout(e,0)}(""+xe).indexOf("[native code]")===-1&&(it=Le=te);var se=L.reject,Ge="￿",Ee="Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.",xr="String expected.",ot=[],Ht="__dbnames",En="readonly",Mn="readwrite";function We(e,t){return e?t?function(){return e.apply(this,arguments)&&t.apply(this,arguments)}:e:t}var wr={type:3,lower:-1/0,lowerOpen:!1,upper:[[]],upperOpen:!1};function Zt(e){return typeof e!="string"||/\./.test(e)?function(t){return t}:function(t){return t[e]===void 0&&e in t&&delete(t=Fe(t))[e],t}}function Dr(){throw V.Type()}function ee(e,t){try{var n=Sr(e),r=Sr(t);if(n!==r)return n==="Array"?1:r==="Array"?-1:n==="binary"?1:r==="binary"?-1:n==="string"?1:r==="string"?-1:n==="Date"?1:r!=="Date"?NaN:-1;switch(n){case"number":case"Date":case"string":return t<e?1:e<t?-1:0;case"binary":return function(i,s){for(var u=i.length,f=s.length,m=u<f?u:f,d=0;d<m;++d)if(i[d]!==s[d])return i[d]<s[d]?-1:1;return u===f?0:u<f?-1:1}(Pr(e),Pr(t));case"Array":return function(i,s){for(var u=i.length,f=s.length,m=u<f?u:f,d=0;d<m;++d){var x=ee(i[d],s[d]);if(x!==0)return x}return u===f?0:u<f?-1:1}(e,t)}}catch{}return NaN}function Sr(e){var t=typeof e;return t!="object"?t:ArrayBuffer.isView(e)?"binary":(e=vn(e),e==="ArrayBuffer"?"binary":e)}function Pr(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(e)}var Cr=(ne.prototype._trans=function(e,t,n){var r=this._tx||j.trans,i=this.name,s=Pe&&typeof console<"u"&&console.createTask&&console.createTask("Dexie: ".concat(e==="readonly"?"read":"write"," ").concat(this.name));function u(d,x,h){if(!h.schema[i])throw new V.NotFound("Table "+i+" not part of transaction");return t(h.idbtrans,h)}var f=nt();try{var m=r&&r.db._novip===this.db._novip?r===j.trans?r._promise(e,u,n):Ie(function(){return r._promise(e,u,n)},{trans:r,transless:j.transless||j}):function d(x,h,w,p){if(x.idbdb&&(x._state.openComplete||j.letThrough||x._vip)){var y=x._createTransaction(h,w,x._dbSchema);try{y.create(),x._state.PR1398_maxLoop=3}catch(D){return D.name===bn.InvalidState&&x.isOpen()&&0<--x._state.PR1398_maxLoop?(console.warn("Dexie: Need to reopen db"),x.close({disableAutoOpen:!1}),x.open().then(function(){return d(x,h,w,p)})):se(D)}return y._promise(h,function(D,g){return Ie(function(){return j.trans=y,p(D,g,y)})}).then(function(D){if(h==="readwrite")try{y.idbtrans.commit()}catch{}return h==="readonly"?D:y._completion.then(function(){return D})})}if(x._state.openComplete)return se(new V.DatabaseClosed(x._state.dbOpenError));if(!x._state.isBeingOpened){if(!x._state.autoOpen)return se(new V.DatabaseClosed);x.open().catch(te)}return x._state.dbReadyPromise.then(function(){return d(x,h,w,p)})}(this.db,e,[this.name],u);return s&&(m._consoleTask=s,m=m.catch(function(d){return console.trace(d),se(d)})),m}finally{f&&rt()}},ne.prototype.get=function(e,t){var n=this;return e&&e.constructor===Object?this.where(e).first(t):e==null?se(new V.Type("Invalid argument to Table.get()")):this._trans("readonly",function(r){return n.core.get({trans:r,key:e}).then(function(i){return n.hook.reading.fire(i)})}).then(t)},ne.prototype.where=function(e){if(typeof e=="string")return new this.db.WhereClause(this,e);if(k(e))return new this.db.WhereClause(this,"[".concat(e.join("+"),"]"));var t=S(e);if(t.length===1)return this.where(t[0]).equals(e[t[0]]);var n=this.schema.indexes.concat(this.schema.primKey).filter(function(m){if(m.compound&&t.every(function(x){return 0<=m.keyPath.indexOf(x)})){for(var d=0;d<t.length;++d)if(t.indexOf(m.keyPath[d])===-1)return!1;return!0}return!1}).sort(function(m,d){return m.keyPath.length-d.keyPath.length})[0];if(n&&this.db._maxKey!==Ge){var u=n.keyPath.slice(0,t.length);return this.where(u).equals(u.map(function(d){return e[d]}))}!n&&Pe&&console.warn("The query ".concat(JSON.stringify(e)," on ").concat(this.name," would benefit from a ")+"compound index [".concat(t.join("+"),"]"));var r=this.schema.idxByName,i=this.db._deps.indexedDB;function s(m,d){return i.cmp(m,d)===0}var f=t.reduce(function(w,d){var x=w[0],h=w[1],w=r[d],p=e[d];return[x||w,x||!w?We(h,w&&w.multi?function(y){return y=ke(y,d),k(y)&&y.some(function(D){return s(p,D)})}:function(y){return s(p,ke(y,d))}):h]},[null,null]),u=f[0],f=f[1];return u?this.where(u.name).equals(e[u.keyPath]).filter(f):n?this.filter(f):this.where(t).equals("")},ne.prototype.filter=function(e){return this.toCollection().and(e)},ne.prototype.count=function(e){return this.toCollection().count(e)},ne.prototype.offset=function(e){return this.toCollection().offset(e)},ne.prototype.limit=function(e){return this.toCollection().limit(e)},ne.prototype.each=function(e){return this.toCollection().each(e)},ne.prototype.toArray=function(e){return this.toCollection().toArray(e)},ne.prototype.toCollection=function(){return new this.db.Collection(new this.db.WhereClause(this))},ne.prototype.orderBy=function(e){return new this.db.Collection(new this.db.WhereClause(this,k(e)?"[".concat(e.join("+"),"]"):e))},ne.prototype.reverse=function(){return this.toCollection().reverse()},ne.prototype.mapToClass=function(e){var t,n=this.db,r=this.name;function i(){return t!==null&&t.apply(this,arguments)||this}(this.schema.mappedClass=e).prototype instanceof Dr&&(function(m,d){if(typeof d!="function"&&d!==null)throw new TypeError("Class extends value "+String(d)+" is not a constructor or null");function x(){this.constructor=m}o(m,d),m.prototype=d===null?Object.create(d):(x.prototype=d.prototype,new x)}(i,t=e),Object.defineProperty(i.prototype,"db",{get:function(){return n},enumerable:!1,configurable:!0}),i.prototype.table=function(){return r},e=i);for(var s=new Set,u=e.prototype;u;u=K(u))Object.getOwnPropertyNames(u).forEach(function(m){return s.add(m)});function f(m){if(!m)return m;var d,x=Object.create(e.prototype);for(d in m)if(!s.has(d))try{x[d]=m[d]}catch{}return x}return this.schema.readHook&&this.hook.reading.unsubscribe(this.schema.readHook),this.schema.readHook=f,this.hook("reading",f),e},ne.prototype.defineClass=function(){return this.mapToClass(function(e){M(this,e)})},ne.prototype.add=function(e,t){var n=this,r=this.schema.primKey,i=r.auto,s=r.keyPath,u=e;return s&&i&&(u=Zt(s)(e)),this._trans("readwrite",function(f){return n.core.mutate({trans:f,type:"add",keys:t!=null?[t]:null,values:[u]})}).then(function(f){return f.numFailures?L.reject(f.failures[0]):f.lastResult}).then(function(f){if(s)try{ye(e,s,f)}catch{}return f})},ne.prototype.update=function(e,t){return typeof e!="object"||k(e)?this.where(":id").equals(e).modify(t):(e=ke(e,this.schema.primKey.keyPath),e===void 0?se(new V.InvalidArgument("Given object does not contain its primary key")):this.where(":id").equals(e).modify(t))},ne.prototype.put=function(e,t){var n=this,r=this.schema.primKey,i=r.auto,s=r.keyPath,u=e;return s&&i&&(u=Zt(s)(e)),this._trans("readwrite",function(f){return n.core.mutate({trans:f,type:"put",values:[u],keys:t!=null?[t]:null})}).then(function(f){return f.numFailures?L.reject(f.failures[0]):f.lastResult}).then(function(f){if(s)try{ye(e,s,f)}catch{}return f})},ne.prototype.delete=function(e){var t=this;return this._trans("readwrite",function(n){return t.core.mutate({trans:n,type:"delete",keys:[e]})}).then(function(n){return n.numFailures?L.reject(n.failures[0]):void 0})},ne.prototype.clear=function(){var e=this;return this._trans("readwrite",function(t){return e.core.mutate({trans:t,type:"deleteRange",range:wr})}).then(function(t){return t.numFailures?L.reject(t.failures[0]):void 0})},ne.prototype.bulkGet=function(e){var t=this;return this._trans("readonly",function(n){return t.core.getMany({keys:e,trans:n}).then(function(r){return r.map(function(i){return t.hook.reading.fire(i)})})})},ne.prototype.bulkAdd=function(e,t,n){var r=this,i=Array.isArray(t)?t:void 0,s=(n=n||(i?void 0:t))?n.allKeys:void 0;return this._trans("readwrite",function(u){var d=r.schema.primKey,f=d.auto,d=d.keyPath;if(d&&i)throw new V.InvalidArgument("bulkAdd(): keys argument invalid on tables with inbound keys");if(i&&i.length!==e.length)throw new V.InvalidArgument("Arguments objects and keys must have the same length");var m=e.length,d=d&&f?e.map(Zt(d)):e;return r.core.mutate({trans:u,type:"add",keys:i,values:d,wantResults:s}).then(function(y){var h=y.numFailures,w=y.results,p=y.lastResult,y=y.failures;if(h===0)return s?w:p;throw new tt("".concat(r.name,".bulkAdd(): ").concat(h," of ").concat(m," operations failed"),y)})})},ne.prototype.bulkPut=function(e,t,n){var r=this,i=Array.isArray(t)?t:void 0,s=(n=n||(i?void 0:t))?n.allKeys:void 0;return this._trans("readwrite",function(u){var d=r.schema.primKey,f=d.auto,d=d.keyPath;if(d&&i)throw new V.InvalidArgument("bulkPut(): keys argument invalid on tables with inbound keys");if(i&&i.length!==e.length)throw new V.InvalidArgument("Arguments objects and keys must have the same length");var m=e.length,d=d&&f?e.map(Zt(d)):e;return r.core.mutate({trans:u,type:"put",keys:i,values:d,wantResults:s}).then(function(y){var h=y.numFailures,w=y.results,p=y.lastResult,y=y.failures;if(h===0)return s?w:p;throw new tt("".concat(r.name,".bulkPut(): ").concat(h," of ").concat(m," operations failed"),y)})})},ne.prototype.bulkUpdate=function(e){var t=this,n=this.core,r=e.map(function(u){return u.key}),i=e.map(function(u){return u.changes}),s=[];return this._trans("readwrite",function(u){return n.getMany({trans:u,keys:r,cache:"clone"}).then(function(f){var m=[],d=[];e.forEach(function(h,w){var p=h.key,y=h.changes,D=f[w];if(D){for(var g=0,P=Object.keys(y);g<P.length;g++){var C=P[g],B=y[C];if(C===t.schema.primKey.keyPath){if(ee(B,p)!==0)throw new V.Constraint("Cannot update primary key in bulkUpdate()")}else ye(D,C,B)}s.push(w),m.push(p),d.push(D)}});var x=m.length;return n.mutate({trans:u,type:"put",keys:m,values:d,updates:{keys:r,changeSpecs:i}}).then(function(h){var w=h.numFailures,p=h.failures;if(w===0)return x;for(var y=0,D=Object.keys(p);y<D.length;y++){var g,P=D[y],C=s[Number(P)];C!=null&&(g=p[P],delete p[P],p[C]=g)}throw new tt("".concat(t.name,".bulkUpdate(): ").concat(w," of ").concat(x," operations failed"),p)})})})},ne.prototype.bulkDelete=function(e){var t=this,n=e.length;return this._trans("readwrite",function(r){return t.core.mutate({trans:r,type:"delete",keys:e})}).then(function(u){var i=u.numFailures,s=u.lastResult,u=u.failures;if(i===0)return s;throw new tt("".concat(t.name,".bulkDelete(): ").concat(i," of ").concat(n," operations failed"),u)})},ne);function ne(){}function xt(e){function t(u,f){if(f){for(var m=arguments.length,d=new Array(m-1);--m;)d[m-1]=arguments[m];return n[u].subscribe.apply(null,d),e}if(typeof u=="string")return n[u]}var n={};t.addEventType=s;for(var r=1,i=arguments.length;r<i;++r)s(arguments[r]);return t;function s(u,f,m){if(typeof u!="object"){var d;f=f||ki;var x={subscribers:[],fire:m=m||te,subscribe:function(h){x.subscribers.indexOf(h)===-1&&(x.subscribers.push(h),x.fire=f(x.fire,h))},unsubscribe:function(h){x.subscribers=x.subscribers.filter(function(w){return w!==h}),x.fire=x.subscribers.reduce(f,m)}};return n[u]=t[u]=x}S(d=u).forEach(function(h){var w=d[h];if(k(w))s(h,d[h][0],d[h][1]);else{if(w!=="asap")throw new V.InvalidArgument("Invalid event config");var p=s(h,pt,function(){for(var y=arguments.length,D=new Array(y);y--;)D[y]=arguments[y];p.subscribers.forEach(function(g){ur(function(){g.apply(null,D)})})})}})}}function wt(e,t){return ie(t).from({prototype:e}),t}function at(e,t){return!(e.filter||e.algorithm||e.or)&&(t?e.justLimit:!e.replayFilter)}function Rn(e,t){e.filter=We(e.filter,t)}function zn(e,t,n){var r=e.replayFilter;e.replayFilter=r?function(){return We(r(),t())}:t,e.justLimit=n&&!r}function Gt(e,t){if(e.isPrimKey)return t.primaryKey;var n=t.getIndexByKeyPath(e.index);if(!n)throw new V.Schema("KeyPath "+e.index+" on object store "+t.name+" is not indexed");return n}function Br(e,t,n){var r=Gt(e,t.schema);return t.openCursor({trans:n,values:!e.keysOnly,reverse:e.dir==="prev",unique:!!e.unique,query:{index:r,range:e.range}})}function Wt(e,t,n,r){var i=e.replayFilter?We(e.filter,e.replayFilter()):e.filter;if(e.or){var s={},u=function(f,m,d){var x,h;i&&!i(m,d,function(w){return m.stop(w)},function(w){return m.fail(w)})||((h=""+(x=m.primaryKey))=="[object ArrayBuffer]"&&(h=""+new Uint8Array(x)),U(s,h)||(s[h]=!0,t(f,m,d)))};return Promise.all([e.or._iterate(u,n),kr(Br(e,r,n),e.algorithm,u,!e.keysOnly&&e.valueMapper)])}return kr(Br(e,r,n),We(e.algorithm,i),t,!e.keysOnly&&e.valueMapper)}function kr(e,t,n,r){var i=re(r?function(s,u,f){return n(r(s),u,f)}:n);return e.then(function(s){if(s)return s.start(function(){var u=function(){return s.continue()};t&&!t(s,function(f){return u=f},function(f){s.stop(f),u=te},function(f){s.fail(f),u=te})||i(s.value,s,function(f){return u=f}),u()})})}var Me=Symbol(),Dt=(Tr.prototype.execute=function(e){if(this.add!==void 0){var t=this.add;if(k(t))return v(v([],k(e)?e:[],!0),t).sort();if(typeof t=="number")return(Number(e)||0)+t;if(typeof t=="bigint")try{return BigInt(e)+t}catch{return BigInt(0)+t}throw new TypeError("Invalid term ".concat(t))}if(this.remove!==void 0){var n=this.remove;if(k(n))return k(e)?e.filter(function(r){return!n.includes(r)}).sort():[];if(typeof n=="number")return Number(e)-n;if(typeof n=="bigint")try{return BigInt(e)-n}catch{return BigInt(0)-n}throw new TypeError("Invalid subtrahend ".concat(n))}return t=(t=this.replacePrefix)===null||t===void 0?void 0:t[0],t&&typeof e=="string"&&e.startsWith(t)?this.replacePrefix[1]+e.substring(t.length):e},Tr);function Tr(e){Object.assign(this,e)}var Fi=($.prototype._read=function(e,t){var n=this._ctx;return n.error?n.table._trans(null,se.bind(null,n.error)):n.table._trans("readonly",e).then(t)},$.prototype._write=function(e){var t=this._ctx;return t.error?t.table._trans(null,se.bind(null,t.error)):t.table._trans("readwrite",e,"locked")},$.prototype._addAlgorithm=function(e){var t=this._ctx;t.algorithm=We(t.algorithm,e)},$.prototype._iterate=function(e,t){return Wt(this._ctx,e,t,this._ctx.table.core)},$.prototype.clone=function(e){var t=Object.create(this.constructor.prototype),n=Object.create(this._ctx);return e&&M(n,e),t._ctx=n,t},$.prototype.raw=function(){return this._ctx.valueMapper=null,this},$.prototype.each=function(e){var t=this._ctx;return this._read(function(n){return Wt(t,e,n,t.table.core)})},$.prototype.count=function(e){var t=this;return this._read(function(n){var r=t._ctx,i=r.table.core;if(at(r,!0))return i.count({trans:n,query:{index:Gt(r,i.schema),range:r.range}}).then(function(u){return Math.min(u,r.limit)});var s=0;return Wt(r,function(){return++s,!1},n,i).then(function(){return s})}).then(e)},$.prototype.sortBy=function(e,t){var n=e.split(".").reverse(),r=n[0],i=n.length-1;function s(m,d){return d?s(m[n[d]],d-1):m[r]}var u=this._ctx.dir==="next"?1:-1;function f(m,d){return m=s(m,i),d=s(d,i),m<d?-u:d<m?u:0}return this.toArray(function(m){return m.sort(f)}).then(t)},$.prototype.toArray=function(e){var t=this;return this._read(function(n){var r=t._ctx;if(r.dir==="next"&&at(r,!0)&&0<r.limit){var i=r.valueMapper,s=Gt(r,r.table.core.schema);return r.table.core.query({trans:n,limit:r.limit,values:!0,query:{index:s,range:r.range}}).then(function(f){return f=f.result,i?f.map(i):f})}var u=[];return Wt(r,function(f){return u.push(f)},n,r.table.core).then(function(){return u})},e)},$.prototype.offset=function(e){var t=this._ctx;return e<=0||(t.offset+=e,at(t)?zn(t,function(){var n=e;return function(r,i){return n===0||(n===1?--n:i(function(){r.advance(n),n=0}),!1)}}):zn(t,function(){var n=e;return function(){return--n<0}})),this},$.prototype.limit=function(e){return this._ctx.limit=Math.min(this._ctx.limit,e),zn(this._ctx,function(){var t=e;return function(n,r,i){return--t<=0&&r(i),0<=t}},!0),this},$.prototype.until=function(e,t){return Rn(this._ctx,function(n,r,i){return!e(n.value)||(r(i),t)}),this},$.prototype.first=function(e){return this.limit(1).toArray(function(t){return t[0]}).then(e)},$.prototype.last=function(e){return this.reverse().first(e)},$.prototype.filter=function(e){var t;return Rn(this._ctx,function(n){return e(n.value)}),(t=this._ctx).isMatch=We(t.isMatch,e),this},$.prototype.and=function(e){return this.filter(e)},$.prototype.or=function(e){return new this.db.WhereClause(this._ctx.table,e,this)},$.prototype.reverse=function(){return this._ctx.dir=this._ctx.dir==="prev"?"next":"prev",this._ondirectionchange&&this._ondirectionchange(this._ctx.dir),this},$.prototype.desc=function(){return this.reverse()},$.prototype.eachKey=function(e){var t=this._ctx;return t.keysOnly=!t.isMatch,this.each(function(n,r){e(r.key,r)})},$.prototype.eachUniqueKey=function(e){return this._ctx.unique="unique",this.eachKey(e)},$.prototype.eachPrimaryKey=function(e){var t=this._ctx;return t.keysOnly=!t.isMatch,this.each(function(n,r){e(r.primaryKey,r)})},$.prototype.keys=function(e){var t=this._ctx;t.keysOnly=!t.isMatch;var n=[];return this.each(function(r,i){n.push(i.key)}).then(function(){return n}).then(e)},$.prototype.primaryKeys=function(e){var t=this._ctx;if(t.dir==="next"&&at(t,!0)&&0<t.limit)return this._read(function(r){var i=Gt(t,t.table.core.schema);return t.table.core.query({trans:r,values:!1,limit:t.limit,query:{index:i,range:t.range}})}).then(function(r){return r.result}).then(e);t.keysOnly=!t.isMatch;var n=[];return this.each(function(r,i){n.push(i.primaryKey)}).then(function(){return n}).then(e)},$.prototype.uniqueKeys=function(e){return this._ctx.unique="unique",this.keys(e)},$.prototype.firstKey=function(e){return this.limit(1).keys(function(t){return t[0]}).then(e)},$.prototype.lastKey=function(e){return this.reverse().firstKey(e)},$.prototype.distinct=function(){var e=this._ctx,e=e.index&&e.table.schema.idxByName[e.index];if(!e||!e.multi)return this;var t={};return Rn(this._ctx,function(i){var r=i.primaryKey.toString(),i=U(t,r);return t[r]=!0,!i}),this},$.prototype.modify=function(e){var t=this,n=this._ctx;return this._write(function(r){var i,s,u;u=typeof e=="function"?e:(i=S(e),s=i.length,function(g){for(var P=!1,C=0;C<s;++C){var B=i[C],T=e[B],E=ke(g,B);T instanceof Dt?(ye(g,B,T.execute(E)),P=!0):E!==T&&(ye(g,B,T),P=!0)}return P});function f(g,B){var C=B.failures,B=B.numFailures;y+=g-B;for(var T=0,E=S(C);T<E.length;T++){var O=E[T];p.push(C[O])}}var m=n.table.core,d=m.schema.primaryKey,x=d.outbound,h=d.extractKey,w=t.db._options.modifyChunkSize||200,p=[],y=0,D=[];return t.clone().primaryKeys().then(function(g){function P(B){var T=Math.min(w,g.length-B);return m.getMany({trans:r,keys:g.slice(B,B+T),cache:"immutable"}).then(function(E){for(var O=[],R=[],F=x?[]:null,I=[],z=0;z<T;++z){var Q=E[z],H={value:Fe(Q),primKey:g[B+z]};u.call(H,H.value,H)!==!1&&(H.value==null?I.push(g[B+z]):x||ee(h(Q),h(H.value))===0?(R.push(H.value),x&&F.push(g[B+z])):(I.push(g[B+z]),O.push(H.value)))}return Promise.resolve(0<O.length&&m.mutate({trans:r,type:"add",values:O}).then(function(Y){for(var G in Y.failures)I.splice(parseInt(G),1);f(O.length,Y)})).then(function(){return(0<R.length||C&&typeof e=="object")&&m.mutate({trans:r,type:"put",keys:F,values:R,criteria:C,changeSpec:typeof e!="function"&&e,isAdditionalChunk:0<B}).then(function(Y){return f(R.length,Y)})}).then(function(){return(0<I.length||C&&e===Fn)&&m.mutate({trans:r,type:"delete",keys:I,criteria:C,isAdditionalChunk:0<B}).then(function(Y){return f(I.length,Y)})}).then(function(){return g.length>B+T&&P(B+w)})})}var C=at(n)&&n.limit===1/0&&(typeof e!="function"||e===Fn)&&{index:n.index,range:n.range};return P(0).then(function(){if(0<p.length)throw new It("Error modifying one or more objects",p,y,D);return g.length})})})},$.prototype.delete=function(){var e=this._ctx,t=e.range;return at(e)&&(e.isPrimKey||t.type===3)?this._write(function(n){var r=e.table.core.schema.primaryKey,i=t;return e.table.core.count({trans:n,query:{index:r,range:i}}).then(function(s){return e.table.core.mutate({trans:n,type:"deleteRange",range:i}).then(function(u){var f=u.failures;if(u.lastResult,u.results,u=u.numFailures,u)throw new It("Could not delete some values",Object.keys(f).map(function(m){return f[m]}),s-u);return s-u})})}):this.modify(Fn)},$);function $(){}var Fn=function(e,t){return t.value=null};function Oi(e,t){return e<t?-1:e===t?0:1}function Ii(e,t){return t<e?-1:e===t?0:1}function be(e,t,n){return e=e instanceof Mr?new e.Collection(e):e,e._ctx.error=new(n||TypeError)(t),e}function st(e){return new e.Collection(e,function(){return Er("")}).limit(0)}function Yt(e,t,n,r){var i,s,u,f,m,d,x,h=n.length;if(!n.every(function(y){return typeof y=="string"}))return be(e,xr);function w(y){i=y==="next"?function(g){return g.toUpperCase()}:function(g){return g.toLowerCase()},s=y==="next"?function(g){return g.toLowerCase()}:function(g){return g.toUpperCase()},u=y==="next"?Oi:Ii;var D=n.map(function(g){return{lower:s(g),upper:i(g)}}).sort(function(g,P){return u(g.lower,P.lower)});f=D.map(function(g){return g.upper}),m=D.map(function(g){return g.lower}),x=(d=y)==="next"?"":r}w("next"),e=new e.Collection(e,function(){return Ae(f[0],m[h-1]+r)}),e._ondirectionchange=function(y){w(y)};var p=0;return e._addAlgorithm(function(y,D,g){var P=y.key;if(typeof P!="string")return!1;var C=s(P);if(t(C,m,p))return!0;for(var B=null,T=p;T<h;++T){var E=function(O,R,F,I,z,Q){for(var H=Math.min(O.length,I.length),Y=-1,G=0;G<H;++G){var De=R[G];if(De!==I[G])return z(O[G],F[G])<0?O.substr(0,G)+F[G]+F.substr(G+1):z(O[G],I[G])<0?O.substr(0,G)+I[G]+F.substr(G+1):0<=Y?O.substr(0,Y)+R[Y]+F.substr(Y+1):null;z(O[G],De)<0&&(Y=G)}return H<I.length&&Q==="next"?O+F.substr(O.length):H<O.length&&Q==="prev"?O.substr(0,F.length):Y<0?null:O.substr(0,Y)+I[Y]+F.substr(Y+1)}(P,C,f[T],m[T],u,d);E===null&&B===null?p=T+1:(B===null||0<u(B,E))&&(B=E)}return D(B!==null?function(){y.continue(B+x)}:g),!1}),e}function Ae(e,t,n,r){return{type:2,lower:e,upper:t,lowerOpen:n,upperOpen:r}}function Er(e){return{type:1,lower:e,upper:e}}var Mr=(Object.defineProperty(ce.prototype,"Collection",{get:function(){return this._ctx.table.db.Collection},enumerable:!1,configurable:!0}),ce.prototype.between=function(e,t,n,r){n=n!==!1,r=r===!0;try{return 0<this._cmp(e,t)||this._cmp(e,t)===0&&(n||r)&&(!n||!r)?st(this):new this.Collection(this,function(){return Ae(e,t,!n,!r)})}catch{return be(this,Ee)}},ce.prototype.equals=function(e){return e==null?be(this,Ee):new this.Collection(this,function(){return Er(e)})},ce.prototype.above=function(e){return e==null?be(this,Ee):new this.Collection(this,function(){return Ae(e,void 0,!0)})},ce.prototype.aboveOrEqual=function(e){return e==null?be(this,Ee):new this.Collection(this,function(){return Ae(e,void 0,!1)})},ce.prototype.below=function(e){return e==null?be(this,Ee):new this.Collection(this,function(){return Ae(void 0,e,!1,!0)})},ce.prototype.belowOrEqual=function(e){return e==null?be(this,Ee):new this.Collection(this,function(){return Ae(void 0,e)})},ce.prototype.startsWith=function(e){return typeof e!="string"?be(this,xr):this.between(e,e+Ge,!0,!0)},ce.prototype.startsWithIgnoreCase=function(e){return e===""?this.startsWith(e):Yt(this,function(t,n){return t.indexOf(n[0])===0},[e],Ge)},ce.prototype.equalsIgnoreCase=function(e){return Yt(this,function(t,n){return t===n[0]},[e],"")},ce.prototype.anyOfIgnoreCase=function(){var e=Te.apply($e,arguments);return e.length===0?st(this):Yt(this,function(t,n){return n.indexOf(t)!==-1},e,"")},ce.prototype.startsWithAnyOfIgnoreCase=function(){var e=Te.apply($e,arguments);return e.length===0?st(this):Yt(this,function(t,n){return n.some(function(r){return t.indexOf(r)===0})},e,Ge)},ce.prototype.anyOf=function(){var e=this,t=Te.apply($e,arguments),n=this._cmp;try{t.sort(n)}catch{return be(this,Ee)}if(t.length===0)return st(this);var r=new this.Collection(this,function(){return Ae(t[0],t[t.length-1])});r._ondirectionchange=function(s){n=s==="next"?e._ascending:e._descending,t.sort(n)};var i=0;return r._addAlgorithm(function(s,u,f){for(var m=s.key;0<n(m,t[i]);)if(++i===t.length)return u(f),!1;return n(m,t[i])===0||(u(function(){s.continue(t[i])}),!1)}),r},ce.prototype.notEqual=function(e){return this.inAnyRange([[-1/0,e],[e,this.db._maxKey]],{includeLowers:!1,includeUppers:!1})},ce.prototype.noneOf=function(){var e=Te.apply($e,arguments);if(e.length===0)return new this.Collection(this);try{e.sort(this._ascending)}catch{return be(this,Ee)}var t=e.reduce(function(n,r){return n?n.concat([[n[n.length-1][1],r]]):[[-1/0,r]]},null);return t.push([e[e.length-1],this.db._maxKey]),this.inAnyRange(t,{includeLowers:!1,includeUppers:!1})},ce.prototype.inAnyRange=function(P,t){var n=this,r=this._cmp,i=this._ascending,s=this._descending,u=this._min,f=this._max;if(P.length===0)return st(this);if(!P.every(function(C){return C[0]!==void 0&&C[1]!==void 0&&i(C[0],C[1])<=0}))return be(this,"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower",V.InvalidArgument);var m=!t||t.includeLowers!==!1,d=t&&t.includeUppers===!0,x,h=i;function w(C,B){return h(C[0],B[0])}try{(x=P.reduce(function(C,B){for(var T=0,E=C.length;T<E;++T){var O=C[T];if(r(B[0],O[1])<0&&0<r(B[1],O[0])){O[0]=u(O[0],B[0]),O[1]=f(O[1],B[1]);break}}return T===E&&C.push(B),C},[])).sort(w)}catch{return be(this,Ee)}var p=0,y=d?function(C){return 0<i(C,x[p][1])}:function(C){return 0<=i(C,x[p][1])},D=m?function(C){return 0<s(C,x[p][0])}:function(C){return 0<=s(C,x[p][0])},g=y,P=new this.Collection(this,function(){return Ae(x[0][0],x[x.length-1][1],!m,!d)});return P._ondirectionchange=function(C){h=C==="next"?(g=y,i):(g=D,s),x.sort(w)},P._addAlgorithm(function(C,B,T){for(var E,O=C.key;g(O);)if(++p===x.length)return B(T),!1;return!y(E=O)&&!D(E)||(n._cmp(O,x[p][1])===0||n._cmp(O,x[p][0])===0||B(function(){h===i?C.continue(x[p][0]):C.continue(x[p][1])}),!1)}),P},ce.prototype.startsWithAnyOf=function(){var e=Te.apply($e,arguments);return e.every(function(t){return typeof t=="string"})?e.length===0?st(this):this.inAnyRange(e.map(function(t){return[t,t+Ge]})):be(this,"startsWithAnyOf() only works with strings")},ce);function ce(){}function Ce(e){return re(function(t){return St(t),e(t.target.error),!1})}function St(e){e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault()}var Pt="storagemutated",On="x-storagemutated-1",Ne=xt(null,Pt),Li=(Be.prototype._lock=function(){return J(!j.global),++this._reculock,this._reculock!==1||j.global||(j.lockOwnerFor=this),this},Be.prototype._unlock=function(){if(J(!j.global),--this._reculock==0)for(j.global||(j.lockOwnerFor=null);0<this._blockedFuncs.length&&!this._locked();){var e=this._blockedFuncs.shift();try{Ze(e[1],e[0])}catch{}}return this},Be.prototype._locked=function(){return this._reculock&&j.lockOwnerFor!==this},Be.prototype.create=function(e){var t=this;if(!this.mode)return this;var n=this.db.idbdb,r=this.db._state.dbOpenError;if(J(!this.idbtrans),!e&&!n)switch(r&&r.name){case"DatabaseClosedError":throw new V.DatabaseClosed(r);case"MissingAPIError":throw new V.MissingAPI(r.message,r);default:throw new V.OpenFailed(r)}if(!this.active)throw new V.TransactionInactive;return J(this._completion._state===null),(e=this.idbtrans=e||(this.db.core||n).transaction(this.storeNames,this.mode,{durability:this.chromeTransactionDurability})).onerror=re(function(i){St(i),t._reject(e.error)}),e.onabort=re(function(i){St(i),t.active&&t._reject(new V.Abort(e.error)),t.active=!1,t.on("abort").fire(i)}),e.oncomplete=re(function(){t.active=!1,t._resolve(),"mutatedParts"in e&&Ne.storagemutated.fire(e.mutatedParts)}),this},Be.prototype._promise=function(e,t,n){var r=this;if(e==="readwrite"&&this.mode!=="readwrite")return se(new V.ReadOnly("Transaction is readonly"));if(!this.active)return se(new V.TransactionInactive);if(this._locked())return new L(function(s,u){r._blockedFuncs.push([function(){r._promise(e,t,n).then(s,u)},j])});if(n)return Ie(function(){var s=new L(function(u,f){r._lock();var m=t(u,f,r);m&&m.then&&m.then(u,f)});return s.finally(function(){return r._unlock()}),s._lib=!0,s});var i=new L(function(s,u){var f=t(s,u,r);f&&f.then&&f.then(s,u)});return i._lib=!0,i},Be.prototype._root=function(){return this.parent?this.parent._root():this},Be.prototype.waitFor=function(e){var t,n=this._root(),r=L.resolve(e);n._waitingFor?n._waitingFor=n._waitingFor.then(function(){return r}):(n._waitingFor=r,n._waitingQueue=[],t=n.idbtrans.objectStore(n.storeNames[0]),function s(){for(++n._spinCount;n._waitingQueue.length;)n._waitingQueue.shift()();n._waitingFor&&(t.get(-1/0).onsuccess=s)}());var i=n._waitingFor;return new L(function(s,u){r.then(function(f){return n._waitingQueue.push(re(s.bind(null,f)))},function(f){return n._waitingQueue.push(re(u.bind(null,f)))}).finally(function(){n._waitingFor===i&&(n._waitingFor=null)})})},Be.prototype.abort=function(){this.active&&(this.active=!1,this.idbtrans&&this.idbtrans.abort(),this._reject(new V.Abort))},Be.prototype.table=function(e){var t=this._memoizedTables||(this._memoizedTables={});if(U(t,e))return t[e];var n=this.schema[e];if(!n)throw new V.NotFound("Table "+e+" not part of transaction");return n=new this.db.Table(e,n,this),n.core=this.db.core.table(e),t[e]=n},Be);function Be(){}function In(e,t,n,r,i,s,u){return{name:e,keyPath:t,unique:n,multi:r,auto:i,compound:s,src:(n&&!u?"&":"")+(r?"*":"")+(i?"++":"")+Rr(t)}}function Rr(e){return typeof e=="string"?e:e?"["+[].join.call(e,"+")+"]":""}function Ln(e,t,n){return{name:e,primKey:t,indexes:n,mappedClass:null,idxByName:(r=function(i){return[i.name,i]},n.reduce(function(i,s,u){return u=r(s,u),u&&(i[u[0]]=u[1]),i},{}))};var r}var Ct=function(e){try{return e.only([[]]),Ct=function(){return[[]]},[[]]}catch{return Ct=function(){return Ge},Ge}};function Kn(e){return e==null?function(){}:typeof e=="string"?(t=e).split(".").length===1?function(n){return n[t]}:function(n){return ke(n,t)}:function(n){return ke(n,e)};var t}function zr(e){return[].slice.call(e)}var Ki=0;function Bt(e){return e==null?":id":typeof e=="string"?e:"[".concat(e.join("+"),"]")}function Ai(e,t,m){function r(g){if(g.type===3)return null;if(g.type===4)throw new Error("Cannot convert never type to IDBKeyRange");var p=g.lower,y=g.upper,D=g.lowerOpen,g=g.upperOpen;return p===void 0?y===void 0?null:t.upperBound(y,!!g):y===void 0?t.lowerBound(p,!!D):t.bound(p,y,!!D,!!g)}function i(w){var p,y=w.name;return{name:y,schema:w,mutate:function(D){var g=D.trans,P=D.type,C=D.keys,B=D.values,T=D.range;return new Promise(function(E,O){E=re(E);var R=g.objectStore(y),F=R.keyPath==null,I=P==="put"||P==="add";if(!I&&P!=="delete"&&P!=="deleteRange")throw new Error("Invalid operation type: "+P);var z,Q=(C||B||{length:1}).length;if(C&&B&&C.length!==B.length)throw new Error("Given keys array must have same length as given values array.");if(Q===0)return E({numFailures:0,failures:{},results:[],lastResult:void 0});function H(me){++De,St(me)}var Y=[],G=[],De=0;if(P==="deleteRange"){if(T.type===4)return E({numFailures:De,failures:G,results:[],lastResult:void 0});T.type===3?Y.push(z=R.clear()):Y.push(z=R.delete(r(T)))}else{var F=I?F?[B,C]:[B,null]:[C,null],W=F[0],de=F[1];if(I)for(var pe=0;pe<Q;++pe)Y.push(z=de&&de[pe]!==void 0?R[P](W[pe],de[pe]):R[P](W[pe])),z.onerror=H;else for(pe=0;pe<Q;++pe)Y.push(z=R[P](W[pe])),z.onerror=H}function ln(me){me=me.target.result,Y.forEach(function(Je,nr){return Je.error!=null&&(G[nr]=Je.error)}),E({numFailures:De,failures:G,results:P==="delete"?C:Y.map(function(Je){return Je.result}),lastResult:me})}z.onerror=function(me){H(me),ln(me)},z.onsuccess=ln})},getMany:function(D){var g=D.trans,P=D.keys;return new Promise(function(C,B){C=re(C);for(var T,E=g.objectStore(y),O=P.length,R=new Array(O),F=0,I=0,z=function(Y){Y=Y.target,R[Y._pos]=Y.result,++I===F&&C(R)},Q=Ce(B),H=0;H<O;++H)P[H]!=null&&((T=E.get(P[H]))._pos=H,T.onsuccess=z,T.onerror=Q,++F);F===0&&C(R)})},get:function(D){var g=D.trans,P=D.key;return new Promise(function(C,B){C=re(C);var T=g.objectStore(y).get(P);T.onsuccess=function(E){return C(E.target.result)},T.onerror=Ce(B)})},query:(p=d,function(D){return new Promise(function(g,P){g=re(g);var C,B,T,F=D.trans,E=D.values,O=D.limit,z=D.query,R=O===1/0?void 0:O,I=z.index,z=z.range,F=F.objectStore(y),I=I.isPrimaryKey?F:F.index(I.name),z=r(z);if(O===0)return g({result:[]});p?((R=E?I.getAll(z,R):I.getAllKeys(z,R)).onsuccess=function(Q){return g({result:Q.target.result})},R.onerror=Ce(P)):(C=0,B=!E&&"openKeyCursor"in I?I.openKeyCursor(z):I.openCursor(z),T=[],B.onsuccess=function(Q){var H=B.result;return H?(T.push(E?H.value:H.primaryKey),++C===O?g({result:T}):void H.continue()):g({result:T})},B.onerror=Ce(P))})}),openCursor:function(D){var g=D.trans,P=D.values,C=D.query,B=D.reverse,T=D.unique;return new Promise(function(E,O){E=re(E);var I=C.index,R=C.range,F=g.objectStore(y),F=I.isPrimaryKey?F:F.index(I.name),I=B?T?"prevunique":"prev":T?"nextunique":"next",z=!P&&"openKeyCursor"in F?F.openKeyCursor(r(R),I):F.openCursor(r(R),I);z.onerror=Ce(O),z.onsuccess=re(function(Q){var H,Y,G,De,W=z.result;W?(W.___id=++Ki,W.done=!1,H=W.continue.bind(W),Y=(Y=W.continuePrimaryKey)&&Y.bind(W),G=W.advance.bind(W),De=function(){throw new Error("Cursor not stopped")},W.trans=g,W.stop=W.continue=W.continuePrimaryKey=W.advance=function(){throw new Error("Cursor not started")},W.fail=re(O),W.next=function(){var de=this,pe=1;return this.start(function(){return pe--?de.continue():de.stop()}).then(function(){return de})},W.start=function(de){function pe(){if(z.result)try{de()}catch(me){W.fail(me)}else W.done=!0,W.start=function(){throw new Error("Cursor behind last entry")},W.stop()}var ln=new Promise(function(me,Je){me=re(me),z.onerror=Ce(Je),W.fail=Je,W.stop=function(nr){W.stop=W.continue=W.continuePrimaryKey=W.advance=De,me(nr)}});return z.onsuccess=re(function(me){z.onsuccess=pe,pe()}),W.continue=H,W.continuePrimaryKey=Y,W.advance=G,pe(),ln},E(W)):E(null)},O)})},count:function(D){var g=D.query,P=D.trans,C=g.index,B=g.range;return new Promise(function(T,E){var O=P.objectStore(y),R=C.isPrimaryKey?O:O.index(C.name),O=r(B),R=O?R.count(O):R.count();R.onsuccess=re(function(F){return T(F.target.result)}),R.onerror=Ce(E)})}}}var s,u,f,x=(u=m,f=zr((s=e).objectStoreNames),{schema:{name:s.name,tables:f.map(function(w){return u.objectStore(w)}).map(function(w){var p=w.keyPath,g=w.autoIncrement,y=k(p),D={},g={name:w.name,primaryKey:{name:null,isPrimaryKey:!0,outbound:p==null,compound:y,keyPath:p,autoIncrement:g,unique:!0,extractKey:Kn(p)},indexes:zr(w.indexNames).map(function(P){return w.index(P)}).map(function(T){var C=T.name,B=T.unique,E=T.multiEntry,T=T.keyPath,E={name:C,compound:k(T),keyPath:T,unique:B,multiEntry:E,extractKey:Kn(T)};return D[Bt(T)]=E}),getIndexByKeyPath:function(P){return D[Bt(P)]}};return D[":id"]=g.primaryKey,p!=null&&(D[Bt(p)]=g.primaryKey),g})},hasGetAll:0<f.length&&"getAll"in u.objectStore(f[0])&&!(typeof navigator<"u"&&/Safari/.test(navigator.userAgent)&&!/(Chrome\/|Edge\/)/.test(navigator.userAgent)&&[].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1]<604)}),m=x.schema,d=x.hasGetAll,x=m.tables.map(i),h={};return x.forEach(function(w){return h[w.name]=w}),{stack:"dbcore",transaction:e.transaction.bind(e),table:function(w){if(!h[w])throw new Error("Table '".concat(w,"' not found"));return h[w]},MIN_KEY:-1/0,MAX_KEY:Ct(t),schema:m}}function Ni(e,t,n,r){var i=n.IDBKeyRange;return n.indexedDB,{dbcore:(r=Ai(t,i,r),e.dbcore.reduce(function(s,u){return u=u.create,l(l({},s),u(s))},r))}}function Xt(e,r){var n=r.db,r=Ni(e._middlewares,n,e._deps,r);e.core=r.dbcore,e.tables.forEach(function(i){var s=i.name;e.core.schema.tables.some(function(u){return u.name===s})&&(i.core=e.core.table(s),e[s]instanceof e.Table&&(e[s].core=i.core))})}function Jt(e,t,n,r){n.forEach(function(i){var s=r[i];t.forEach(function(u){var f=function m(d,x){return oe(d,x)||(d=K(d))&&m(d,x)}(u,i);(!f||"value"in f&&f.value===void 0)&&(u===e.Transaction.prototype||u instanceof e.Transaction?N(u,i,{get:function(){return this.table(i)},set:function(m){q(this,i,{value:m,writable:!0,configurable:!0,enumerable:!0})}}):u[i]=new e.Table(i,s))})})}function An(e,t){t.forEach(function(n){for(var r in n)n[r]instanceof e.Table&&delete n[r]})}function ji(e,t){return e._cfg.version-t._cfg.version}function Vi(e,t,n,r){var i=e._dbSchema;n.objectStoreNames.contains("$meta")&&!i.$meta&&(i.$meta=Ln("$meta",Or("")[0],[]),e._storeNames.push("$meta"));var s=e._createTransaction("readwrite",e._storeNames,i);s.create(n),s._completion.catch(r);var u=s._reject.bind(s),f=j.transless||j;Ie(function(){return j.trans=s,j.transless=f,t!==0?(Xt(e,n),d=t,((m=s).storeNames.includes("$meta")?m.table("$meta").get("version").then(function(x){return x??d}):L.resolve(d)).then(function(x){return w=x,p=s,y=n,D=[],x=(h=e)._versions,g=h._dbSchema=$t(0,h.idbdb,y),(x=x.filter(function(P){return P._cfg.version>=w})).length!==0?(x.forEach(function(P){D.push(function(){var C=g,B=P._cfg.dbschema;en(h,C,y),en(h,B,y),g=h._dbSchema=B;var T=Nn(C,B);T.add.forEach(function(I){jn(y,I[0],I[1].primKey,I[1].indexes)}),T.change.forEach(function(I){if(I.recreate)throw new V.Upgrade("Not yet support for changing primary key");var z=y.objectStore(I.name);I.add.forEach(function(Q){return _t(z,Q)}),I.change.forEach(function(Q){z.deleteIndex(Q.name),_t(z,Q)}),I.del.forEach(function(Q){return z.deleteIndex(Q)})});var E=P._cfg.contentUpgrade;if(E&&P._cfg.version>w){Xt(h,y),p._memoizedTables={};var O=lr(B);T.del.forEach(function(I){O[I]=C[I]}),An(h,[h.Transaction.prototype]),Jt(h,[h.Transaction.prototype],S(O),O),p.schema=O;var R,F=yn(E);return F&&it(),T=L.follow(function(){var I;(R=E(p))&&F&&(I=Le.bind(null,null),R.then(I,I))}),R&&typeof R.then=="function"?L.resolve(R):T.then(function(){return R})}}),D.push(function(C){var B,T,E=P._cfg.dbschema;B=E,T=C,[].slice.call(T.db.objectStoreNames).forEach(function(O){return B[O]==null&&T.db.deleteObjectStore(O)}),An(h,[h.Transaction.prototype]),Jt(h,[h.Transaction.prototype],h._storeNames,h._dbSchema),p.schema=h._dbSchema}),D.push(function(C){h.idbdb.objectStoreNames.contains("$meta")&&(Math.ceil(h.idbdb.version/10)===P._cfg.version?(h.idbdb.deleteObjectStore("$meta"),delete h._dbSchema.$meta,h._storeNames=h._storeNames.filter(function(B){return B!=="$meta"})):C.objectStore("$meta").put(P._cfg.version,"version"))})}),function P(){return D.length?L.resolve(D.shift()(p.idbtrans)).then(P):L.resolve()}().then(function(){Fr(g,y)})):L.resolve();var h,w,p,y,D,g}).catch(u)):(S(i).forEach(function(x){jn(n,x,i[x].primKey,i[x].indexes)}),Xt(e,n),void L.follow(function(){return e.on.populate.fire(s)}).catch(u));var m,d})}function Ui(e,t){Fr(e._dbSchema,t),t.db.version%10!=0||t.objectStoreNames.contains("$meta")||t.db.createObjectStore("$meta").add(Math.ceil(t.db.version/10-1),"version");var n=$t(0,e.idbdb,t);en(e,e._dbSchema,t);for(var r=0,i=Nn(n,e._dbSchema).change;r<i.length;r++){var s=function(u){if(u.change.length||u.recreate)return console.warn("Unable to patch indexes of table ".concat(u.name," because it has changes on the type of index or primary key.")),{value:void 0};var f=t.objectStore(u.name);u.add.forEach(function(m){Pe&&console.debug("Dexie upgrade patch: Creating missing index ".concat(u.name,".").concat(m.src)),_t(f,m)})}(i[r]);if(typeof s=="object")return s.value}}function Nn(e,t){var n,r={del:[],add:[],change:[]};for(n in e)t[n]||r.del.push(n);for(n in t){var i=e[n],s=t[n];if(i){var u={name:n,def:s,recreate:!1,del:[],add:[],change:[]};if(""+(i.primKey.keyPath||"")!=""+(s.primKey.keyPath||"")||i.primKey.auto!==s.primKey.auto)u.recreate=!0,r.change.push(u);else{var f=i.idxByName,m=s.idxByName,d=void 0;for(d in f)m[d]||u.del.push(d);for(d in m){var x=f[d],h=m[d];x?x.src!==h.src&&u.change.push(h):u.add.push(h)}(0<u.del.length||0<u.add.length||0<u.change.length)&&r.change.push(u)}}else r.add.push([n,s])}return r}function jn(e,t,n,r){var i=e.db.createObjectStore(t,n.keyPath?{keyPath:n.keyPath,autoIncrement:n.auto}:{autoIncrement:n.auto});return r.forEach(function(s){return _t(i,s)}),i}function Fr(e,t){S(e).forEach(function(n){t.db.objectStoreNames.contains(n)||(Pe&&console.debug("Dexie: Creating missing table",n),jn(t,n,e[n].primKey,e[n].indexes))})}function _t(e,t){e.createIndex(t.name,t.keyPath,{unique:t.unique,multiEntry:t.multi})}function $t(e,t,n){var r={};return ge(t.objectStoreNames,0).forEach(function(i){for(var s=n.objectStore(i),u=In(Rr(d=s.keyPath),d||"",!0,!1,!!s.autoIncrement,d&&typeof d!="string",!0),f=[],m=0;m<s.indexNames.length;++m){var x=s.index(s.indexNames[m]),d=x.keyPath,x=In(x.name,d,!!x.unique,!!x.multiEntry,!1,d&&typeof d!="string",!1);f.push(x)}r[i]=Ln(i,u,f)}),r}function en(e,t,n){for(var r=n.db.objectStoreNames,i=0;i<r.length;++i){var s=r[i],u=n.objectStore(s);e._hasGetAll="getAll"in u;for(var f=0;f<u.indexNames.length;++f){var m=u.indexNames[f],d=u.index(m).keyPath,x=typeof d=="string"?d:"["+ge(d).join("+")+"]";!t[s]||(d=t[s].idxByName[x])&&(d.name=m,delete t[s].idxByName[x],t[s].idxByName[m]=d)}}typeof navigator<"u"&&/Safari/.test(navigator.userAgent)&&!/(Chrome\/|Edge\/)/.test(navigator.userAgent)&&b.WorkerGlobalScope&&b instanceof b.WorkerGlobalScope&&[].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1]<604&&(e._hasGetAll=!1)}function Or(e){return e.split(",").map(function(t,n){var r=(t=t.trim()).replace(/([&*]|\+\+)/g,""),i=/^\[/.test(r)?r.match(/^\[(.*)\]$/)[1].split("+"):r;return In(r,i||null,/\&/.test(t),/\*/.test(t),/\+\+/.test(t),k(i),n===0)})}var qi=(tn.prototype._parseStoresSpec=function(e,t){S(e).forEach(function(n){if(e[n]!==null){var r=Or(e[n]),i=r.shift();if(i.unique=!0,i.multi)throw new V.Schema("Primary key cannot be multi-valued");r.forEach(function(s){if(s.auto)throw new V.Schema("Only primary key can be marked as autoIncrement (++)");if(!s.keyPath)throw new V.Schema("Index must have a name and cannot be an empty string")}),t[n]=Ln(n,i,r)}})},tn.prototype.stores=function(n){var t=this.db;this._cfg.storesSource=this._cfg.storesSource?M(this._cfg.storesSource,n):n;var n=t._versions,r={},i={};return n.forEach(function(s){M(r,s._cfg.storesSource),i=s._cfg.dbschema={},s._parseStoresSpec(r,i)}),t._dbSchema=i,An(t,[t._allTables,t,t.Transaction.prototype]),Jt(t,[t._allTables,t,t.Transaction.prototype,this._cfg.tables],S(i),i),t._storeNames=S(i),this},tn.prototype.upgrade=function(e){return this._cfg.contentUpgrade=xn(this._cfg.contentUpgrade||te,e),this},tn);function tn(){}function Vn(e,t){var n=e._dbNamesDB;return n||(n=e._dbNamesDB=new Re(Ht,{addons:[],indexedDB:e,IDBKeyRange:t})).version(1).stores({dbnames:"name"}),n.table("dbnames")}function Un(e){return e&&typeof e.databases=="function"}function qn(e){return Ie(function(){return j.letThrough=!0,e()})}function Qn(e){return!("from"in e)}var he=function(e,t){if(!this){var n=new he;return e&&"d"in e&&M(n,e),n}M(this,arguments.length?{d:1,from:e,to:1<arguments.length?t:e}:{d:0})};function kt(e,t,n){var r=ee(t,n);if(!isNaN(r)){if(0<r)throw RangeError();if(Qn(e))return M(e,{from:t,to:n,d:1});var i=e.l,r=e.r;if(ee(n,e.from)<0)return i?kt(i,t,n):e.l={from:t,to:n,d:1,l:null,r:null},Ir(e);if(0<ee(t,e.to))return r?kt(r,t,n):e.r={from:t,to:n,d:1,l:null,r:null},Ir(e);ee(t,e.from)<0&&(e.from=t,e.l=null,e.d=r?r.d+1:1),0<ee(n,e.to)&&(e.to=n,e.r=null,e.d=e.l?e.l.d+1:1),n=!e.r,i&&!e.l&&Tt(e,i),r&&n&&Tt(e,r)}}function Tt(e,t){Qn(t)||function n(r,m){var s=m.from,u=m.to,f=m.l,m=m.r;kt(r,s,u),f&&n(r,f),m&&n(r,m)}(e,t)}function nn(e,t){var n=Hn(t),r=n.next();if(r.done)return!1;for(var i=r.value,s=Hn(e),u=s.next(i.from),f=u.value;!r.done&&!u.done;){if(ee(f.from,i.to)<=0&&0<=ee(f.to,i.from))return!0;ee(i.from,f.from)<0?i=(r=n.next(f.from)).value:f=(u=s.next(i.from)).value}return!1}function Hn(e){var t=Qn(e)?null:{s:0,n:e};return{next:function(n){for(var r=0<arguments.length;t;)switch(t.s){case 0:if(t.s=1,r)for(;t.n.l&&ee(n,t.n.from)<0;)t={up:t,n:t.n.l,s:1};else for(;t.n.l;)t={up:t,n:t.n.l,s:1};case 1:if(t.s=2,!r||ee(n,t.n.to)<=0)return{value:t.n,done:!1};case 2:if(t.n.r){t.s=3,t={up:t,n:t.n.r,s:0};continue}case 3:t=t.up}return{done:!0}}}}function Ir(e){var t,n,r=(((t=e.r)===null||t===void 0?void 0:t.d)||0)-(((n=e.l)===null||n===void 0?void 0:n.d)||0),i=1<r?"r":r<-1?"l":"";i&&(t=i=="r"?"l":"r",n=l({},e),r=e[i],e.from=r.from,e.to=r.to,e[i]=r[i],n[i]=r[t],(e[t]=n).d=Lr(n)),e.d=Lr(e)}function Lr(n){var t=n.r,n=n.l;return(t?n?Math.max(t.d,n.d):t.d:n?n.d:0)+1}function rn(e,t){return S(t).forEach(function(n){e[n]?Tt(e[n],t[n]):e[n]=function r(i){var s,u,f={};for(s in i)U(i,s)&&(u=i[s],f[s]=!u||typeof u!="object"||fr.has(u.constructor)?u:r(u));return f}(t[n])}),e}function Zn(e,t){return e.all||t.all||Object.keys(e).some(function(n){return t[n]&&nn(t[n],e[n])})}A(he.prototype,((xe={add:function(e){return Tt(this,e),this},addKey:function(e){return kt(this,e,e),this},addKeys:function(e){var t=this;return e.forEach(function(n){return kt(t,n,n)}),this}})[gn]=function(){return Hn(this)},xe));var Ye={},Gn={},Wn=!1;function on(e){rn(Gn,e),Wn||(Wn=!0,setTimeout(function(){Wn=!1,Yn(Gn,!(Gn={}))},0))}function Yn(e,t){t===void 0&&(t=!1);var n=new Set;if(e.all)for(var r=0,i=Object.values(Ye);r<i.length;r++)Kr(u=i[r],e,n,t);else for(var s in e){var u,f=/^idb\:\/\/(.*)\/(.*)\//.exec(s);f&&(s=f[1],f=f[2],(u=Ye["idb://".concat(s,"/").concat(f)])&&Kr(u,e,n,t))}n.forEach(function(m){return m()})}function Kr(e,t,n,r){for(var i=[],s=0,u=Object.entries(e.queries.query);s<u.length;s++){for(var f=u[s],m=f[0],d=[],x=0,h=f[1];x<h.length;x++){var w=h[x];Zn(t,w.obsSet)?w.subscribers.forEach(function(g){return n.add(g)}):r&&d.push(w)}r&&i.push([m,d])}if(r)for(var p=0,y=i;p<y.length;p++){var D=y[p],m=D[0],d=D[1];e.queries.query[m]=d}}function Qi(e){var t=e._state,n=e._deps.indexedDB;if(t.isBeingOpened||e.idbdb)return t.dbReadyPromise.then(function(){return t.dbOpenError?se(t.dbOpenError):e});t.isBeingOpened=!0,t.dbOpenError=null,t.openComplete=!1;var r=t.openCanceller,i=Math.round(10*e.verno),s=!1;function u(){if(t.openCanceller!==r)throw new V.DatabaseClosed("db.open() was cancelled")}function f(){return new L(function(w,p){if(u(),!n)throw new V.MissingAPI;var y=e.name,D=t.autoSchema||!i?n.open(y):n.open(y,i);if(!D)throw new V.MissingAPI;D.onerror=Ce(p),D.onblocked=re(e._fireOnBlocked),D.onupgradeneeded=re(function(g){var P;x=D.transaction,t.autoSchema&&!e._options.allowEmptyDB?(D.onerror=St,x.abort(),D.result.close(),(P=n.deleteDatabase(y)).onsuccess=P.onerror=re(function(){p(new V.NoSuchDatabase("Database ".concat(y," doesnt exist")))})):(x.onerror=Ce(p),g=g.oldVersion>Math.pow(2,62)?0:g.oldVersion,h=g<1,e.idbdb=D.result,s&&Ui(e,x),Vi(e,g/10,x,p))},p),D.onsuccess=re(function(){x=null;var g,P,C,B,T,E=e.idbdb=D.result,O=ge(E.objectStoreNames);if(0<O.length)try{var R=E.transaction((B=O).length===1?B[0]:B,"readonly");if(t.autoSchema)P=E,C=R,(g=e).verno=P.version/10,C=g._dbSchema=$t(0,P,C),g._storeNames=ge(P.objectStoreNames,0),Jt(g,[g._allTables],S(C),C);else if(en(e,e._dbSchema,R),((T=Nn($t(0,(T=e).idbdb,R),T._dbSchema)).add.length||T.change.some(function(F){return F.add.length||F.change.length}))&&!s)return console.warn("Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Dexie will add missing parts and increment native version number to workaround this."),E.close(),i=E.version+1,s=!0,w(f());Xt(e,R)}catch{}ot.push(e),E.onversionchange=re(function(F){t.vcFired=!0,e.on("versionchange").fire(F)}),E.onclose=re(function(F){e.on("close").fire(F)}),h&&(T=e._deps,R=y,E=T.indexedDB,T=T.IDBKeyRange,Un(E)||R===Ht||Vn(E,T).put({name:R}).catch(te)),w()},p)}).catch(function(w){switch(w==null?void 0:w.name){case"UnknownError":if(0<t.PR1398_maxLoop)return t.PR1398_maxLoop--,console.warn("Dexie: Workaround for Chrome UnknownError on open()"),f();break;case"VersionError":if(0<i)return i=0,f()}return L.reject(w)})}var m,d=t.dbReadyResolve,x=null,h=!1;return L.race([r,(typeof navigator>"u"?L.resolve():!navigator.userAgentData&&/Safari\//.test(navigator.userAgent)&&!/Chrom(e|ium)\//.test(navigator.userAgent)&&indexedDB.databases?new Promise(function(w){function p(){return indexedDB.databases().finally(w)}m=setInterval(p,100),p()}).finally(function(){return clearInterval(m)}):Promise.resolve()).then(f)]).then(function(){return u(),t.onReadyBeingFired=[],L.resolve(qn(function(){return e.on.ready.fire(e.vip)})).then(function w(){if(0<t.onReadyBeingFired.length){var p=t.onReadyBeingFired.reduce(xn,te);return t.onReadyBeingFired=[],L.resolve(qn(function(){return p(e.vip)})).then(w)}})}).finally(function(){t.openCanceller===r&&(t.onReadyBeingFired=null,t.isBeingOpened=!1)}).catch(function(w){t.dbOpenError=w;try{x&&x.abort()}catch{}return r===t.openCanceller&&e._close(),se(w)}).finally(function(){t.openComplete=!0,d()}).then(function(){var w;return h&&(w={},e.tables.forEach(function(p){p.schema.indexes.forEach(function(y){y.name&&(w["idb://".concat(e.name,"/").concat(p.name,"/").concat(y.name)]=new he(-1/0,[[[]]]))}),w["idb://".concat(e.name,"/").concat(p.name,"/")]=w["idb://".concat(e.name,"/").concat(p.name,"/:dels")]=new he(-1/0,[[[]]])}),Ne(Pt).fire(w),Yn(w,!0)),e})}function Xn(e){function t(s){return e.next(s)}var n=i(t),r=i(function(s){return e.throw(s)});function i(s){return function(m){var f=s(m),m=f.value;return f.done?m:m&&typeof m.then=="function"?m.then(n,r):k(m)?Promise.all(m).then(n,r):n(m)}}return i(t)()}function an(e,t,n){for(var r=k(e)?e.slice():[e],i=0;i<n;++i)r.push(t);return r}var Hi={stack:"dbcore",name:"VirtualIndexMiddleware",level:1,create:function(e){return l(l({},e),{table:function(t){var n=e.table(t),r=n.schema,i={},s=[];function u(h,w,p){var y=Bt(h),D=i[y]=i[y]||[],g=h==null?0:typeof h=="string"?1:h.length,P=0<w,P=l(l({},p),{name:P?"".concat(y,"(virtual-from:").concat(p.name,")"):p.name,lowLevelIndex:p,isVirtual:P,keyTail:w,keyLength:g,extractKey:Kn(h),unique:!P&&p.unique});return D.push(P),P.isPrimaryKey||s.push(P),1<g&&u(g===2?h[0]:h.slice(0,g-1),w+1,p),D.sort(function(C,B){return C.keyTail-B.keyTail}),P}t=u(r.primaryKey.keyPath,0,r.primaryKey),i[":id"]=[t];for(var f=0,m=r.indexes;f<m.length;f++){var d=m[f];u(d.keyPath,0,d)}function x(h){var w,p=h.query.index;return p.isVirtual?l(l({},h),{query:{index:p.lowLevelIndex,range:(w=h.query.range,p=p.keyTail,{type:w.type===1?2:w.type,lower:an(w.lower,w.lowerOpen?e.MAX_KEY:e.MIN_KEY,p),lowerOpen:!0,upper:an(w.upper,w.upperOpen?e.MIN_KEY:e.MAX_KEY,p),upperOpen:!0})}}):h}return l(l({},n),{schema:l(l({},r),{primaryKey:t,indexes:s,getIndexByKeyPath:function(h){return(h=i[Bt(h)])&&h[0]}}),count:function(h){return n.count(x(h))},query:function(h){return n.query(x(h))},openCursor:function(h){var w=h.query.index,p=w.keyTail,y=w.isVirtual,D=w.keyLength;return y?n.openCursor(x(h)).then(function(P){return P&&g(P)}):n.openCursor(h);function g(P){return Object.create(P,{continue:{value:function(C){C!=null?P.continue(an(C,h.reverse?e.MAX_KEY:e.MIN_KEY,p)):h.unique?P.continue(P.key.slice(0,D).concat(h.reverse?e.MIN_KEY:e.MAX_KEY,p)):P.continue()}},continuePrimaryKey:{value:function(C,B){P.continuePrimaryKey(an(C,e.MAX_KEY,p),B)}},primaryKey:{get:function(){return P.primaryKey}},key:{get:function(){var C=P.key;return D===1?C[0]:C.slice(0,D)}},value:{get:function(){return P.value}}})}}})}})}};function Jn(e,t,n,r){return n=n||{},r=r||"",S(e).forEach(function(i){var s,u,f;U(t,i)?(s=e[i],u=t[i],typeof s=="object"&&typeof u=="object"&&s&&u?(f=vn(s))!==vn(u)?n[r+i]=t[i]:f==="Object"?Jn(s,u,n,r+i+"."):s!==u&&(n[r+i]=t[i]):s!==u&&(n[r+i]=t[i])):n[r+i]=void 0}),S(t).forEach(function(i){U(e,i)||(n[r+i]=t[i])}),n}function _n(e,t){return t.type==="delete"?t.keys:t.keys||t.values.map(e.extractKey)}var Zi={stack:"dbcore",name:"HooksMiddleware",level:2,create:function(e){return l(l({},e),{table:function(t){var n=e.table(t),r=n.schema.primaryKey;return l(l({},n),{mutate:function(i){var s=j.trans,u=s.table(t).hook,f=u.deleting,m=u.creating,d=u.updating;switch(i.type){case"add":if(m.fire===te)break;return s._promise("readwrite",function(){return x(i)},!0);case"put":if(m.fire===te&&d.fire===te)break;return s._promise("readwrite",function(){return x(i)},!0);case"delete":if(f.fire===te)break;return s._promise("readwrite",function(){return x(i)},!0);case"deleteRange":if(f.fire===te)break;return s._promise("readwrite",function(){return function h(w,p,y){return n.query({trans:w,values:!1,query:{index:r,range:p},limit:y}).then(function(D){var g=D.result;return x({type:"delete",keys:g,trans:w}).then(function(P){return 0<P.numFailures?Promise.reject(P.failures[0]):g.length<y?{failures:[],numFailures:0,lastResult:void 0}:h(w,l(l({},p),{lower:g[g.length-1],lowerOpen:!0}),y)})})}(i.trans,i.range,1e4)},!0)}return n.mutate(i);function x(h){var w,p,y,D=j.trans,g=h.keys||_n(r,h);if(!g)throw new Error("Keys missing");return(h=h.type==="add"||h.type==="put"?l(l({},h),{keys:g}):l({},h)).type!=="delete"&&(h.values=v([],h.values)),h.keys&&(h.keys=v([],h.keys)),w=n,y=g,((p=h).type==="add"?Promise.resolve([]):w.getMany({trans:p.trans,keys:y,cache:"immutable"})).then(function(P){var C=g.map(function(B,T){var E,O,R,F=P[T],I={onerror:null,onsuccess:null};return h.type==="delete"?f.fire.call(I,B,F,D):h.type==="add"||F===void 0?(E=m.fire.call(I,B,h.values[T],D),B==null&&E!=null&&(h.keys[T]=B=E,r.outbound||ye(h.values[T],r.keyPath,B))):(E=Jn(F,h.values[T]),(O=d.fire.call(I,E,B,F,D))&&(R=h.values[T],Object.keys(O).forEach(function(z){U(R,z)?R[z]=O[z]:ye(R,z,O[z])}))),I});return n.mutate(h).then(function(B){for(var T=B.failures,E=B.results,O=B.numFailures,B=B.lastResult,R=0;R<g.length;++R){var F=(E||g)[R],I=C[R];F==null?I.onerror&&I.onerror(T[R]):I.onsuccess&&I.onsuccess(h.type==="put"&&P[R]?h.values[R]:F)}return{failures:T,results:E,numFailures:O,lastResult:B}}).catch(function(B){return C.forEach(function(T){return T.onerror&&T.onerror(B)}),Promise.reject(B)})})}}})}})}};function Ar(e,t,n){try{if(!t||t.keys.length<e.length)return null;for(var r=[],i=0,s=0;i<t.keys.length&&s<e.length;++i)ee(t.keys[i],e[s])===0&&(r.push(n?Fe(t.values[i]):t.values[i]),++s);return r.length===e.length?r:null}catch{return null}}var Gi={stack:"dbcore",level:-1,create:function(e){return{table:function(t){var n=e.table(t);return l(l({},n),{getMany:function(r){if(!r.cache)return n.getMany(r);var i=Ar(r.keys,r.trans._cache,r.cache==="clone");return i?L.resolve(i):n.getMany(r).then(function(s){return r.trans._cache={keys:r.keys,values:r.cache==="clone"?Fe(s):s},s})},mutate:function(r){return r.type!=="add"&&(r.trans._cache=null),n.mutate(r)}})}}}};function Nr(e,t){return e.trans.mode==="readonly"&&!!e.subscr&&!e.trans.explicit&&e.trans.db._options.cache!=="disabled"&&!t.schema.primaryKey.outbound}function jr(e,t){switch(e){case"query":return t.values&&!t.unique;case"get":case"getMany":case"count":case"openCursor":return!1}}var Wi={stack:"dbcore",level:0,name:"Observability",create:function(e){var t=e.schema.name,n=new he(e.MIN_KEY,e.MAX_KEY);return l(l({},e),{transaction:function(r,i,s){if(j.subscr&&i!=="readonly")throw new V.ReadOnly("Readwrite transaction in liveQuery context. Querier source: ".concat(j.querier));return e.transaction(r,i,s)},table:function(r){var i=e.table(r),s=i.schema,u=s.primaryKey,h=s.indexes,f=u.extractKey,m=u.outbound,d=u.autoIncrement&&h.filter(function(p){return p.compound&&p.keyPath.includes(u.keyPath)}),x=l(l({},i),{mutate:function(p){function y(z){return z="idb://".concat(t,"/").concat(r,"/").concat(z),B[z]||(B[z]=new he)}var D,g,P,C=p.trans,B=p.mutatedParts||(p.mutatedParts={}),T=y(""),E=y(":dels"),O=p.type,I=p.type==="deleteRange"?[p.range]:p.type==="delete"?[p.keys]:p.values.length<50?[_n(u,p).filter(function(z){return z}),p.values]:[],R=I[0],F=I[1],I=p.trans._cache;return k(R)?(T.addKeys(R),(I=O==="delete"||R.length===F.length?Ar(R,I):null)||E.addKeys(R),(I||F)&&(D=y,g=I,P=F,s.indexes.forEach(function(z){var Q=D(z.name||"");function H(G){return G!=null?z.extractKey(G):null}function Y(G){return z.multiEntry&&k(G)?G.forEach(function(De){return Q.addKey(De)}):Q.addKey(G)}(g||P).forEach(function(G,de){var W=g&&H(g[de]),de=P&&H(P[de]);ee(W,de)!==0&&(W!=null&&Y(W),de!=null&&Y(de))})}))):R?(F={from:R.lower,to:R.upper},E.add(F),T.add(F)):(T.add(n),E.add(n),s.indexes.forEach(function(z){return y(z.name).add(n)})),i.mutate(p).then(function(z){return!R||p.type!=="add"&&p.type!=="put"||(T.addKeys(z.results),d&&d.forEach(function(Q){var H=p.values.map(function(G){return Q.extractKey(G)}),Y=Q.keyPath.findIndex(function(G){return G===u.keyPath});z.results.forEach(function(G){return H[Y]=G}),y(Q.name).addKeys(H)})),C.mutatedParts=rn(C.mutatedParts||{},B),z})}}),h=function(y){var D=y.query,y=D.index,D=D.range;return[y,new he((y=D.lower)!==null&&y!==void 0?y:e.MIN_KEY,(D=D.upper)!==null&&D!==void 0?D:e.MAX_KEY)]},w={get:function(p){return[u,new he(p.key)]},getMany:function(p){return[u,new he().addKeys(p.keys)]},count:h,query:h,openCursor:h};return S(w).forEach(function(p){x[p]=function(y){var D=j.subscr,g=!!D,P=Nr(j,i)&&jr(p,y)?y.obsSet={}:D;if(g){var C=function(F){return F="idb://".concat(t,"/").concat(r,"/").concat(F),P[F]||(P[F]=new he)},B=C(""),T=C(":dels"),D=w[p](y),g=D[0],D=D[1];if((p==="query"&&g.isPrimaryKey&&!y.values?T:C(g.name||"")).add(D),!g.isPrimaryKey){if(p!=="count"){var E=p==="query"&&m&&y.values&&i.query(l(l({},y),{values:!1}));return i[p].apply(this,arguments).then(function(F){if(p==="query"){if(m&&y.values)return E.then(function(H){return H=H.result,B.addKeys(H),F});var I=y.values?F.result.map(f):F.result;(y.values?B:T).addKeys(I)}else if(p==="openCursor"){var z=F,Q=y.values;return z&&Object.create(z,{key:{get:function(){return T.addKey(z.primaryKey),z.key}},primaryKey:{get:function(){var H=z.primaryKey;return T.addKey(H),H}},value:{get:function(){return Q&&B.addKey(z.primaryKey),z.value}}})}return F})}T.add(n)}}return i[p].apply(this,arguments)}}),x}})}};function Vr(e,t,n){if(n.numFailures===0)return t;if(t.type==="deleteRange")return null;var r=t.keys?t.keys.length:"values"in t&&t.values?t.values.length:1;return n.numFailures===r?null:(t=l({},t),k(t.keys)&&(t.keys=t.keys.filter(function(i,s){return!(s in n.failures)})),"values"in t&&k(t.values)&&(t.values=t.values.filter(function(i,s){return!(s in n.failures)})),t)}function $n(e,t){return n=e,((r=t).lower===void 0||(r.lowerOpen?0<ee(n,r.lower):0<=ee(n,r.lower)))&&(e=e,(t=t).upper===void 0||(t.upperOpen?ee(e,t.upper)<0:ee(e,t.upper)<=0));var n,r}function Ur(e,t,w,r,i,s){if(!w||w.length===0)return e;var u=t.query.index,f=u.multiEntry,m=t.query.range,d=r.schema.primaryKey.extractKey,x=u.extractKey,h=(u.lowLevelIndex||u).extractKey,w=w.reduce(function(p,y){var D=p,g=y.type==="add"||y.type==="put"?y.values.filter(function(T){return T=x(T),f&&k(T)?T.some(function(E){return $n(E,m)}):$n(T,m)}).map(function(T){return T=Fe(T),s&&Object.freeze(T),T}):[];switch(y.type){case"add":D=p.concat(t.values?g:g.map(function(E){return d(E)}));break;case"put":var P=new he().addKeys(y.values.map(function(E){return d(E)})),D=p.filter(function(E){return E=t.values?d(E):E,!nn(new he(E),P)}).concat(t.values?g:g.map(function(E){return d(E)}));break;case"delete":var C=new he().addKeys(y.keys);D=p.filter(function(E){return E=t.values?d(E):E,!nn(new he(E),C)});break;case"deleteRange":var B=y.range;D=p.filter(function(E){return!$n(d(E),B)})}return D},e);return w===e?e:(w.sort(function(p,y){return ee(h(p),h(y))||ee(d(p),d(y))}),t.limit&&t.limit<1/0&&(w.length>t.limit?w.length=t.limit:e.length===t.limit&&w.length<t.limit&&(i.dirty=!0)),s?Object.freeze(w):w)}function qr(e,t){return ee(e.lower,t.lower)===0&&ee(e.upper,t.upper)===0&&!!e.lowerOpen==!!t.lowerOpen&&!!e.upperOpen==!!t.upperOpen}function Yi(e,t){return function(n,r,i,s){if(n===void 0)return r!==void 0?-1:0;if(r===void 0)return 1;if((r=ee(n,r))===0){if(i&&s)return 0;if(i)return 1;if(s)return-1}return r}(e.lower,t.lower,e.lowerOpen,t.lowerOpen)<=0&&0<=function(n,r,i,s){if(n===void 0)return r!==void 0?1:0;if(r===void 0)return-1;if((r=ee(n,r))===0){if(i&&s)return 0;if(i)return-1;if(s)return 1}return r}(e.upper,t.upper,e.upperOpen,t.upperOpen)}function Xi(e,t,n,r){e.subscribers.add(n),r.addEventListener("abort",function(){var i,s;e.subscribers.delete(n),e.subscribers.size===0&&(i=e,s=t,setTimeout(function(){i.subscribers.size===0&&Ue(s,i)},3e3))})}var Ji={stack:"dbcore",level:0,name:"Cache",create:function(e){var t=e.schema.name;return l(l({},e),{transaction:function(n,r,i){var s,u,f=e.transaction(n,r,i);return r==="readwrite"&&(u=(s=new AbortController).signal,i=function(m){return function(){if(s.abort(),r==="readwrite"){for(var d=new Set,x=0,h=n;x<h.length;x++){var w=h[x],p=Ye["idb://".concat(t,"/").concat(w)];if(p){var y=e.table(w),D=p.optimisticOps.filter(function(Q){return Q.trans===f});if(f._explicit&&m&&f.mutatedParts)for(var g=0,P=Object.values(p.queries.query);g<P.length;g++)for(var C=0,B=(O=P[g]).slice();C<B.length;C++)Zn((R=B[C]).obsSet,f.mutatedParts)&&(Ue(O,R),R.subscribers.forEach(function(Q){return d.add(Q)}));else if(0<D.length){p.optimisticOps=p.optimisticOps.filter(function(Q){return Q.trans!==f});for(var T=0,E=Object.values(p.queries.query);T<E.length;T++)for(var O,R,F,I=0,z=(O=E[T]).slice();I<z.length;I++)(R=z[I]).res!=null&&f.mutatedParts&&(m&&!R.dirty?(F=Object.isFrozen(R.res),F=Ur(R.res,R.req,D,y,R,F),R.dirty?(Ue(O,R),R.subscribers.forEach(function(Q){return d.add(Q)})):F!==R.res&&(R.res=F,R.promise=L.resolve({result:F}))):(R.dirty&&Ue(O,R),R.subscribers.forEach(function(Q){return d.add(Q)})))}}}d.forEach(function(Q){return Q()})}}},f.addEventListener("abort",i(!1),{signal:u}),f.addEventListener("error",i(!1),{signal:u}),f.addEventListener("complete",i(!0),{signal:u})),f},table:function(n){var r=e.table(n),i=r.schema.primaryKey;return l(l({},r),{mutate:function(s){var u=j.trans;if(i.outbound||u.db._options.cache==="disabled"||u.explicit)return r.mutate(s);var f=Ye["idb://".concat(t,"/").concat(n)];return f?(u=r.mutate(s),s.type!=="add"&&s.type!=="put"||!(50<=s.values.length||_n(i,s).some(function(m){return m==null}))?(f.optimisticOps.push(s),s.mutatedParts&&on(s.mutatedParts),u.then(function(m){0<m.numFailures&&(Ue(f.optimisticOps,s),(m=Vr(0,s,m))&&f.optimisticOps.push(m),s.mutatedParts&&on(s.mutatedParts))}),u.catch(function(){Ue(f.optimisticOps,s),s.mutatedParts&&on(s.mutatedParts)})):u.then(function(m){var d=Vr(0,l(l({},s),{values:s.values.map(function(p,h){var w,p=(w=i.keyPath)!==null&&w!==void 0&&w.includes(".")?Fe(p):l({},p);return ye(p,i.keyPath,m.results[h]),p})}),m);f.optimisticOps.push(d),queueMicrotask(function(){return s.mutatedParts&&on(s.mutatedParts)})}),u):r.mutate(s)},query:function(s){if(!Nr(j,r)||!jr("query",s))return r.query(s);var u=((d=j.trans)===null||d===void 0?void 0:d.db._options.cache)==="immutable",h=j,f=h.requery,m=h.signal,d=function(y,D,g,P){var C=Ye["idb://".concat(y,"/").concat(D)];if(!C)return[];if(!(D=C.queries[g]))return[null,!1,C,null];var B=D[(P.query?P.query.index.name:null)||""];if(!B)return[null,!1,C,null];switch(g){case"query":var T=B.find(function(E){return E.req.limit===P.limit&&E.req.values===P.values&&qr(E.req.query.range,P.query.range)});return T?[T,!0,C,B]:[B.find(function(E){return("limit"in E.req?E.req.limit:1/0)>=P.limit&&(!P.values||E.req.values)&&Yi(E.req.query.range,P.query.range)}),!1,C,B];case"count":return T=B.find(function(E){return qr(E.req.query.range,P.query.range)}),[T,!!T,C,B]}}(t,n,"query",s),x=d[0],h=d[1],w=d[2],p=d[3];return x&&h?x.obsSet=s.obsSet:(h=r.query(s).then(function(y){var D=y.result;if(x&&(x.res=D),u){for(var g=0,P=D.length;g<P;++g)Object.freeze(D[g]);Object.freeze(D)}else y.result=Fe(D);return y}).catch(function(y){return p&&x&&Ue(p,x),Promise.reject(y)}),x={obsSet:s.obsSet,promise:h,subscribers:new Set,type:"query",req:s,dirty:!1},p?p.push(x):(p=[x],(w=w||(Ye["idb://".concat(t,"/").concat(n)]={queries:{query:{},count:{}},objs:new Map,optimisticOps:[],unsignaledParts:{}})).queries.query[s.query.index.name||""]=p)),Xi(x,p,f,m),x.promise.then(function(y){return{result:Ur(y.result,s,w==null?void 0:w.optimisticOps,r,x,u)}})}})}})}};function sn(e,t){return new Proxy(e,{get:function(n,r,i){return r==="db"?t:Reflect.get(n,r,i)}})}var Re=(ue.prototype.version=function(e){if(isNaN(e)||e<.1)throw new V.Type("Given version is not a positive number");if(e=Math.round(10*e)/10,this.idbdb||this._state.isBeingOpened)throw new V.Schema("Cannot add version when database is open");this.verno=Math.max(this.verno,e);var t=this._versions,n=t.filter(function(r){return r._cfg.version===e})[0];return n||(n=new this.Version(e),t.push(n),t.sort(ji),n.stores({}),this._state.autoSchema=!1,n)},ue.prototype._whenReady=function(e){var t=this;return this.idbdb&&(this._state.openComplete||j.letThrough||this._vip)?e():new L(function(n,r){if(t._state.openComplete)return r(new V.DatabaseClosed(t._state.dbOpenError));if(!t._state.isBeingOpened){if(!t._state.autoOpen)return void r(new V.DatabaseClosed);t.open().catch(te)}t._state.dbReadyPromise.then(n,r)}).then(e)},ue.prototype.use=function(e){var t=e.stack,n=e.create,r=e.level,i=e.name;return i&&this.unuse({stack:t,name:i}),e=this._middlewares[t]||(this._middlewares[t]=[]),e.push({stack:t,create:n,level:r??10,name:i}),e.sort(function(s,u){return s.level-u.level}),this},ue.prototype.unuse=function(e){var t=e.stack,n=e.name,r=e.create;return t&&this._middlewares[t]&&(this._middlewares[t]=this._middlewares[t].filter(function(i){return r?i.create!==r:!!n&&i.name!==n})),this},ue.prototype.open=function(){var e=this;return Ze(Oe,function(){return Qi(e)})},ue.prototype._close=function(){var e=this._state,t=ot.indexOf(this);if(0<=t&&ot.splice(t,1),this.idbdb){try{this.idbdb.close()}catch{}this.idbdb=null}e.isBeingOpened||(e.dbReadyPromise=new L(function(n){e.dbReadyResolve=n}),e.openCanceller=new L(function(n,r){e.cancelOpen=r}))},ue.prototype.close=function(n){var t=(n===void 0?{disableAutoOpen:!0}:n).disableAutoOpen,n=this._state;t?(n.isBeingOpened&&n.cancelOpen(new V.DatabaseClosed),this._close(),n.autoOpen=!1,n.dbOpenError=new V.DatabaseClosed):(this._close(),n.autoOpen=this._options.autoOpen||n.isBeingOpened,n.openComplete=!1,n.dbOpenError=null)},ue.prototype.delete=function(e){var t=this;e===void 0&&(e={disableAutoOpen:!0});var n=0<arguments.length&&typeof arguments[0]!="object",r=this._state;return new L(function(i,s){function u(){t.close(e);var f=t._deps.indexedDB.deleteDatabase(t.name);f.onsuccess=re(function(){var m,d,x;m=t._deps,d=t.name,x=m.indexedDB,m=m.IDBKeyRange,Un(x)||d===Ht||Vn(x,m).delete(d).catch(te),i()}),f.onerror=Ce(s),f.onblocked=t._fireOnBlocked}if(n)throw new V.InvalidArgument("Invalid closeOptions argument to db.delete()");r.isBeingOpened?r.dbReadyPromise.then(u):u()})},ue.prototype.backendDB=function(){return this.idbdb},ue.prototype.isOpen=function(){return this.idbdb!==null},ue.prototype.hasBeenClosed=function(){var e=this._state.dbOpenError;return e&&e.name==="DatabaseClosed"},ue.prototype.hasFailed=function(){return this._state.dbOpenError!==null},ue.prototype.dynamicallyOpened=function(){return this._state.autoSchema},Object.defineProperty(ue.prototype,"tables",{get:function(){var e=this;return S(this._allTables).map(function(t){return e._allTables[t]})},enumerable:!1,configurable:!0}),ue.prototype.transaction=function(){var e=(function(t,n,r){var i=arguments.length;if(i<2)throw new V.InvalidArgument("Too few arguments");for(var s=new Array(i-1);--i;)s[i-1]=arguments[i];return r=s.pop(),[t,cr(s),r]}).apply(this,arguments);return this._transaction.apply(this,e)},ue.prototype._transaction=function(e,t,n){var r=this,i=j.trans;i&&i.db===this&&e.indexOf("!")===-1||(i=null);var s,u,f=e.indexOf("?")!==-1;e=e.replace("!","").replace("?","");try{if(u=t.map(function(d){if(d=d instanceof r.Table?d.name:d,typeof d!="string")throw new TypeError("Invalid table argument to Dexie.transaction(). Only Table or String are allowed");return d}),e=="r"||e===En)s=En;else{if(e!="rw"&&e!=Mn)throw new V.InvalidArgument("Invalid transaction mode: "+e);s=Mn}if(i){if(i.mode===En&&s===Mn){if(!f)throw new V.SubTransaction("Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY");i=null}i&&u.forEach(function(d){if(i&&i.storeNames.indexOf(d)===-1){if(!f)throw new V.SubTransaction("Table "+d+" not included in parent transaction.");i=null}}),f&&i&&!i.active&&(i=null)}}catch(d){return i?i._promise(null,function(x,h){h(d)}):se(d)}var m=(function d(x,h,w,p,y){return L.resolve().then(function(){var D=j.transless||j,g=x._createTransaction(h,w,x._dbSchema,p);if(g.explicit=!0,D={trans:g,transless:D},p)g.idbtrans=p.idbtrans;else try{g.create(),g.idbtrans._explicit=!0,x._state.PR1398_maxLoop=3}catch(B){return B.name===bn.InvalidState&&x.isOpen()&&0<--x._state.PR1398_maxLoop?(console.warn("Dexie: Need to reopen db"),x.close({disableAutoOpen:!1}),x.open().then(function(){return d(x,h,w,null,y)})):se(B)}var P,C=yn(y);return C&&it(),D=L.follow(function(){var B;(P=y.call(g,g))&&(C?(B=Le.bind(null,null),P.then(B,B)):typeof P.next=="function"&&typeof P.throw=="function"&&(P=Xn(P)))},D),(P&&typeof P.then=="function"?L.resolve(P).then(function(B){return g.active?B:se(new V.PrematureCommit("Transaction committed too early. See http://bit.ly/2kdckMn"))}):D.then(function(){return P})).then(function(B){return p&&g._resolve(),g._completion.then(function(){return B})}).catch(function(B){return g._reject(B),se(B)})})}).bind(null,this,s,u,i,n);return i?i._promise(s,m,"lock"):j.trans?Ze(j.transless,function(){return r._whenReady(m)}):this._whenReady(m)},ue.prototype.table=function(e){if(!U(this._allTables,e))throw new V.InvalidTable("Table ".concat(e," does not exist"));return this._allTables[e]},ue);function ue(e,t){var n=this;this._middlewares={},this.verno=0;var r=ue.dependencies;this._options=t=l({addons:ue.addons,autoOpen:!0,indexedDB:r.indexedDB,IDBKeyRange:r.IDBKeyRange,cache:"cloned"},t),this._deps={indexedDB:t.indexedDB,IDBKeyRange:t.IDBKeyRange},r=t.addons,this._dbSchema={},this._versions=[],this._storeNames=[],this._allTables={},this.idbdb=null,this._novip=this;var i,s,u,f,m,d={dbOpenError:null,isBeingOpened:!1,onReadyBeingFired:null,openComplete:!1,dbReadyResolve:te,dbReadyPromise:null,cancelOpen:te,openCanceller:null,autoSchema:!0,PR1398_maxLoop:3,autoOpen:t.autoOpen};d.dbReadyPromise=new L(function(h){d.dbReadyResolve=h}),d.openCanceller=new L(function(h,w){d.cancelOpen=w}),this._state=d,this.name=e,this.on=xt(this,"populate","blocked","versionchange","close",{ready:[xn,te]}),this.on.ready.subscribe=_(this.on.ready.subscribe,function(h){return function(w,p){ue.vip(function(){var y,D=n._state;D.openComplete?(D.dbOpenError||L.resolve().then(w),p&&h(w)):D.onReadyBeingFired?(D.onReadyBeingFired.push(w),p&&h(w)):(h(w),y=n,p||h(function g(){y.on.ready.unsubscribe(w),y.on.ready.unsubscribe(g)}))})}}),this.Collection=(i=this,wt(Fi.prototype,function(P,g){this.db=i;var p=wr,y=null;if(g)try{p=g()}catch(C){y=C}var D=P._ctx,g=D.table,P=g.hook.reading.fire;this._ctx={table:g,index:D.index,isPrimKey:!D.index||g.schema.primKey.keyPath&&D.index===g.schema.primKey.name,range:p,keysOnly:!1,dir:"next",unique:"",algorithm:null,filter:null,replayFilter:null,justLimit:!0,isMatch:null,offset:0,limit:1/0,error:y,or:D.or,valueMapper:P!==pt?P:null}})),this.Table=(s=this,wt(Cr.prototype,function(h,w,p){this.db=s,this._tx=p,this.name=h,this.schema=w,this.hook=s._allTables[h]?s._allTables[h].hook:xt(null,{creating:[Pi,te],reading:[Si,pt],updating:[Bi,te],deleting:[Ci,te]})})),this.Transaction=(u=this,wt(Li.prototype,function(h,w,p,y,D){var g=this;this.db=u,this.mode=h,this.storeNames=w,this.schema=p,this.chromeTransactionDurability=y,this.idbtrans=null,this.on=xt(this,"complete","error","abort"),this.parent=D||null,this.active=!0,this._reculock=0,this._blockedFuncs=[],this._resolve=null,this._reject=null,this._waitingFor=null,this._waitingQueue=null,this._spinCount=0,this._completion=new L(function(P,C){g._resolve=P,g._reject=C}),this._completion.then(function(){g.active=!1,g.on.complete.fire()},function(P){var C=g.active;return g.active=!1,g.on.error.fire(P),g.parent?g.parent._reject(P):C&&g.idbtrans&&g.idbtrans.abort(),se(P)})})),this.Version=(f=this,wt(qi.prototype,function(h){this.db=f,this._cfg={version:h,storesSource:null,dbschema:{},tables:{},contentUpgrade:null}})),this.WhereClause=(m=this,wt(Mr.prototype,function(h,w,p){if(this.db=m,this._ctx={table:h,index:w===":id"?null:w,or:p},this._cmp=this._ascending=ee,this._descending=function(y,D){return ee(D,y)},this._max=function(y,D){return 0<ee(y,D)?y:D},this._min=function(y,D){return ee(y,D)<0?y:D},this._IDBKeyRange=m._deps.IDBKeyRange,!this._IDBKeyRange)throw new V.MissingAPI})),this.on("versionchange",function(h){0<h.newVersion?console.warn("Another connection wants to upgrade database '".concat(n.name,"'. Closing db now to resume the upgrade.")):console.warn("Another connection wants to delete database '".concat(n.name,"'. Closing db now to resume the delete request.")),n.close({disableAutoOpen:!1})}),this.on("blocked",function(h){!h.newVersion||h.newVersion<h.oldVersion?console.warn("Dexie.delete('".concat(n.name,"') was blocked")):console.warn("Upgrade '".concat(n.name,"' blocked by other connection holding version ").concat(h.oldVersion/10))}),this._maxKey=Ct(t.IDBKeyRange),this._createTransaction=function(h,w,p,y){return new n.Transaction(h,w,p,n._options.chromeTransactionDurability,y)},this._fireOnBlocked=function(h){n.on("blocked").fire(h),ot.filter(function(w){return w.name===n.name&&w!==n&&!w._state.vcFired}).map(function(w){return w.on("versionchange").fire(h)})},this.use(Gi),this.use(Ji),this.use(Wi),this.use(Hi),this.use(Zi);var x=new Proxy(this,{get:function(h,w,p){if(w==="_vip")return!0;if(w==="table")return function(D){return sn(n.table(D),x)};var y=Reflect.get(h,w,p);return y instanceof Cr?sn(y,x):w==="tables"?y.map(function(D){return sn(D,x)}):w==="_createTransaction"?function(){return sn(y.apply(this,arguments),x)}:y}});this.vip=x,r.forEach(function(h){return h(n)})}var un,xe=typeof Symbol<"u"&&"observable"in Symbol?Symbol.observable:"@@observable",_i=(er.prototype.subscribe=function(e,t,n){return this._subscribe(e&&typeof e!="function"?e:{next:e,error:t,complete:n})},er.prototype[xe]=function(){return this},er);function er(e){this._subscribe=e}try{un={indexedDB:b.indexedDB||b.mozIndexedDB||b.webkitIndexedDB||b.msIndexedDB,IDBKeyRange:b.IDBKeyRange||b.webkitIDBKeyRange}}catch{un={indexedDB:null,IDBKeyRange:null}}function Qr(e){var t,n=!1,r=new _i(function(i){var s=yn(e),u,f=!1,m={},d={},x={get closed(){return f},unsubscribe:function(){f||(f=!0,u&&u.abort(),h&&Ne.storagemutated.unsubscribe(p))}};i.start&&i.start(x);var h=!1,w=function(){return Tn(y)},p=function(D){rn(m,D),Zn(d,m)&&w()},y=function(){var D,g,P;!f&&un.indexedDB&&(m={},D={},u&&u.abort(),u=new AbortController,P=function(C){var B=nt();try{s&&it();var T=Ie(e,C);return T=s?T.finally(Le):T}finally{B&&rt()}}(g={subscr:D,signal:u.signal,requery:w,querier:e,trans:null}),Promise.resolve(P).then(function(C){n=!0,t=C,f||g.signal.aborted||(m={},function(B){for(var T in B)if(U(B,T))return;return 1}(d=D)||h||(Ne(Pt,p),h=!0),Tn(function(){return!f&&i.next&&i.next(C)}))},function(C){n=!1,["DatabaseClosedError","AbortError"].includes(C==null?void 0:C.name)||f||Tn(function(){f||i.error&&i.error(C)})}))};return setTimeout(w,0),x});return r.hasValue=function(){return n},r.getValue=function(){return t},r}var Xe=Re;function tr(e){var t=je;try{je=!0,Ne.storagemutated.fire(e),Yn(e,!0)}finally{je=t}}A(Xe,l(l({},Lt),{delete:function(e){return new Xe(e,{addons:[]}).delete()},exists:function(e){return new Xe(e,{addons:[]}).open().then(function(t){return t.close(),!0}).catch("NoSuchDatabaseError",function(){return!1})},getDatabaseNames:function(e){try{return t=Xe.dependencies,n=t.indexedDB,t=t.IDBKeyRange,(Un(n)?Promise.resolve(n.databases()).then(function(r){return r.map(function(i){return i.name}).filter(function(i){return i!==Ht})}):Vn(n,t).toCollection().primaryKeys()).then(e)}catch{return se(new V.MissingAPI)}var t,n},defineClass:function(){return function(e){M(this,e)}},ignoreTransaction:function(e){return j.trans?Ze(j.transless,e):e()},vip:qn,async:function(e){return function(){try{var t=Xn(e.apply(this,arguments));return t&&typeof t.then=="function"?t:L.resolve(t)}catch(n){return se(n)}}},spawn:function(e,t,n){try{var r=Xn(e.apply(n,t||[]));return r&&typeof r.then=="function"?r:L.resolve(r)}catch(i){return se(i)}},currentTransaction:{get:function(){return j.trans||null}},waitFor:function(e,t){return t=L.resolve(typeof e=="function"?Xe.ignoreTransaction(e):e).timeout(t||6e4),j.trans?j.trans.waitFor(t):t},Promise:L,debug:{get:function(){return Pe},set:function(e){pr(e)}},derive:ie,extend:M,props:A,override:_,Events:xt,on:Ne,liveQuery:Qr,extendObservabilitySet:rn,getByKeyPath:ke,setByKeyPath:ye,delByKeyPath:function(e,t){typeof t=="string"?ye(e,t,void 0):"length"in t&&[].map.call(t,function(n){ye(e,n,void 0)})},shallowClone:lr,deepClone:Fe,getObjectDiff:Jn,cmp:ee,asap:ur,minKey:-1/0,addons:[],connections:ot,errnames:bn,dependencies:un,cache:Ye,semVer:"4.0.7",version:"4.0.7".split(".").map(function(e){return parseInt(e)}).reduce(function(e,t,n){return e+t/Math.pow(10,2*n)})})),Xe.maxKey=Ct(Xe.dependencies.IDBKeyRange),typeof dispatchEvent<"u"&&typeof addEventListener<"u"&&(Ne(Pt,function(e){je||(e=new CustomEvent(On,{detail:e}),je=!0,dispatchEvent(e),je=!1)}),addEventListener(On,function(e){e=e.detail,je||tr(e)}));var ut,je=!1,Hr=function(){};return typeof BroadcastChannel<"u"&&((Hr=function(){(ut=new BroadcastChannel(On)).onmessage=function(e){return e.data&&tr(e.data)}})(),typeof ut.unref=="function"&&ut.unref(),Ne(Pt,function(e){je||ut.postMessage(e)})),typeof addEventListener<"u"&&(addEventListener("pagehide",function(e){if(!Re.disableBfCache&&e.persisted){Pe&&console.debug("Dexie: handling persisted pagehide"),ut!=null&&ut.close();for(var t=0,n=ot;t<n.length;t++)n[t].close({disableAutoOpen:!1})}}),addEventListener("pageshow",function(e){!Re.disableBfCache&&e.persisted&&(Pe&&console.debug("Dexie: handling persisted pageshow"),Hr(),tr({all:new he(-1/0,[[]])}))})),L.rejectionMapper=function(e,t){return!e||e instanceof et||e instanceof TypeError||e instanceof SyntaxError||!e.name||!dr[e.name]?e:(t=new dr[e.name](t||e.message,e),"stack"in e&&N(t,"stack",{get:function(){return this.inner.stack}}),t)},pr(Pe),l(Re,Object.freeze({__proto__:null,Dexie:Re,liveQuery:Qr,Entity:Dr,cmp:ee,PropModSymbol:Me,PropModification:Dt,replacePrefix:function(e,t){return new Dt({replacePrefix:[e,t]})},add:function(e){return new Dt({add:e})},remove:function(e){return new Dt({remove:e})},default:Re,RangeSet:he,mergeRanges:Tt,rangesOverlap:nn}),{default:Re}),Re})})(gi);var oa=gi.exports;const ar=wo(oa),ni=Symbol.for("Dexie"),ri=globalThis[ni]||(globalThis[ni]=ar);if(ar.semVer!==ri.semVer)throw new Error(`Two different versions of Dexie loaded in the same app: ${ar.semVer} and ${ri.semVer}`);export{ca as M,fa as P,ha as n};
