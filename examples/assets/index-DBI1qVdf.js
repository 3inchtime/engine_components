var L=Object.defineProperty;var k=(p,g,t)=>g in p?L(p,g,{enumerable:!0,configurable:!0,writable:!0,value:t}):p[g]=t;var c=(p,g,t)=>(k(p,typeof g!="symbol"?g+"":g,t),t);import{a8 as G,k as S,a9 as T,aa as z,ab as N,N as P,C as W,a as j,c as B,e as C,ac as $}from"./web-ifc-api-BC8YMRiS.js";import{S as O,I as R,C as U}from"./ifc-metadata-reader-j9dl-lHS.js";import{I as V}from"./ifc-fragment-settings-CiVry-YT.js";import{F as J}from"./index-Cy4SZRUH.js";import{C as X,E as D,a as q}from"./index-B99Vyz6D.js";import{I as H}from"./index-BmLeol6g.js";const l=class l extends X{constructor(t){super(t);c(this,"onIfcStartedLoading",new D);c(this,"onSetup",new D);c(this,"onDisposed",new D);c(this,"settings",new V);c(this,"enabled",!0);c(this,"webIfc",new G);c(this,"_material",new S);c(this,"_spatialTree",new O);c(this,"_metaData",new R);c(this,"_fragmentInstances",new Map);c(this,"_civil",new U);c(this,"_visitedFragments",new Map);c(this,"_materialT",new S({transparent:!0,opacity:.5}));this.components.add(l.uuid,this),this.settings.excludedCategories.add(T)}dispose(){this.webIfc=null,this.onDisposed.trigger(l.uuid),this.onDisposed.reset()}async setup(t){this.settings={...this.settings,...t},this.settings.autoSetWasm&&await this.autoSetWasm(),this.onSetup.trigger()}async load(t,n=!0){const r=performance.now();this.onIfcStartedLoading.trigger(),await this.readIfcFile(t);const a=await this.getAllGeometries(),m=await this.components.get(H).export(this.webIfc,0);a.setLocalProperties(m),this.cleanUp();const e=this.components.get(J);e.groups.set(a.uuid,a);for(const i of a.items)e.list.set(i.id,i),i.mesh.uuid=i.id,i.group=a;return e.onFragmentsLoaded.trigger(a),n&&e.coordinate([a]),console.log(`Streaming the IFC took ${performance.now()-r} ms!`),a}async readIfcFile(t){const{path:n,absolute:r,logLevel:a}=this.settings.wasm;return this.webIfc.SetWasmPath(n,r),await this.webIfc.Init(),a&&this.webIfc.SetLogLevel(a),this.webIfc.OpenModel(t,this.settings.webIfc)}async getAllGeometries(){this._spatialTree.setUp(this.webIfc);const t=this.webIfc.GetIfcEntityList(0),n=new z,{FILE_NAME:r,FILE_DESCRIPTION:a}=$;n.ifcMetadata={name:this._metaData.get(this.webIfc,r),description:this._metaData.get(this.webIfc,a),schema:this.webIfc.GetModelSchema(0)||"IFC2X3",maxExpressID:this.webIfc.GetMaxExpressID(0)};const o=[];for(const e of t){if(!this.webIfc.IsIfcElement(e)&&e!==N||this.settings.excludedCategories.has(e))continue;const i=this.webIfc.GetLineIDsWithType(0,e),f=i.size();for(let h=0;h<f;h++){const s=i.get(h);o.push(s);const w=this._spatialTree.itemsByFloor[s]||0;n.data.set(s,[[],[w,e]])}}this._spatialTree.cleanUp(),this.webIfc.StreamMeshes(0,o,e=>{this.getMesh(e,n)});for(const e of this._visitedFragments){const{index:i,fragment:f}=e[1];n.keyFragments.set(i,f.id)}for(const e of n.items){const i=this._fragmentInstances.get(e.id);if(!i)throw new Error("Fragment not found!");const f=[];for(const[h,s]of i)f.push(s);e.add(f)}const m=this.webIfc.GetCoordinationMatrix(0);return n.coordinationMatrix.fromArray(m),n.civilData=this._civil.read(this.webIfc),n}cleanUp(){this.webIfc=null,this.webIfc=new G,this._visitedFragments.clear(),this._fragmentInstances.clear()}getMesh(t,n){const r=t.geometries.size(),a=t.expressID;for(let o=0;o<r;o++){const m=t.geometries.get(o),{x:e,y:i,z:f,w:h}=m.color,s=h!==1,{geometryExpressID:w}=m,u=`${w}-${s}`;if(!this._visitedFragments.has(u)){const d=this.getGeometry(this.webIfc,w),v=s?this._materialT:this._material,E=new P(d,v,1);n.add(E.mesh),n.items.push(E);const A=this._visitedFragments.size;this._visitedFragments.set(u,{index:A,fragment:E})}const _=new W().setRGB(e,i,f,"srgb"),b=new j;b.fromArray(m.flatTransformation);const y=this._visitedFragments.get(u);if(y===void 0)throw new Error("Error getting geometry data for streaming!");const F=n.data.get(a);if(!F)throw new Error("Data not found!");F[0].push(y.index);const{fragment:x}=y;this._fragmentInstances.has(x.id)||this._fragmentInstances.set(x.id,new Map);const I=this._fragmentInstances.get(x.id);if(!I)throw new Error("Instances not found!");if(I.has(a)){const d=I.get(a);if(!d)throw new Error("Instance not found!");d.transforms.push(b),d.colors&&d.colors.push(_)}else I.set(a,{id:a,transforms:[b],colors:[_]})}}getGeometry(t,n){const r=t.GetGeometry(0,n),a=t.GetIndexArray(r.GetIndexData(),r.GetIndexDataSize()),o=t.GetVertexArray(r.GetVertexData(),r.GetVertexDataSize()),m=new Float32Array(o.length/2),e=new Float32Array(o.length/2);for(let s=0;s<o.length;s+=6)m[s/2]=o[s],m[s/2+1]=o[s+1],m[s/2+2]=o[s+2],e[s/2]=o[s+3],e[s/2+1]=o[s+4],e[s/2+2]=o[s+5];const i=new B,f=new C(m,3),h=new C(e,3);return i.setAttribute("position",f),i.setAttribute("normal",h),i.setIndex(Array.from(a)),r.delete(),i}async autoSetWasm(){const t=await fetch(`https://unpkg.com/openbim-components@${q.release}/package.json`);if(!t.ok){console.warn("Couldn't get openbim-components package.json. Set wasm settings manually.");return}const n=await t.json();if(!("web-ifc"in n.peerDependencies))console.warn("Couldn't get web-ifc from peer dependencies in openbim-components. Set wasm settings manually.");else{const r=n.peerDependencies["web-ifc"];this.settings.wasm.path=`https://unpkg.com/web-ifc@${r}/`,this.settings.wasm.absolute=!0}}};c(l,"uuid","a659add7-1418-4771-a0d6-7d4d438e4624");let M=l;export{M as I};
