var P=Object.defineProperty;var C=(o,n,e)=>n in o?P(o,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[n]=e;var t=(o,n,e)=>(C(o,typeof n!="symbol"?n+"":n,e),e);import{V as u,h as y,D as L,A as D,B as x,b as G,M as T}from"./web-ifc-api-BFxa4VQ4.js";import{S as B}from"./stats.min-GTpOrGrX.js";import{U as c,i as K,K as N}from"./import-wrapper-prod-BtIvq9o4.js";import{P as V}from"./index-BneKMXsD.js";import{L as b,a as U,b as S}from"./Line2-COOhHMVl.js";import{D as z}from"./types-BHr6GdIp.js";import{M as F}from"./mark-Fi_tU5tP.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-Czb5ZY1a.js";class H{constructor(n,e){t(this,"enabled",!0);t(this,"visible",!0);t(this,"points",[]);t(this,"world");t(this,"onDisposed",new c);t(this,"_lineMaterial",new b({color:6629591,linewidth:2}));t(this,"_lineGeometry",new U);t(this,"_line",new S(this._lineGeometry,this._lineMaterial));t(this,"_labelMarker");t(this,"onAngleComputed",new c);t(this,"onPointAdded",new c);this.world=n;const s=document.createElement("div");s.className=z,this._labelMarker=new F(n,s),this.labelMarker.visible=!1,this.onPointAdded.add(()=>{this.points.length===1&&n.scene.three.add(this._line),this.points.length===3&&(this.labelMarker.visible=!0)}),this.onAngleComputed.add(r=>{this.labelMarker.three.element.textContent=`${r.toFixed(2)}Â°`,this.labelMarker.three.position.copy(this.points[1]??new u)}),e==null||e.forEach(r=>this.setPoint(r))}set lineMaterial(n){this._lineMaterial.dispose(),this._lineMaterial=n,this._line.material=n,this._lineMaterial.resolution.set(window.innerWidth,window.innerHeight)}get lineMaterial(){return this._lineMaterial}set labelMarker(n){this._labelMarker.dispose(),this._labelMarker=n}get labelMarker(){return this._labelMarker}get angle(){return{points:this.points,angle:this.computeAngle()}}setPoint(n,e){let s;if(e?s=e:s=this.points.length===0?0:this.points.length,![0,1,2].includes(s))return;this.points[s]=n,this.onPointAdded.trigger(n);const r=this.points.map(l=>[l.x,l.y,l.z]);this._lineGeometry.setPositions(r.flat())}toggleLabel(){this.labelMarker.toggleVisibility()}computeAngle(){const n=this.points[0],e=this.points[1],s=this.points[2];if(!(n&&e&&s))return 0;const r=new u().subVectors(e,n),l=new u().subVectors(e,s),f=y.radToDeg(r.angleTo(l));return this.onAngleComputed.trigger(f),f}dispose(){this.points=[],this.labelMarker.dispose(),this.onAngleComputed.reset(),this.onPointAdded.reset(),this.labelMarker.dispose(),this._line.removeFromParent(),this._lineMaterial.dispose(),this._lineGeometry.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}}const a=class a extends K{constructor(e){super(e);t(this,"onDisposed",new c);t(this,"world");t(this,"list",[]);t(this,"_lineMaterial");t(this,"_enabled",!1);t(this,"_vertexPicker");t(this,"_currentAngleElement",null);t(this,"_clickCount",0);t(this,"create",()=>{if(!this.enabled)return;if(!this.world){console.log("No world selected for angle measurement!");return}const e=this._vertexPicker.get(this.world);if(e){if(!this._currentAngleElement){const s=new H(this.world);s.lineMaterial=this.lineMaterial,this._currentAngleElement=s}this._currentAngleElement.setPoint(e,this._clickCount),this._currentAngleElement.setPoint(e,this._clickCount+1),this._currentAngleElement.setPoint(e,this._clickCount+2),this._currentAngleElement.computeAngle(),this._clickCount++,this._clickCount===3&&this.endCreation()}});t(this,"onMouseMove",()=>{if(!this.world){console.log("No world selected for angle measurement!");return}const e=this._vertexPicker.get(this.world);e&&this._currentAngleElement&&(this._currentAngleElement.setPoint(e,this._clickCount),this._currentAngleElement.computeAngle())});t(this,"onKeyDown",e=>{this.enabled&&(e.key==="z"&&e.ctrlKey&&this._currentAngleElement,e.key==="Escape"&&(this._clickCount===0&&!this._currentAngleElement?this.enabled=!1:this.cancelCreation()))});this.components.add(a.uuid,this),this._vertexPicker=new N(e),this._lineMaterial=new b({color:6629591,linewidth:2})}set lineMaterial(e){this._lineMaterial.dispose(),this._lineMaterial=e,this._lineMaterial.resolution.set(window.innerWidth,window.innerHeight)}get lineMaterial(){return this._lineMaterial}set enabled(e){this._enabled=e,this.setupEvents(e),this._vertexPicker.enabled=e,e||this.cancelCreation()}get enabled(){return this._enabled}set workingPlane(e){this._vertexPicker.workingPlane=e}get workingPlane(){return this._vertexPicker.workingPlane}dispose(){this.setupEvents(!1),this._lineMaterial.dispose(),this._vertexPicker.dispose();for(const e of this.list)e.dispose();this._currentAngleElement&&this._currentAngleElement.dispose(),this.components=null,this.onDisposed.trigger(a.uuid),this.onDisposed.reset()}delete(){}deleteAll(){for(const e of this.list)e.dispose();this.list=[]}endCreation(){this._currentAngleElement&&(this.list.push(this._currentAngleElement),this._currentAngleElement.computeAngle(),this._currentAngleElement=null),this._clickCount=0}cancelCreation(){this._currentAngleElement&&(this._currentAngleElement.dispose(),this._currentAngleElement=null),this._clickCount=0}setupEvents(e){if(!this.world)throw new Error("No world selected for angle measurement!");if(!this.world.renderer)throw new Error("The given world doesn't have a renderer!");const r=this.world.renderer.three.domElement.parentElement;e?(r.addEventListener("click",this.create),r.addEventListener("mousemove",this.onMouseMove),window.addEventListener("keydown",this.onKeyDown)):(r.removeEventListener("click",this.create),r.removeEventListener("mousemove",this.onMouseMove),window.removeEventListener("keydown",this.onKeyDown))}};t(a,"uuid","622fb2c9-528c-4b0a-8a0e-6a1375f0a3aa");let m=a;const M=document.getElementById("container"),i=new(void 0),k=new(void 0)(i);k.setup();i.scene=k;const g=new V(i,M);i.renderer=g;const E=new(void 0)(i);i.camera=E;i.raycaster=new(void 0)(i);i.init();const p=i.scene.get();E.controls.setLookAt(10,10,10,0,0,0);const w=new L;w.position.set(5,10,3);w.intensity=.5;p.add(w);const A=new D;A.intensity=.5;p.add(A);new(void 0)(i);const W=new x(3,3,3),I=new G({color:"#6528D7"}),_=new T(W,I);_.position.set(0,1.5,0);p.add(_);i.meshes.add(_);const h=new m(i);h.enabled=!0;M.ondblclick=()=>h.create();window.onkeydown=o=>{(o.code==="Delete"||o.code==="Backspace")&&h.delete()};const v=new(void 0)(i,{name:"Main Toolbar",position:"bottom"});v.addChild(h.uiElement.get("main"));i.ui.addToolbar(v);const d=new B;d.showPanel(2);document.body.append(d.dom);d.dom.style.left="0px";g.onBeforeUpdate.add(()=>d.begin());g.onAfterUpdate.add(()=>d.end());
