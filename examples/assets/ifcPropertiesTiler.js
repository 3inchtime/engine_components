var E=Object.defineProperty;var G=(t,o,e)=>o in t?E(t,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[o]=e;var i=(t,o,e)=>(G(t,typeof o!="symbol"?o+"":o,e),e);import{al as B,au as R,av as v,aw as O,ax as T,ao as D}from"./web-ifc-api-eJ7dR4yy.js";import{S as W}from"./stats.min-GTpOrGrX.js";import{k as $,C as j,b as z}from"./index-CA2cPfXk.js";import{C as M,E as N,a as J,W as q,S as Y,b as H,c as K}from"./index-BRIP3dnE.js";import{G as Q}from"./index-aZ7tPJp1.js";import{I as U}from"./index-DUv5fNdI.js";import{A as F}from"./async-event-D8tC9awa.js";import{P as V}from"./streaming-settings-Cxyv9_NZ.js";import{G as X}from"./ifc-geometry-types-C3SKrzrZ.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./ifc-fragment-settings-CERESExK.js";class k extends M{constructor(){super(...arguments);i(this,"onPropertiesStreamed",new F);i(this,"onProgress",new F);i(this,"onIndicesStreamed",new F);i(this,"onDisposed",new N);i(this,"enabled",!0);i(this,"settings",new V);i(this,"webIfc",new B)}async dispose(){this.onIndicesStreamed.reset(),this.onPropertiesStreamed.reset(),this.webIfc=null,this.onDisposed.reset()}async streamFromBuffer(e){const s=performance.now();await this.readIfcFile(e),await this.streamAllProperties(),this.cleanUp(),console.log(`Streaming the IFC took ${performance.now()-s} ms!`)}async streamFromCallBack(e){const s=performance.now();await this.streamIfcFile(e),await this.streamAllProperties(),this.cleanUp(),console.log(`Streaming the IFC took ${performance.now()-s} ms!`)}async readIfcFile(e){const{path:s,absolute:r,logLevel:n}=this.settings.wasm;this.webIfc.SetWasmPath(s,r),await this.webIfc.Init(),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModel(e,this.settings.webIfc)}async streamIfcFile(e){const{path:s,absolute:r,logLevel:n}=this.settings.wasm;this.webIfc.SetWasmPath(s,r),await this.webIfc.Init(),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModelFromCallback(e,this.settings.webIfc)}async streamAllProperties(){const{propertiesSize:e}=this.settings,s=new Set(this.webIfc.GetIfcEntityList(0)),r=new Set([R,v,O,T,D]);for(const c of r)s.add(c);let n=.01,C=0;for(const c of s){if(C++,X.has(c))continue;const L=r.has(c),u=this.webIfc.GetLineIDsWithType(0,c),y=u.size();let S=0;for(let p=0;p<y-e;p+=e){const m={};for(let d=0;d<e;d++){S++;const f=u.get(p+d);try{const P=this.webIfc.GetLine(0,f,L);m[P.expressID]=P}catch{console.log(`Could not get property: ${f}`)}}await this.onPropertiesStreamed.trigger({type:c,data:m})}if(S!==y){const p={};for(let m=S;m<y;m++){const d=u.get(m);try{const f=this.webIfc.GetLine(0,d,L);p[f.expressID]=f}catch{console.log(`Could not get property: ${d}`)}}await this.onPropertiesStreamed.trigger({type:c,data:p})}const x=C/s.size;x>n&&(n+=.01,n=Math.max(n,x),await this.onProgress.trigger(Math.round(n*100)/100))}const A=await this.components.get(U).processFromWebIfc(this.webIfc,0);await this.onIndicesStreamed.trigger(A)}cleanUp(){this.webIfc=null,this.webIfc=new B}}i(k,"uuid","88d2c89c-ce32-47d7-8cb6-d51e4b311a0b");const Z=document.getElementById("container"),a=new J,_=a.get(q),l=_.create();l.scene=new Y(a);l.renderer=new H(a,Z);l.camera=new K(a);a.init();l.camera.controls.setLookAt(12,6,8,0,0,-10);const ee=a.get(Q);ee.create(l);function te(t,o){const e=new File([o],t),s=document.createElement("a"),r=URL.createObjectURL(e);s.href=r,s.download=e.name,s.click(),URL.revokeObjectURL(r)}async function se(t){for(const{name:o,bits:e}of t)te(o,e),await new Promise(s=>{setTimeout(s,100)})}const h=new k(a);h.settings.wasm={path:"https://unpkg.com/web-ifc@0.0.53/",absolute:!0};const w={types:{},ids:{},indexesFile:"small.ifc-processed-properties-indexes"};let b=0;const g=[];h.onPropertiesStreamed.add(async t=>{w.types[t.type]||(w.types[t.type]=[]),w.types[t.type].push(b);for(const s in t.data)w.ids[s]=b;const o=`small.ifc-processed-properties-${b}`,e=new Blob([JSON.stringify(t.data)]);g.push({bits:e,name:o}),b++});h.onProgress.add(async t=>{console.log(t)});h.onIndicesStreamed.add(async t=>{g.push({name:"small.ifc-processed-properties.json",bits:new Blob([JSON.stringify(w)])});const e=a.get(U).serializeRelations(t);g.push({name:"small.ifc-processed-properties-indexes",bits:new Blob([e])}),await se(g)});async function oe(){const o=await(await fetch("../../../../../resources/small.ifc")).arrayBuffer(),e=new Uint8Array(o);await h.streamFromBuffer(e)}$.registerComponents();const ne=j.create(()=>z`
    <bim-panel active label="IFC Properties Tiler Tutorial" 
      style="position: fixed; top: 5px; right: 5px">
      
      <bim-panel-section style="padding-top: 12px;">
      
        <bim-button label="Load IFC"
          @click="${()=>{oe()}}">
        </bim-button>  
      
      </bim-panel-section>
      
    </bim-panel>
  `);document.body.append(ne);const I=new W;I.showPanel(2);document.body.append(I.dom);I.dom.style.left="0px";l.renderer.onBeforeUpdate.add(()=>I.begin());l.renderer.onAfterUpdate.add(()=>I.end());
