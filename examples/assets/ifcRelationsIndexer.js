var J=Object.defineProperty;var H=(u,n,e)=>n in u?J(u,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):u[n]=e;var m=(u,n,e)=>(H(u,typeof n!="symbol"?n+"":n,e),e);import{az as q,a as T,a7 as X,ab as U,a0 as Z,an as K,L as Q,ao as Y,e as M,ap as ee,aq as te,a8 as N,k as P,a9 as se,aa as ne,N as oe,C as ie,c as ae,ac as re}from"./web-ifc-api-BffFJDIm.js";import{S as ce}from"./stats.min-GTpOrGrX.js";import{p as le,a as j,m as k}from"./index-DyM33b1I.js";import{C as me,E as R,a as B,W as de,S as fe,b as ue,c as ge,G as pe}from"./index-B9uBZcMi.js";import{F as he,I as Ie,a as we}from"./index-DK_gFGlj.js";import{I as ye}from"./index-C7Ki_D2r.js";import"./_commonjsHelpers-Cpj98o6Y.js";class be{constructor(){m(this,"factor",1);m(this,"complement",1)}apply(n){const t=this.getScaleMatrix().multiply(n);n.copy(t)}setUp(n){var s;this.factor=1;const e=this.getLengthUnits(n);if(!e)return;const t=e==null,a=e.Name===void 0||e.Name===null;t||a||(e.Name.value==="FOOT"?this.factor=.3048:((s=e.Prefix)==null?void 0:s.value)==="MILLI"&&(this.complement=.001))}getLengthUnits(n){try{const t=n.GetLineIDsWithType(0,q).get(0),a=n.GetLine(0,t);for(const s of a.Units){if(!s||s.value===null||s.value===void 0)continue;const l=n.GetLine(0,s.value);if(l.UnitType&&l.UnitType.value==="LENGTHUNIT")return l}return null}catch{return console.log("Could not get units"),null}}getScaleMatrix(){const n=this.factor;return new T().fromArray([n,0,0,0,0,n,0,0,0,0,n,0,0,0,0,1])}}class ve{constructor(){m(this,"itemsByFloor",{});m(this,"_units",new be)}setUp(n){this._units.setUp(n),this.cleanUp();try{const e=n.GetLineIDsWithType(0,X),t=new Set,a=n.GetLineIDsWithType(0,U);for(let i=0;i<a.size();i++)t.add(a.get(i));const s=n.GetLineIDsWithType(0,Z),l=s.size();for(let i=0;i<l;i++){const f=s.get(i),c=n.GetLine(0,f);if(!c||!c.RelatingObject||!c.RelatedObjects)continue;const o=c.RelatingObject.value,p=c.RelatedObjects;for(const g of p){const h=g.value;t.has(h)&&(this.itemsByFloor[h]=o)}}const d={},r=e.size();for(let i=0;i<r;i++){const f=e.get(i),c=n.GetLine(0,f);if(!c||!c.RelatingStructure||!c.RelatedElements)continue;const o=c.RelatingStructure.value,p=c.RelatedElements;if(t.has(o))for(const g of p){d[o]||(d[o]=[]);const h=g.value;d[o].push(h)}else for(const g of p){const h=g.value;this.itemsByFloor[h]=o}}for(const i in d){const f=this.itemsByFloor[i];if(f!==void 0){const c=d[i];for(const o of c)this.itemsByFloor[o]=f}}for(let i=0;i<l;i++){const f=s.get(i),c=n.GetLine(0,f);if(!c||!c.RelatingObject||!c.RelatedObjects)continue;const o=c.RelatingObject.value,p=c.RelatedObjects;for(const g of p){const h=g.value,v=this.itemsByFloor[o];v!==void 0&&(this.itemsByFloor[h]=v)}}}catch{console.log("Could not get floors.")}}cleanUp(){this.itemsByFloor={}}}class Se{constructor(){m(this,"includeProperties",!0);m(this,"optionalCategories",[U]);m(this,"coordinate",!0);m(this,"wasm",{path:"",absolute:!1,logLevel:K.LOG_LEVEL_OFF});m(this,"excludedCategories",new Set);m(this,"saveLocations",!1);m(this,"webIfc",{COORDINATE_TO_ORIGIN:!0,OPTIMIZE_PROFILES:!0});m(this,"autoSetWasm",!0);m(this,"customLocateFileHandler",null)}}class Le{constructor(){m(this,"defLineMat",new Q({color:16777215}))}read(n){const e=n.GetAllAlignments(0),t=n.GetAllCrossSections2D(0),a=n.GetAllCrossSections3D(0),s={IfcAlignment:e,IfcCrossSection2D:t,IfcCrossSection3D:a};return this.get(s)}get(n){if(n.IfcAlignment){const e=new Map;for(const t of n.IfcAlignment){const a=new Y;a.absolute=this.getCurves(t.curve3D,a),a.horizontal=this.getCurves(t.horizontal,a),a.vertical=this.getCurves(t.vertical,a),e.set(e.size,a)}return{alignments:e,coordinationMatrix:new T}}}getCurves(n,e){const t=[];let a=0;for(const s of n){const l={};if(s.data)for(const o of s.data){const[p,g]=o.split(": "),h=parseFloat(g);l[p]=h||g}const{points:d}=s,r=new Float32Array(d.length*3);for(let o=0;o<d.length;o++){const{x:p,y:g,z:h}=d[o];r[o*3]=p,r[o*3+1]=g,r[o*3+2]=h||0}const i=new M(r,3),f=new ee;f.setAttribute("position",i);const c=new te(a,l,e,f,this.defLineMat);t.push(c.curve),a++}return t}}class De{get(n,e){let t="";const a=n.GetHeaderLine(0,e)||"";if(!a)return t;for(const s of a.arguments)if(s!=null)if(Array.isArray(s))for(const l of s)t+=`${l.value}|`;else t+=`${s.value}|`;return t}}const D=class D extends me{constructor(e){super(e);m(this,"onIfcStartedLoading",new R);m(this,"onSetup",new R);m(this,"onDisposed",new R);m(this,"settings",new Se);m(this,"enabled",!0);m(this,"webIfc",new N);m(this,"_material",new P);m(this,"_spatialTree",new ve);m(this,"_metaData",new De);m(this,"_fragmentInstances",new Map);m(this,"_civil",new Le);m(this,"_visitedFragments",new Map);m(this,"_materialT",new P({transparent:!0,opacity:.5}));this.components.add(D.uuid,this),this.settings.excludedCategories.add(se)}dispose(){this.webIfc=null,this.onDisposed.trigger(D.uuid),this.onDisposed.reset()}async setup(e){this.settings={...this.settings,...e},this.settings.autoSetWasm&&await this.autoSetWasm(),this.onSetup.trigger()}async load(e,t=!0){const a=performance.now();this.onIfcStartedLoading.trigger(),await this.readIfcFile(e);const s=await this.getAllGeometries(),d=await this.components.get(ye).export(this.webIfc,0);s.setLocalProperties(d),this.cleanUp();const r=this.components.get(he);r.groups.set(s.uuid,s);for(const i of s.items)r.list.set(i.id,i),i.mesh.uuid=i.id,i.group=s;return r.onFragmentsLoaded.trigger(s),t&&r.coordinate([s]),console.log(`Streaming the IFC took ${performance.now()-a} ms!`),s}async readIfcFile(e){const{path:t,absolute:a,logLevel:s}=this.settings.wasm;return this.webIfc.SetWasmPath(t,a),await this.webIfc.Init(),s&&this.webIfc.SetLogLevel(s),this.webIfc.OpenModel(e,this.settings.webIfc)}async getAllGeometries(){this._spatialTree.setUp(this.webIfc);const e=this.webIfc.GetIfcEntityList(0),t=new ne,{FILE_NAME:a,FILE_DESCRIPTION:s}=re;t.ifcMetadata={name:this._metaData.get(this.webIfc,a),description:this._metaData.get(this.webIfc,s),schema:this.webIfc.GetModelSchema(0)||"IFC2X3",maxExpressID:this.webIfc.GetMaxExpressID(0)};const l=[];for(const r of e){if(!this.webIfc.IsIfcElement(r)&&r!==U||this.settings.excludedCategories.has(r))continue;const i=this.webIfc.GetLineIDsWithType(0,r),f=i.size();for(let c=0;c<f;c++){const o=i.get(c);l.push(o);const p=this._spatialTree.itemsByFloor[o]||0;t.data.set(o,[[],[p,r]])}}this._spatialTree.cleanUp(),this.webIfc.StreamMeshes(0,l,r=>{this.getMesh(r,t)});for(const r of this._visitedFragments){const{index:i,fragment:f}=r[1];t.keyFragments.set(i,f.id)}for(const r of t.items){const i=this._fragmentInstances.get(r.id);if(!i)throw new Error("Fragment not found!");const f=[];for(const[c,o]of i)f.push(o);r.add(f)}const d=this.webIfc.GetCoordinationMatrix(0);return t.coordinationMatrix.fromArray(d),t.civilData=this._civil.read(this.webIfc),t}cleanUp(){this.webIfc=null,this.webIfc=new N,this._visitedFragments.clear(),this._fragmentInstances.clear()}getMesh(e,t){const a=e.geometries.size(),s=e.expressID;for(let l=0;l<a;l++){const d=e.geometries.get(l),{x:r,y:i,z:f,w:c}=d.color,o=c!==1,{geometryExpressID:p}=d,g=`${p}-${o}`;if(!this._visitedFragments.has(g)){const S=this.getGeometry(this.webIfc,p),$=o?this._materialT:this._material,G=new oe(S,$,1);t.add(G.mesh),t.items.push(G);const V=this._visitedFragments.size;this._visitedFragments.set(g,{index:V,fragment:G})}const h=new ie().setRGB(r,i,f,"srgb"),v=new T;v.fromArray(d.flatTransformation);const A=this._visitedFragments.get(g);if(A===void 0)throw new Error("Error getting geometry data for streaming!");const O=t.data.get(s);if(!O)throw new Error("Data not found!");O[0].push(A.index);const{fragment:E}=A;this._fragmentInstances.has(E.id)||this._fragmentInstances.set(E.id,new Map);const F=this._fragmentInstances.get(E.id);if(!F)throw new Error("Instances not found!");if(F.has(s)){const S=F.get(s);if(!S)throw new Error("Instance not found!");S.transforms.push(v),S.colors&&S.colors.push(h)}else F.set(s,{id:s,transforms:[v],colors:[h]})}}getGeometry(e,t){const a=e.GetGeometry(0,t),s=e.GetIndexArray(a.GetIndexData(),a.GetIndexDataSize()),l=e.GetVertexArray(a.GetVertexData(),a.GetVertexDataSize()),d=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let o=0;o<l.length;o+=6)d[o/2]=l[o],d[o/2+1]=l[o+1],d[o/2+2]=l[o+2],r[o/2]=l[o+3],r[o/2+1]=l[o+4],r[o/2+2]=l[o+5];const i=new ae,f=new M(d,3),c=new M(r,3);return i.setAttribute("position",f),i.setAttribute("normal",c),i.setIndex(Array.from(s)),a.delete(),i}async autoSetWasm(){const e=await fetch(`https://unpkg.com/openbim-components@${B.release}/package.json`);if(!e.ok){console.warn("Couldn't get openbim-components package.json. Set wasm settings manually.");return}const t=await e.json();if(!("web-ifc"in t.peerDependencies))console.warn("Couldn't get web-ifc from peer dependencies in openbim-components. Set wasm settings manually.");else{const a=t.peerDependencies["web-ifc"];this.settings.wasm.path=`https://unpkg.com/web-ifc@${a}/`,this.settings.wasm.absolute=!0}}};m(D,"uuid","a659add7-1418-4771-a0d6-7d4d438e4624");let _=D;const Fe=document.getElementById("container"),y=new B,xe=y.get(de),w=xe.create();w.scene=new fe(y);w.renderer=new ue(y,Fe);w.camera=new ge(y);y.init();w.camera.controls.setLookAt(12,6,8,0,0,-10);w.scene.setup();const Ae=y.get(pe);Ae.create(w);w.scene.three.background=null;const W=y.get(_);await W.setup();const Ee=await fetch("/resources/small.ifc"),Ge=await Ee.arrayBuffer(),Re=new Uint8Array(Ge),I=await W.load(Re);w.scene.three.add(I);const b=y.get(Ie);await b.process(I);const z=b.getEntityRelations(I,6518,"IsDefinedBy");if(z)for(const u of z){const n=await I.getProperties(u);console.log(n),await we.getPsetProps(I,u,async e=>{const t=await I.getProperties(e);console.log(t)})}const Ce=(u,n)=>{const e=new File([u],n),t=document.createElement("a");t.href=URL.createObjectURL(e),t.download=e.name,t.click(),URL.revokeObjectURL(t.href)},Me=b.serializeModelRelations(I);console.log(Me);const _e=b.serializeAllRelations();delete b.relationMaps[I.uuid];const Te=await fetch("/resources/small-relations.json"),Ue=b.getRelationsMapFromJSON(await Te.text());b.setRelationMap(I,Ue);const C=b.getEntityRelations(I,6518,"ContainedInStructure");if(C&&C[0]){const u=await I.getProperties(C[0]);console.log(u)}const L=new ce;L.showPanel(2);document.body.append(L.dom);L.dom.style.left="0px";L.dom.style.zIndex="unset";w.renderer.onBeforeUpdate.add(()=>L.begin());w.renderer.onAfterUpdate.add(()=>L.end());le.init();const x=j.create(()=>k`
  <bim-panel active label="IFC Relations Indexer Tutorial" class="options-menu">
  <bim-panel-section collapsed label="Controls">
      <bim-panel-section style="padding-top: 10px;">
      
        <bim-button 
          label="Download relations" 
          @click="${async()=>{Ce(_e,"relations-index-all.json")}}">  
        </bim-button>        

      </bim-panel-section>
    </bim-panel>
    `);document.body.append(x);const Oe=j.create(()=>k`
      <bim-button class="phone-menu-toggler" icon="solar:settings-bold"
        @click="${()=>{x.classList.contains("options-menu-visible")?x.classList.remove("options-menu-visible"):x.classList.add("options-menu-visible")}}">
      </bim-button>
    `);document.body.append(Oe);
