var v=Object.defineProperty;var K=(c,a,t)=>a in c?v(c,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[a]=t;var o=(c,a,t)=>(K(c,typeof a!="symbol"?a+"":a,t),t);import{V as m,c as L,e as _,M as w}from"./web-ifc-api-CmZKgq4q.js";import{J as C}from"./import-wrapper-prod-Cl9qVCJR.js";import{M as g}from"./mark-B0joXqB1.js";const u=class u extends C{constructor(t){super(t);o(this,"enabled",!0);o(this,"threshold",50);o(this,"autoCluster",!0);o(this,"list",new Map);o(this,"clusterLabels",new Set);o(this,"currentKeys",new Set);o(this,"_color","white");o(this,"_markerKey",0);o(this,"_clusterKey",0);o(this,"isNavigating",!1);o(this,"_setupWorlds",new Set);t.add(u.uuid,this)}get color(){return this._color}set color(t){this._color=t;for(const[e,s]of this.list)s.label.three.element.style.color=t}create(t,e,s,r=!1){this.setupEvents(t,!0);const i=document.createElement("span");i.innerHTML=e,i.style.color=this._color;const n=new g(t,i);n.three.position.copy(s);const l=this._markerKey.toString();return this.list.set(l,{key:l,label:n,merged:!1,static:r}),this._markerKey++,l}delete(t){const e=this.list.get(t);e&&e.label.dispose(),this.list.delete(t)}clear(t){const e=[...this.list.keys()];for(const s of e){const r=this.list.get(s);t&&r.type!==t||(r.label.dispose(),this.list.delete(s))}this.list.clear(),this._markerKey=0}dispose(){for(const[t,e]of this.list)e.label.dispose();this.list.clear(),this._markerKey=0;for(const t of this.clusterLabels)t.label.dispose();this.clusterLabels.clear(),this._clusterKey=0,this.currentKeys.clear()}setupEvents(t,e){e&&this._setupWorlds.has(t.uuid)||t.camera.hasCameraControls()&&(e?(t.camera.controls.addEventListener("sleep",()=>{this.manageCluster()}),t.camera.controls.addEventListener("rest",()=>{this.isNavigating&&(this.manageCluster(),this.isNavigating=!1)})):(t.camera.controls.removeEventListener("sleep",()=>{this.manageCluster()}),t.camera.controls.removeEventListener("rest",()=>{this.isNavigating&&(this.manageCluster(),this.isNavigating=!1)})))}resetMarkers(){for(const[t,e]of this.list)e.merged=!1;for(const t of this.clusterLabels)t.label.dispose();this.clusterLabels.clear(),this._clusterKey=0}removeMergeMarkers(){for(const[t,e]of this.list)e.merged?e.label.dispose():e.label.world.scene.three.add(e.label.three);for(const t of this.clusterLabels)if(t.markerKeys.length===1){const e=this.list.get(t.markerKeys[0]);e&&(e.label.world.scene.three.add(e.label.three),e.merged=!1),t.label.dispose(),this.clusterLabels.delete(t)}}manageCluster(){if(this.autoCluster){this.resetMarkers();for(const[t,e]of this.list)if(!e.merged&&!e.static){this.currentKeys.clear();for(const[s,r]of this.list)r.static||e.key!==r.key&&!r.merged&&this.distance(e.label,r.label)<this.threshold&&(this.currentKeys.add(r.key),r.merged=!0);if(this.currentKeys.size>0){this.currentKeys.add(e.key),e.merged=!0;const s=Array.from(this.currentKeys),r=this.getAveragePositionFromLabels(s),i=new g(e.label.world,this.createClusterElement(this._clusterKey.toString())),{element:n}=i.three;n.textContent=s.length.toString(),i.three.position.copy(r),this.clusterLabels.add({key:this._clusterKey.toString(),markerKeys:s,label:i}),this._clusterKey++}}this.removeMergeMarkers()}}getAveragePositionFromLabels(t){const e=t.map(s=>{const r=this.list.get(s);return r?r.label.three.position:new m});return e.reduce((s,r)=>s.add(r),new m).divideScalar(e.length)}createClusterElement(t){const e=document.createElement("div");return e.textContent=t,e.style.color="#000000",e.style.background="#FFFFFF",e.style.fontSize="1.2rem",e.style.fontWeight="500",e.style.pointerEvents="auto",e.style.borderRadius="50%",e.style.padding="5px 11px",e.style.textAlign="center",e.style.cursor="pointer",e.addEventListener("pointerdown",()=>{this.navigateToCluster(t)}),e.addEventListener("pointerover",()=>{e.style.background="#BCF124"}),e.addEventListener("pointerout",()=>{e.style.background="#FFFFFF"}),e}getScreenPosition(t){const e=new m;if(!t.world.renderer)throw new Error("Renderer not found!");const s=t.three.position.clone();s.project(t.world.camera.three);const r=t.world.renderer.getSize();return e.x=s.x*r.x/2+r.x/2,e.y=-(s.y*r.y/2)+r.y/2,e}distance(t,e){const s=this.getScreenPosition(t),r=this.getScreenPosition(e),i=s.x-r.x,n=s.y-r.y,l=Math.sqrt(i*i+n*n)*.5;return l===0?this.threshold+1:l}navigateToCluster(t){const e=[],s=Array.from(this.clusterLabels).find(d=>d.key===t);if(!s)return;const r=s.label.world.camera;if(!r.hasCameraControls()){console.warn("Zoom to clusters only supported with Camera Controls!");return}for(const d of s.markerKeys){const f=this.list.get(d);if(f){const{x:p,y:b,z:k}=f.label.three.position;e.push(p,b,k)}}s.label.dispose(),this.clusterLabels.delete(s);const i=new L,n=new Float32Array(e),l=new _(n,3);i.setAttribute("position",l);const h=new w(i);h.geometry.computeBoundingSphere(),h.geometry.boundingSphere&&r.controls.fitToSphere(h,!0),this.isNavigating=!0,i.dispose(),h.clear(),e.length=0}};o(u,"uuid","4079eb91-79b0-4ede-bcf2-15b837129236");let y=u;export{y as M};
