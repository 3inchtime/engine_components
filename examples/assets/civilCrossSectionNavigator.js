import{C as b,L as v}from"./web-ifc-api-D3oDn2HF.js";import{a as S,W as M,S as D,O as E,G as B,F as k,e as x}from"./index-DPB0U-mi.js";import{p as I}from"./index-K5IA6oiZ.js";import{s as L}from"./index-B7WrRpEN.js";import{S as N}from"./stats.min-DDrWCSVO.js";import{R as P,c as W,b as A,e as F,C as R}from"./index-B7gYOE6O.js";I.init();L.init();const y=document.getElementById("container"),e=new S,U=e.get(M),t=U.create();t.scene=new D(e);t.renderer=new P(e,y);t.camera=new E(e);e.init();t.scene.setup();t.camera.controls.setLookAt(5,5,5,0,0,0);y.appendChild(t.renderer.three2D.domElement);const j=e.get(B);j.create(t);t.scene.three.background=null;const C=e.get(k),G=await fetch("https://thatopen.github.io/engine_components/resources/road.frag"),H=await G.arrayBuffer(),O=new Uint8Array(H),d=C.load(O);t.scene.three.add(d);const _=await fetch("https://thatopen.github.io/engine_components/resources/road.json");d.setLocalProperties(await _.json());const p=document.getElementById("scene-2d-left");p.components=e;if(!p.world)throw new Error("World not found!");const c=e.get(W);c.world=p.world;await c.draw(d);const l=e.get(A);l.world=t;l.draw(d);const g=document.getElementById("scene-2d-right");g.components=e;if(!g.world)throw new Error("World not found!");const f=e.get(F);f.world=g.world;f.world3D=t;c.onMarkerChange.add(({alignment:o,percentage:n,type:r,curve:s})=>{if(l.setMarker(o,n,r),r==="select"){const i=s.alignment.absolute[s.index].mesh,m=o.getPointAt(n,"absolute");f.set(i,m)}});c.onHighlight.add(({mesh:o})=>{l.highlighter.select(o);const n=o.curve.index,r=o.curve.alignment.absolute[n];r.mesh.geometry.computeBoundingSphere();const s=r.mesh.geometry.boundingSphere;s&&t.camera.controls.fitToSphere(s,!0)});c.onMarkerHidden.add(({type:o})=>{l.hideMarker(o)});const h=e.get(x);h.byEntity(d);const z=h.list,w=e.get(R),u=w.styles.list;for(const o in z.entities){const n=h.find({entities:[o]}),r=new b(Math.random(),Math.random(),Math.random()),s=new v({color:r});w.styles.create(o,new Set,g.world,s);for(const i in n){const m=C.list.get(i);m&&(u[o].fragments[i]=new Set(n[i]),u[o].meshes.add(m.mesh))}}w.update(!0);const a=new N;a.showPanel(2);document.body.append(a.dom);a.dom.style.left="0px";a.dom.style.zIndex="unset";t.renderer.onBeforeUpdate.add(()=>a.begin());t.renderer.onAfterUpdate.add(()=>a.end());
