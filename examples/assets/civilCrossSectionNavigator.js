import{C as B,L as M}from"./web-ifc-api-1K9lRohe.js";import{C as E,T as S,e as k,P as A,y as C,a as D,B as T}from"./index-3A2kWhNU.js";import{T as v}from"./index-BEvRfOoQ.js";import{w as x}from"./index-DWf1zJfV.js";import{S as I}from"./stats.min-GTpOrGrX.js";import{z as L,g as P,i as z,n as U,A as j}from"./index-DdJQ2AGj.js";import"./_commonjsHelpers-Cpj98o6Y.js";v.init();x.init();const y=document.getElementById("container"),e=new E,H=e.get(S),t=H.create();t.scene=new k(e);t.renderer=new L(e,y);t.camera=new A(e);e.init();t.scene.setup();t.camera.controls.setLookAt(5,5,5,0,0,0);y.appendChild(t.renderer.three2D.domElement);const N=e.get(C);N.create(t);t.scene.three.background=null;const b=e.get(D),W=await fetch("https://thatopen.github.io/engine_components/resources/road.frag"),_=await W.arrayBuffer(),F=new Uint8Array(_),d=b.load(F);t.scene.three.add(d);const R=await fetch("https://thatopen.github.io/engine_components/resources/road.json");d.setLocalProperties(await R.json());const f=document.getElementById("scene-2d-left");f.components=e;if(!f.world)throw new Error("World not found!");const c=e.get(P);c.world=f.world;await c.draw(d);const l=e.get(z);l.world=t;l.draw(d);const g=document.getElementById("scene-2d-right");g.components=e;if(!g.world)throw new Error("World not found!");const w=e.get(U);w.world=g.world;w.world3D=t;c.onMarkerChange.add(({alignment:o,percentage:n,type:r,curve:s})=>{if(l.setMarker(o,n,r),r==="select"){const i=s.alignment.absolute[s.index].mesh,m=o.getPointAt(n,"absolute");w.set(i,m)}});c.onHighlight.add(({mesh:o})=>{l.highlighter.select(o);const n=o.curve.index,r=o.curve.alignment.absolute[n];r.mesh.geometry.computeBoundingSphere();const s=r.mesh.geometry.boundingSphere;s&&t.camera.controls.fitToSphere(s,!0)});c.onMarkerHidden.add(({type:o})=>{l.hideMarker(o)});const h=e.get(T);h.byEntity(d);const q=h.list,p=e.get(j),u=p.styles.list;for(const o in q.entities){const n=h.find({entities:[o]}),r=new B(Math.random(),Math.random(),Math.random()),s=new M({color:r});p.styles.create(o,new Set,g.world,s);for(const i in n){const m=b.list.get(i);m&&(u[o].fragments[i]=new Set(n[i]),u[o].meshes.add(m.mesh))}}p.update(!0);const a=new I;a.showPanel(2);document.body.append(a.dom);a.dom.style.left="0px";a.dom.style.zIndex="unset";t.renderer.onBeforeUpdate.add(()=>a.begin());t.renderer.onAfterUpdate.add(()=>a.end());
