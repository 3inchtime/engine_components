var N=Object.defineProperty;var T=(t,o,e)=>o in t?N(t,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[o]=e;var d=(t,o,e)=>(T(t,typeof o!="symbol"?o+"":o,e),e);import{V as y,C as I,L as F}from"./web-ifc-api-BffFJDIm.js";import{J as R,A as U,p as V,C as W,i as _,o as j,a as H,u as Z,c as z}from"./index-DTZynfbV.js";import{p as G}from"./index-DyM33b1I.js";import{Z as J,C as Y}from"./index-CBtjarMM.js";import{S as $}from"./stats.min-GTpOrGrX.js";import{C as q}from"./index-C99EOg5B.js";import{R as K}from"./renderer-with-2d-Cgm5UgCK.js";import{E as O,C as Q}from"./index-Btpyp6vH.js";import"./import-wrapper-prod-BjFaIjiR.js";import"./Line2-Dv07buwS.js";import"./mark-B4GNnRgZ.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-DwmrAZ32.js";import"./index-fZR-42uS.js";const g=class g extends R{constructor(e){super(e);d(this,"world",null);d(this,"enabled",!0);d(this,"plane");d(this,"_world3D",null);this.components.add(g.uuid,this)}get world3D(){return this._world3D}set world3D(e){var i;if(this._world3D=e,(i=this.plane)==null||i.dispose(),!e)return;const n=this.components.get(U),a=n.Type;n.Type=O,this.plane=n.createFromNormalAndCoplanarPoint(e,new y(1,0,0),new y),n.Type=a,this.plane.visible=!1,this.plane.enabled=!1}async set(e,n){if(!this.world||!this.plane)throw new Error("You must set a world before using this component");this.plane.enabled=!0;const a=e.curve.getPercentageAt(n);if(a===null)return;const{startPoint:i,endPoint:k}=e.curve.getSegmentAt(a);if(e.geometry.index===null)throw new Error("Geometry must be indexed!");const w=new y;w.subVectors(k,i),w.normalize(),this.plane.setFromNormalAndCoplanarPoint(w,n),this.plane.edges.update();const P=this.plane.helper.matrix.clone();P.invert();const C=this.world.scene.three,x=this.plane.edges.get();for(const L in x){const{mesh:l}=x[L];l.position.set(0,0,0),l.rotation.set(0,0,0),l.updateMatrix(),l.applyMatrix4(P),l.parent!==C&&C.add(l)}this.plane.enabled=!1}};d(g,"uuid","96b2c87e-d90b-4639-8257-8f01136fe324");let b=g;G.init();J.init();const B=document.getElementById("container"),r=new V,X=r.get(W),s=X.create();s.scene=new _(r);s.renderer=new K(r,B);s.camera=new j(r);r.init();s.scene.setup();s.camera.controls.setLookAt(5,5,5,0,0,0);B.appendChild(s.renderer.three2D.domElement);const ee=r.get(H);ee.create(s);const S=r.get(Z),te=await fetch("https://thatopen.github.io/engine_components/resources/road.frag"),oe=await te.arrayBuffer(),ne=new Uint8Array(oe),m=S.load(ne);s.scene.three.add(m);const re=await fetch("https://thatopen.github.io/engine_components/resources/road.json");m.setLocalProperties(await re.json());const A=document.getElementById("scene-2d-left");A.components=r;if(!A.world)throw new Error("World not found!");const c=new q(r);c.world=A.world;await c.draw(m);const p=new Y(r);p.world=s;p.draw(m);p.highlighter.hoverCurve.material.color.set(1,1,1);const{material:f}=c.highlighter.hoverPoints;if(Array.isArray(f)){const t=f[0];"color"in t&&t.color.set(1,1,1)}else"color"in f&&f.color.set(1,1,1);c.onHighlight.add(({mesh:t})=>{p.highlighter.select(t);const o=t.curve.index,e=t.curve.alignment.absolute[o];e.mesh.geometry.computeBoundingSphere();const n=e.mesh.geometry.boundingSphere;n&&s.camera.controls.fitToSphere(n,!0)});const u=document.getElementById("scene-2d-right");u.components=r;if(!u.world)throw new Error("World not found!");const D=new b(r);D.world=u.world;D.world3D=s;c.onMarkerChange.add(({alignment:t,percentage:o,type:e,curve:n})=>{if(p.setMarker(t,o,e),e==="select"){const a=n.alignment.absolute[n.index].mesh,i=t.getPointAt(o,"absolute");D.set(a,i)}});c.onMarkerHidden.add(({type:t})=>{p.hideMarker(t)});const v=new z(r);v.byEntity(m);const se=v.list,E=r.get(Q),M=E.styles.list;for(const t in se.entities){const o=v.find({entities:[t]}),e=new I(Math.random(),Math.random(),Math.random()),n=new F({color:e});E.styles.create(t,new Set,u.world,n);for(const a in o){const i=S.list.get(a);i&&(M[t].fragments[a]=new Set(o[a]),M[t].meshes.add(i.mesh))}}E.update(!0);const h=new $;h.showPanel(2);document.body.append(h.dom);h.dom.style.left="0px";s.renderer.onBeforeUpdate.add(()=>h.begin());s.renderer.onAfterUpdate.add(()=>h.end());
