var I=Object.defineProperty;var N=(d,l,e)=>l in d?I(d,l,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[l]=e;var c=(d,l,e)=>(N(d,typeof l!="symbol"?l+"":l,e),e);import{M as v,c as E,d as S,e as T,I as j,T as K,C as D}from"./web-ifc-api-CmZKgq4q.js";import{S as H}from"./stats.min-GTpOrGrX.js";import{J as z,U as O,H as x,_ as A}from"./import-wrapper-prod-Cl9qVCJR.js";import{P as U}from"./index-CINZ6ccg.js";import{D as R}from"./types-BHr6GdIp.js";import{M as V}from"./mark-B0joXqB1.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./renderer-with-2d-RJhD6QVJ.js";const y=class y extends z{constructor(e){super(e);c(this,"selection",[]);c(this,"preview",new v(new E,new S({side:2,depthTest:!1,transparent:!0,opacity:.25,color:"#BCF124"})));c(this,"selectionMaterial",new S({side:2,depthTest:!1,transparent:!0,color:"#BCF124",opacity:.75}));c(this,"world");c(this,"onDisposed",new O);c(this,"_enabled",!1);c(this,"_currentSelelection",null);c(this,"create",()=>{if(!this.world)throw new Error("No world given to the face measurement!");if(!this.enabled||!this._currentSelelection)return;const e=this.world.scene.three,o=new E,t=new v(o,this.selectionMaterial);o.setAttribute("position",this.preview.geometry.attributes.position),e.add(t),o.computeBoundingSphere();const{area:s,perimeter:n}=this._currentSelelection,r=this.newLabel(o,s);t.add(r.three),this.selection.push({area:s,perimeter:n,mesh:t,label:r})});c(this,"onMouseMove",()=>{if(!this.world)throw new Error("The face measurement needs a world to work!");if(!this.enabled){this.unselect();return}const t=this.components.get(x).get(this.world).castRay();if(!t||!t.object||t.faceIndex===void 0){this.unselect();return}const{object:s,faceIndex:n}=t;s instanceof v||s instanceof j?this.updateSelection(s,n,t.instanceId):this.unselect()});c(this,"onKeydown",e=>{});this.components.add(y.uuid,this),this.preview.frustumCulled=!1}set enabled(e){if(!this.world)throw new Error("No world given for the Face measurement!");this._enabled=e,this.setupEvents(e),e?this.world.scene.three.add(this.preview):(this.preview.removeFromParent(),this.cancelCreation()),this.setVisibility(e)}get enabled(){return this._enabled}dispose(){this.setupEvents(!1),this.deleteAll(),this.preview.removeFromParent(),this.preview.material.dispose(),this.preview.geometry.dispose(),this.selectionMaterial.dispose(),this.onDisposed.trigger(),this.onDisposed.reset(),this.components=null}delete(){if(!this.world)throw new Error("No world given to the face measurement!");const e=this.selection.map(a=>a.mesh),s=this.components.get(x).get(this.world).castRay(e);if(!s||!s.object)return;const n=this.selection.find(a=>a.mesh===s.object);if(!n)return;n.mesh.removeFromParent(),n.mesh.geometry.dispose(),n.label.dispose();const r=this.selection.indexOf(n);this.selection.splice(r,1)}deleteAll(){for(const e of this.selection)e.mesh.removeFromParent(),e.mesh.geometry.dispose(),e.label.dispose();this.selection=[]}endCreation(){}cancelCreation(){}get(){const e=[];for(const o of this.selection){const t=o.mesh.geometry,{area:s,perimeter:n}=o,r=t.attributes.position.array;e.push({position:r,area:s,perimeter:n})}return e}set(e){if(!this.world)throw new Error("No world given to the face measurement!");const o=this.world.scene.three;for(const t of e){const s=new E,n=new v(s,this.selectionMaterial);o.add(n);const r=new T(t.position,3);s.setAttribute("position",r),s.computeBoundingSphere();const{area:a,perimeter:h}=t,m=this.newLabel(s,a);n.add(m.three),this.selection.push({area:a,perimeter:h,mesh:n,label:m})}}setupEvents(e){if(!this.world)throw new Error("The face measurement needs a world to work!");if(!this.world.renderer)throw new Error("The world of the face measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;e?(t.addEventListener("click",this.create),t.addEventListener("mousemove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown)):(t.removeEventListener("click",this.create),t.removeEventListener("mousemove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown))}setVisibility(e){if(!this.world)throw new Error("The face measurement needs a world to work!");const o=this.world.scene.three;for(const t of this.selection){const s=t.label.three;e?(o.add(t.mesh),t.mesh.add(s)):(t.mesh.removeFromParent(),s.removeFromParent())}}unselect(){this.preview.removeFromParent(),this._currentSelelection=null}updateSelection(e,o,t){if(!this.world)throw new Error("The face measurement needs a world to work!");this.world.scene.three.add(this.preview);const r=this.components.get(A).getFace(e,o,t);if(r===null){console.log("Hey!");return}const a=this.regenerateHighlight(e,r.indices,t);let h=0;for(const{distance:m}of r.edges)h+=m;this._currentSelelection={perimeter:h,area:a}}newLabel(e,o){if(!e.boundingSphere)throw new Error("Error computing area geometry");if(!this.world)throw new Error("The face measurement needs a world to work!");const{center:t}=e.boundingSphere,s=document.createElement("div");s.className=R;const n=Math.trunc(o*100)/100;s.textContent=n.toString();const r=new V(this.world,s);return r.three.position.copy(t),r}regenerateHighlight(e,o,t){const s=[],n=[];let r=0,a=0;const h=new K,m=this.components.get(A);for(const _ of o){const{p1:f,p2:g,p3:b}=m.getVerticesAndNormal(e,_,t);s.push(f.x,f.y,f.z),s.push(g.x,g.y,g.z),s.push(b.x,b.y,b.z),h.set(f,g,b),a+=h.getArea(),n.push(r,r+1,r+2),r+=3}const F=new Float32Array(s),P=new T(F,3);return this.preview.geometry.setAttribute("position",P),this.preview.geometry.setIndex(n),a}};c(y,"uuid","30279548-1309-44f6-aa97-ce26eed73522");let C=y;const G=document.getElementById("container"),i=new(void 0),L=new(void 0)(i);L.setup();i.scene=L;const u=new U(i,G);i.renderer=u;const k=new(void 0)(i);i.camera=k;i.raycaster=new(void 0)(i);i.init();u.postproduction.enabled=!0;k.controls.setLookAt(10,10,10,0,0,0);const J=new(void 0)(i,new D(6710886)),q=u.postproduction.customEffects;q.excludedMeshes.push(J.get());const w=new C(i),Q=new(void 0)(i),W=await fetch("../../../resources/small.frag"),X=await W.arrayBuffer(),Y=new Uint8Array(X);Q.load(Y);let M;window.addEventListener("keydown",d=>{d.code==="KeyO"?w.delete():d.code==="KeyS"?(M=w.get(),w.deleteAll()):d.code==="KeyL"&&M&&w.set(M)});const B=new(void 0)(i,{name:"Main Toolbar",position:"bottom"});B.addChild(w.uiElement.get("main"));i.ui.addToolbar(B);const p=new H;p.showPanel(2);document.body.append(p.dom);p.dom.style.left="0px";u.onBeforeUpdate.add(()=>p.begin());u.onAfterUpdate.add(()=>p.end());
